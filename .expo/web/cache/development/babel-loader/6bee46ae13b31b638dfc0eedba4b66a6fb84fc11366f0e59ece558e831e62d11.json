{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  muscleGroups: {\n    chest: {\n      recovery: 70\n    },\n    back: {\n      recovery: 30\n    },\n    shoulders: {\n      recovery: 50\n    },\n    biceps: {\n      recovery: 80\n    },\n    triceps: {\n      recovery: 75\n    },\n    forearms: {\n      recovery: 90\n    },\n    abs: {\n      recovery: 85\n    },\n    traps: {\n      recovery: 45\n    },\n    quads: {\n      recovery: 20\n    },\n    hamstrings: {\n      recovery: 25\n    },\n    calves: {\n      recovery: 95\n    },\n    glutes: {\n      recovery: 35\n    }\n  }\n};\nvar recoverySlice = createSlice({\n  name: 'recovery',\n  initialState: initialState,\n  reducers: {\n    updateMuscleRecovery: function updateMuscleRecovery(state, action) {\n      var _action$payload = action.payload,\n        muscle = _action$payload.muscle,\n        recovery = _action$payload.recovery;\n      if (state.muscleGroups[muscle]) {\n        state.muscleGroups[muscle].recovery = recovery;\n      }\n    },\n    resetRecovery: function resetRecovery(state) {\n      state.muscleGroups = initialState.muscleGroups;\n    }\n  }\n});\nvar _recoverySlice$action = recoverySlice.actions,\n  updateMuscleRecovery = _recoverySlice$action.updateMuscleRecovery,\n  resetRecovery = _recoverySlice$action.resetRecovery;\nexport { updateMuscleRecovery, resetRecovery };\nexport default recoverySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","muscleGroups","chest","recovery","back","shoulders","biceps","triceps","forearms","abs","traps","quads","hamstrings","calves","glutes","recoverySlice","name","reducers","updateMuscleRecovery","state","action","_action$payload","payload","muscle","resetRecovery","_recoverySlice$action","actions","reducer"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/redux/recoverySlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  muscleGroups: {\n    chest: { recovery: 70 },\n    back: { recovery: 30 },\n    shoulders: { recovery: 50 },\n    biceps: { recovery: 80 },\n    triceps: { recovery: 75 },\n    forearms: { recovery: 90 },\n    abs: { recovery: 85 },\n    traps: { recovery: 45 },\n    quads: { recovery: 20 },\n    hamstrings: { recovery: 25 },\n    calves: { recovery: 95 },\n    glutes: { recovery: 35 },\n  }\n};\n\nconst recoverySlice = createSlice({\n  name: 'recovery',\n  initialState,\n  reducers: {\n    updateMuscleRecovery: (state, action) => {\n      const { muscle, recovery } = action.payload;\n      if (state.muscleGroups[muscle]) {\n        state.muscleGroups[muscle].recovery = recovery;\n      }\n    },\n    resetRecovery: (state) => {\n      state.muscleGroups = initialState.muscleGroups;\n    }\n  }\n});\n\nexport const { updateMuscleRecovery, resetRecovery } = recoverySlice.actions;\nexport default recoverySlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE;IACZC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;IACvBC,IAAI,EAAE;MAAED,QAAQ,EAAE;IAAG,CAAC;IACtBE,SAAS,EAAE;MAAEF,QAAQ,EAAE;IAAG,CAAC;IAC3BG,MAAM,EAAE;MAAEH,QAAQ,EAAE;IAAG,CAAC;IACxBI,OAAO,EAAE;MAAEJ,QAAQ,EAAE;IAAG,CAAC;IACzBK,QAAQ,EAAE;MAAEL,QAAQ,EAAE;IAAG,CAAC;IAC1BM,GAAG,EAAE;MAAEN,QAAQ,EAAE;IAAG,CAAC;IACrBO,KAAK,EAAE;MAAEP,QAAQ,EAAE;IAAG,CAAC;IACvBQ,KAAK,EAAE;MAAER,QAAQ,EAAE;IAAG,CAAC;IACvBS,UAAU,EAAE;MAAET,QAAQ,EAAE;IAAG,CAAC;IAC5BU,MAAM,EAAE;MAAEV,QAAQ,EAAE;IAAG,CAAC;IACxBW,MAAM,EAAE;MAAEX,QAAQ,EAAE;IAAG;EACzB;AACF,CAAC;AAED,IAAMY,aAAa,GAAGhB,WAAW,CAAC;EAChCiB,IAAI,EAAE,UAAU;EAChBhB,YAAY,EAAZA,YAAY;EACZiB,QAAQ,EAAE;IACRC,oBAAoB,EAAE,SAAtBA,oBAAoBA,CAAGC,KAAK,EAAEC,MAAM,EAAK;MACvC,IAAAC,eAAA,GAA6BD,MAAM,CAACE,OAAO;QAAnCC,MAAM,GAAAF,eAAA,CAANE,MAAM;QAAEpB,QAAQ,GAAAkB,eAAA,CAARlB,QAAQ;MACxB,IAAIgB,KAAK,CAAClB,YAAY,CAACsB,MAAM,CAAC,EAAE;QAC9BJ,KAAK,CAAClB,YAAY,CAACsB,MAAM,CAAC,CAACpB,QAAQ,GAAGA,QAAQ;MAChD;IACF,CAAC;IACDqB,aAAa,EAAE,SAAfA,aAAaA,CAAGL,KAAK,EAAK;MACxBA,KAAK,CAAClB,YAAY,GAAGD,YAAY,CAACC,YAAY;IAChD;EACF;AACF,CAAC,CAAC;AAEK,IAAAwB,qBAAA,GAAgDV,aAAa,CAACW,OAAO;EAA7DR,oBAAoB,GAAAO,qBAAA,CAApBP,oBAAoB;EAAEM,aAAa,GAAAC,qBAAA,CAAbD,aAAa;AAA2B,SAAAN,oBAAA,EAAAM,aAAA;AAC7E,eAAeT,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}