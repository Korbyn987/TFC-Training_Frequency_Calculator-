{"ast":null,"code":"var urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\nvar customAlphabet = function customAlphabet(alphabet) {\n  var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;\n  return function () {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n    var id = '';\n    var i = size | 0;\n    while (i--) {\n      id += alphabet[Math.random() * alphabet.length | 0];\n    }\n    return id;\n  };\n};\nvar nanoid = function nanoid() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n  var id = '';\n  var i = size | 0;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};\nexport { nanoid, customAlphabet };","map":{"version":3,"names":["urlAlphabet","customAlphabet","alphabet","defaultSize","arguments","length","undefined","size","id","i","Math","random","nanoid"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/node_modules/@react-navigation/native/node_modules/nanoid/non-secure/index.js"],"sourcesContent":["// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n"],"mappings":"AAMA,IAAIA,WAAW,GACb,kEAAkE;AAEpE,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,QAAQ,EAAuB;EAAA,IAArBC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC9C,OAAO,YAAwB;IAAA,IAAvBG,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGD,WAAW;IACxB,IAAIK,EAAE,GAAG,EAAE;IAEX,IAAIC,CAAC,GAAGF,IAAI,GAAG,CAAC;IAChB,OAAOE,CAAC,EAAE,EAAE;MAEVD,EAAE,IAAIN,QAAQ,CAAEQ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,QAAQ,CAACG,MAAM,GAAI,CAAC,CAAC;IACvD;IACA,OAAOG,EAAE;EACX,CAAC;AACH,CAAC;AAED,IAAII,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAkB;EAAA,IAAdL,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACrB,IAAII,EAAE,GAAG,EAAE;EAEX,IAAIC,CAAC,GAAGF,IAAI,GAAG,CAAC;EAChB,OAAOE,CAAC,EAAE,EAAE;IAEVD,EAAE,IAAIR,WAAW,CAAEU,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAC;EAC7C;EACA,OAAOH,EAAE;AACX,CAAC;AAED,SAASI,MAAM,EAAEX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}