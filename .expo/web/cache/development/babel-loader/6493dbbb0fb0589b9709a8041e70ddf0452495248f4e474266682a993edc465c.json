{"ast":null,"code":"var _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/RecoveryGuideScreen.js\",\n  _this = this;\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { styles } from \"../styles/recoveryGuideStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar calculateRecovery = function calculateRecovery(lastWorkout) {\n  if (!lastWorkout) return 100;\n  var now = new Date();\n  var workoutDate = new Date(lastWorkout);\n  var hoursPassed = (now - workoutDate) / (1000 * 60 * 60);\n  var recoveryTime = 48;\n  var recoveryPercentage = Math.min(hoursPassed / recoveryTime * 100, 100);\n  return Math.round(recoveryPercentage);\n};\nvar MuscleRecoveryMeter = function MuscleRecoveryMeter(_ref) {\n  var lastWorkout = _ref.lastWorkout;\n  var value = calculateRecovery(lastWorkout);\n  var color;\n  var zoneText = \"\";\n  if (value <= 33) {\n    color = \"#FF4444\";\n    zoneText = \"Do not train\";\n  } else if (value <= 50) {\n    color = \"#FFBB33\";\n    zoneText = \"Caution!! Probably shouldn't train\";\n  } else if (value <= 66) {\n    color = \"#FFBB33\";\n    zoneText = \"Could train, but be careful\";\n  } else {\n    color = \"#00C851\";\n    zoneText = \"Safe to train\";\n  }\n  return _jsxDEV(View, {\n    style: styles.meterContainer,\n    children: [_jsxDEV(View, {\n      style: [styles.meter, {\n        backgroundColor: \"#e0e0e0\"\n      }],\n      children: _jsxDEV(View, {\n        style: [styles.meterFill, {\n          width: `${value}%`,\n          backgroundColor: color\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.zoneText,\n      children: zoneText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), lastWorkout && _jsxDEV(Text, {\n      style: styles.lastWorkoutText,\n      children: [\"Last workout: \", new Date(lastWorkout).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\nvar RecoveryGuideScreen = function RecoveryGuideScreen() {\n  var navigation = useNavigation();\n  var isAuthenticated = useSelector(function (state) {\n    return state.auth.isAuthenticated;\n  });\n  var muscleStatus = useSelector(function (state) {\n    return state.workout.muscleStatus;\n  });\n  var predefinedMuscleGroups = [\"Biceps\", \"Forearms\", \"Quads\", \"Hamstrings\", \"Triceps\", \"Abs\", \"Shoulders\", \"Traps\", \"Back\", \"Calves\", \"Glutes\", \"Chest\"];\n  var handleMusclePress = function handleMusclePress() {\n    if (!isAuthenticated) {\n      navigation.navigate(\"Login\");\n    }\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Recovery Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.subtitle,\n        children: isAuthenticated ? \"Monitor your muscle recovery status to optimize your training\" : \"Log in to track your workouts and monitor recovery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.muscleList,\n      children: predefinedMuscleGroups.map(function (muscleName, index) {\n        var muscleKey = muscleName.toLowerCase();\n        var muscleData = (muscleStatus == null ? void 0 : muscleStatus[muscleKey]) || {};\n        return _jsxDEV(TouchableOpacity, {\n          style: styles.muscleItem,\n          onPress: handleMusclePress,\n          disabled: isAuthenticated,\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, _this), _jsxDEV(View, {\n            style: styles.meterWrapper,\n            children: [_jsxDEV(MuscleRecoveryMeter, {\n              lastWorkout: muscleData.lastWorkout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, _this), !isAuthenticated && _jsxDEV(Text, {\n              style: styles.loginPrompt,\n              children: \"Login to track workouts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, _this);\n};\nexport default RecoveryGuideScreen;","map":{"version":3,"names":["React","View","Text","ScrollView","TouchableOpacity","useSelector","useNavigation","styles","jsxDEV","_jsxDEV","calculateRecovery","lastWorkout","now","Date","workoutDate","hoursPassed","recoveryTime","recoveryPercentage","Math","min","round","MuscleRecoveryMeter","_ref","value","color","zoneText","style","meterContainer","children","meter","backgroundColor","meterFill","width","fileName","_jsxFileName","lineNumber","columnNumber","_this","lastWorkoutText","toLocaleDateString","RecoveryGuideScreen","navigation","isAuthenticated","state","auth","muscleStatus","workout","predefinedMuscleGroups","handleMusclePress","navigate","container","header","title","subtitle","muscleList","map","muscleName","index","muscleKey","toLowerCase","muscleData","muscleItem","onPress","disabled","meterWrapper","loginPrompt"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/RecoveryGuideScreen.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, ScrollView, TouchableOpacity } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { styles } from \"../styles/recoveryGuideStyles\";\n\nconst calculateRecovery = (lastWorkout) => {\n  if (!lastWorkout) return 100; // If never worked, fully recovered\n\n  const now = new Date();\n  const workoutDate = new Date(lastWorkout);\n  const hoursPassed = (now - workoutDate) / (1000 * 60 * 60);\n\n  const recoveryTime = 48;\n  const recoveryPercentage = Math.min((hoursPassed / recoveryTime) * 100, 100);\n  return Math.round(recoveryPercentage);\n};\n\nconst MuscleRecoveryMeter = ({ lastWorkout }) => {\n  const value = calculateRecovery(lastWorkout);\n\n  let color;\n  let zoneText = \"\";\n  if (value <= 33) {\n    color = \"#FF4444\";\n    zoneText = \"Do not train\";\n  } else if (value <= 50) {\n    color = \"#FFBB33\";\n    zoneText = \"Caution!! Probably shouldn't train\";\n  } else if (value <= 66) {\n    color = \"#FFBB33\";\n    zoneText = \"Could train, but be careful\";\n  } else {\n    color = \"#00C851\";\n    zoneText = \"Safe to train\";\n  }\n\n  return (\n    <View style={styles.meterContainer}>\n      <View style={[styles.meter, { backgroundColor: \"#e0e0e0\" }]}>\n        <View\n          style={[\n            styles.meterFill,\n            {\n              width: `${value}%`,\n              backgroundColor: color,\n            },\n          ]}\n        />\n      </View>\n      <Text style={styles.zoneText}>{zoneText}</Text>\n      {lastWorkout && (\n        <Text style={styles.lastWorkoutText}>\n          Last workout: {new Date(lastWorkout).toLocaleDateString()}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst RecoveryGuideScreen = () => {\n  const navigation = useNavigation();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const muscleStatus = useSelector((state) => state.workout.muscleStatus);\n\n  const predefinedMuscleGroups = [\n    \"Biceps\",\n    \"Forearms\",\n    \"Quads\",\n    \"Hamstrings\",\n    \"Triceps\",\n    \"Abs\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n    \"Calves\",\n    \"Glutes\",\n    \"Chest\",\n  ];\n\n  const handleMusclePress = () => {\n    if (!isAuthenticated) {\n      navigation.navigate(\"Login\");\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Recovery Guide</Text>\n        <Text style={styles.subtitle}>\n          {isAuthenticated\n            ? \"Monitor your muscle recovery status to optimize your training\"\n            : \"Log in to track your workouts and monitor recovery\"}\n        </Text>\n      </View>\n\n      <View style={styles.muscleList}>\n        {predefinedMuscleGroups.map((muscleName, index) => {\n          const muscleKey = muscleName.toLowerCase();\n          const muscleData = muscleStatus?.[muscleKey] || {};\n\n          return (\n            <TouchableOpacity\n              key={index}\n              style={styles.muscleItem}\n              onPress={handleMusclePress}\n              disabled={isAuthenticated}\n            >\n              <Text style={styles.muscleName}>{muscleName}</Text>\n              <View style={styles.meterWrapper}>\n                <MuscleRecoveryMeter lastWorkout={muscleData.lastWorkout} />\n                {!isAuthenticated && (\n                  <Text style={styles.loginPrompt}>\n                    Login to track workouts\n                  </Text>\n                )}\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default RecoveryGuideScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}