{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\ProfileScreen.js\",\n  _this = this;\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"../styles/profileStyles\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport WorkoutPresets from \"../components/WorkoutPresets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var _route$params2;\n  var route = _ref.route;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userId = _useState2[0],\n    setUserId = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshKey = _useState8[0],\n    setRefreshKey = _useState8[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var fetchUserData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var userStr = yield AsyncStorage.getItem(\"user\");\n        if (userStr) {\n          var user = JSON.parse(userStr);\n          setUserId(user.id);\n          setUsername(user.username || user.name || \"\");\n          setEmail(user.email || \"\");\n        }\n      });\n      return function fetchUserData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchUserData();\n  }, []);\n  useEffect(function () {\n    var _route$params;\n    if (route != null && (_route$params = route.params) != null && _route$params.refreshHistory) {\n      setRefreshKey(function (prev) {\n        return prev + 1;\n      });\n      navigation.setParams({\n        refreshHistory: undefined\n      });\n    }\n  }, [route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.refreshHistory]);\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.profileHeader,\n      children: [_jsxDEV(View, {\n        style: styles.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.name,\n        children: username || \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.email,\n        children: email || \"email@example.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), _jsxDEV(WorkoutHistory, {\n      userId: userId\n    }, refreshKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), _jsxDEV(WorkoutPresets, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","Text","View","ScrollView","styles","WorkoutHistory","WorkoutPresets","AsyncStorage","useNavigation","jsxDEV","_jsxDEV","ProfileScreen","_ref","_route$params2","route","_useState","_useState2","_slicedToArray","userId","setUserId","_useState3","_useState4","username","setUsername","_useState5","_useState6","email","setEmail","_useState7","_useState8","refreshKey","setRefreshKey","navigation","fetchUserData","_ref2","_asyncToGenerator","userStr","getItem","user","JSON","parse","id","name","apply","arguments","_route$params","params","refreshHistory","prev","setParams","undefined","contentContainerStyle","container","children","style","profileHeader","avatar","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Text, View, ScrollView } from \"react-native\";\nimport { styles } from \"../styles/profileStyles\";\nimport WorkoutHistory from \"../components/WorkoutHistory\";\nimport WorkoutPresets from \"../components/WorkoutPresets\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst ProfileScreen = ({ route }) => {\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [refreshKey, setRefreshKey] = useState(0);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    // Try to get user_id, username, and email from AsyncStorage\n    const fetchUserData = async () => {\n      const userStr = await AsyncStorage.getItem(\"user\");\n      if (userStr) {\n        const user = JSON.parse(userStr);\n        setUserId(user.id);\n        setUsername(user.username || user.name || \"\");\n        setEmail(user.email || \"\");\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Refresh workout history if requested\n  useEffect(() => {\n    if (route?.params?.refreshHistory) {\n      setRefreshKey(prev => prev + 1);\n      navigation.setParams({ refreshHistory: undefined });\n    }\n  }, [route?.params?.refreshHistory]);\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      {/* Profile Header */}\n      <View style={styles.profileHeader}>\n        <View style={styles.avatar} />\n        <Text style={styles.name}>{username || \"Username\"}</Text>\n        <Text style={styles.email}>{email || \"email@example.com\"}</Text>\n      </View>\n      {/* Workout History Section */}\n      <WorkoutHistory userId={userId} key={refreshKey} />\n      {/* Workout Presets Section */}\n      <WorkoutPresets />\n    </ScrollView>\n  );\n};\n\nexport default ProfileScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}