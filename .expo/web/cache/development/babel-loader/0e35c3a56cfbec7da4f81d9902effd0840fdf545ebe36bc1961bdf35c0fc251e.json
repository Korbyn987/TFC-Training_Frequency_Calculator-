{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\App.web.js\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from \"./login/login\";\nimport CreateAccountScreen from \"./login/createAccount\";\nimport RecoveryScreen from \"./screens/RecoveryScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ExerciseScreen from \"./screens/ExerciseScreen\";\nimport WorkoutScreen from \"./screens/WorkoutScreen\";\nimport AboutScreen from \"./screens/AboutScreen\";\nimport CalculatorScreen from \"./screens/RecoveryGuideScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainApp() {\n  var _this = this;\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Exercise') {\n            iconName = focused ? 'barbell' : 'barbell-outline';\n          } else if (route.name === 'Workout') {\n            iconName = focused ? 'fitness' : 'fitness-outline';\n          } else if (route.name === 'About') {\n            iconName = focused ? 'information-circle' : 'information-circle-outline';\n          } else if (route.name === 'Calculator') {\n            iconName = focused ? 'calculator' : 'calculator-outline';\n          }\n          return _jsxDEV(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }, _this);\n        },\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'Home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'Profile'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Exercise\",\n      component: ExerciseScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'Exercise'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Workout\",\n      component: WorkoutScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'Workout'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'About'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Calculator\",\n      component: CalculatorScreen,\n      options: {\n        headerShown: true,\n        headerTitle: 'Recovery Guide'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nfunction PublicStack() {\n  return _jsxDEV(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"CreateAccount\",\n      component: CreateAccountScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"Recovery\",\n      component: RecoveryScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ResetPassword\",\n      component: ResetPasswordScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(NavigationContainer, {\n      children: _jsxDEV(Stack.Navigator, {\n        initialRouteName: \"Public\",\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Public\",\n          component: PublicStack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), _jsxDEV(Stack.Screen, {\n          name: \"MainApp\",\n          component: MainApp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Provider","store","Ionicons","LoginScreen","CreateAccountScreen","RecoveryScreen","ResetPasswordScreen","HomeScreen","ProfileScreen","ExerciseScreen","WorkoutScreen","AboutScreen","CalculatorScreen","jsxDEV","_jsxDEV","Stack","Tab","MainApp","_this","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","headerShown","headerTitle","PublicStack","App","initialRouteName"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/App.web.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Import screens\nimport LoginScreen from './login/login';\nimport CreateAccountScreen from './login/createAccount';\nimport RecoveryScreen from './screens/RecoveryScreen';\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ExerciseScreen from './screens/ExerciseScreen';\nimport WorkoutScreen from './screens/WorkoutScreen';\nimport AboutScreen from './screens/AboutScreen';\nimport CalculatorScreen from './screens/RecoveryGuideScreen';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// Protected routes that require authentication\nfunction MainApp() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Exercise') {\n            iconName = focused ? 'barbell' : 'barbell-outline';\n          } else if (route.name === 'Workout') {\n            iconName = focused ? 'fitness' : 'fitness-outline';\n          } else if (route.name === 'About') {\n            iconName = focused ? 'information-circle' : 'information-circle-outline';\n          } else if (route.name === 'Calculator') {\n            iconName = focused ? 'calculator' : 'calculator-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'Home'\n        }}\n      />\n      <Tab.Screen \n        name=\"Profile\" \n        component={ProfileScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'Profile'\n        }}\n      />\n      <Tab.Screen \n        name=\"Exercise\" \n        component={ExerciseScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'Exercise'\n        }}\n      />\n      <Tab.Screen \n        name=\"Workout\" \n        component={WorkoutScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'Workout'\n        }}\n      />\n      <Tab.Screen \n        name=\"About\" \n        component={AboutScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'About'\n        }}\n      />\n      <Tab.Screen \n        name=\"Calculator\" \n        component={CalculatorScreen}\n        options={{\n          headerShown: true,\n          headerTitle: 'Recovery Guide'\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\n// Public routes that don't require authentication\nfunction PublicStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n      <Stack.Screen name=\"CreateAccount\" component={CreateAccountScreen} />\n      <Stack.Screen name=\"Recovery\" component={RecoveryScreen} />\n      <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName=\"Public\"\n          screenOptions={{\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen name=\"Public\" component={PublicStack} />\n          <Stack.Screen name=\"MainApp\" component={MainApp} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}