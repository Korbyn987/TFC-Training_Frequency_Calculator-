{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport ButtonStyles from \"../styles/Button\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _route$params2;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params || {},\n    username = _ref2.username;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMuscles = _useState4[0],\n    setSelectedMuscles = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isWorkoutModalVisible = _useState6[0],\n    setIsWorkoutModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    workoutTimer = _useState8[0],\n    setWorkoutTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTimerRunning = _useState10[0],\n    setIsTimerRunning = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showWorkoutBanner = _useState12[0],\n    setShowWorkoutBanner = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    workoutHistory = _useState14[0],\n    setWorkoutHistory = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isRefreshing = _useState16[0],\n    setIsRefreshing = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    editMode = _useState18[0],\n    setEditMode = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedMuscle = _useState20[0],\n    setSelectedMuscle = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    editDays = _useState22[0],\n    setEditDays = _useState22[1];\n  var _useState23 = useState(0),\n    _useState24 = _slicedToArray(_useState23, 2),\n    streak = _useState24[0],\n    setStreak = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    achievements = _useState26[0],\n    setAchievements = _useState26[1];\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedGroup = _useState28[0],\n    setSelectedGroup = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    trainedMuscles = _useState30[0],\n    setTrainedMuscles = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    workoutInProgress = _useState32[0],\n    setWorkoutInProgress = _useState32[1];\n  var _useState33 = useState(null),\n    _useState34 = _slicedToArray(_useState33, 2),\n    savedWorkout = _useState34[0],\n    setSavedWorkout = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isWorkoutOptionsVisible = _useState36[0],\n    setIsWorkoutOptionsVisible = _useState36[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n  var MUSCLE_GROUPS = [].concat(UPPER_BODY, LOWER_BODY);\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref4 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: isAuthenticated ? _jsxDEV(_Fragment, {\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                marginRight: 8\n              }],\n              onPress: function onPress() {\n                return navigation.navigate(\"Calculator\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Calculator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                backgroundColor: \"#553c9a\"\n              }],\n              onPress: handleLogout,\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true) : _jsxDEV(TouchableOpacity, {\n            style: ButtonStyles.headerButton,\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsxDEV(Text, {\n              style: ButtonStyles.headerButtonText,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, _this);\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  useEffect(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.workout) {\n      setSavedWorkout(route.params.workout);\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.workout]);\n  useFocusEffect(React.useCallback(function () {\n    var loadSavedWorkout = function () {\n      var _ref8 = _asyncToGenerator(function* () {\n        var workoutStr = yield AsyncStorage.getItem('savedWorkout');\n        if (workoutStr) {\n          setSavedWorkout(JSON.parse(workoutStr));\n        } else {\n          setSavedWorkout(null);\n        }\n      });\n      return function loadSavedWorkout() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    loadSavedWorkout();\n  }, []));\n  useEffect(function () {\n    var checkWorkoutStatus = function () {\n      var _ref9 = _asyncToGenerator(function* () {\n        var inProgress = yield AsyncStorage.getItem('workoutInProgress');\n        if (inProgress === 'true') {\n          setWorkoutInProgress(true);\n          var musclesStr = yield AsyncStorage.getItem('selectedMuscles');\n          if (musclesStr) {\n            try {\n              var muscles = JSON.parse(musclesStr);\n              if (Array.isArray(muscles) && muscles.length > 0) {\n                setSelectedMuscles(muscles);\n              }\n            } catch (_unused) {}\n          }\n        } else {\n          setWorkoutInProgress(false);\n        }\n      });\n      return function checkWorkoutStatus() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    checkWorkoutStatus();\n  }, []);\n  useEffect(function () {\n    AsyncStorage.setItem('workoutInProgress', workoutInProgress ? 'true' : 'false');\n    if (workoutInProgress) {\n      AsyncStorage.setItem('selectedMuscles', JSON.stringify(selectedMuscles));\n    } else {\n      AsyncStorage.removeItem('selectedMuscles');\n    }\n  }, [workoutInProgress, selectedMuscles]);\n  useEffect(function () {\n    console.log('DEBUG: workoutInProgress', workoutInProgress);\n    console.log('DEBUG: selectedMuscles', selectedMuscles);\n    console.log('DEBUG: workoutHistory', workoutHistory);\n    console.log('DEBUG: isTimerRunning', isTimerRunning);\n    console.log('DEBUG: muscleData', muscleData);\n  }, [workoutInProgress, selectedMuscles, workoutHistory, isTimerRunning, muscleData]);\n  useEffect(function () {\n    if (workoutInProgress && selectedMuscles.length === 0 && workoutHistory.length > 0) {\n      var lastWorkout = workoutHistory[workoutHistory.length - 1];\n      if (lastWorkout && Array.isArray(lastWorkout.muscles) && lastWorkout.muscles.length > 0) {\n        setSelectedMuscles(lastWorkout.muscles);\n        console.log('DEBUG: Restored selectedMuscles from workoutHistory', lastWorkout.muscles);\n      }\n    }\n  }, [workoutInProgress, selectedMuscles, workoutHistory]);\n  var loadMuscleData = function () {\n    var _ref10 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      if (prev.includes(muscle)) {\n        return prev.filter(function (m) {\n          return m !== muscle;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [muscle]);\n    });\n  };\n  var clearMuscle = function clearMuscle(muscle) {\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var clearAllMuscles = function clearAllMuscles() {\n    setSelectedMuscles([]);\n  };\n  var startWorkout = function startWorkout() {\n    setIsWorkoutOptionsVisible(true);\n  };\n  var endWorkout = function () {\n    var _ref11 = _asyncToGenerator(function* () {\n      console.log(\"End Workout button pressed\");\n      setIsTimerRunning(false);\n      setWorkoutInProgress(false);\n      setSelectedMuscles([]);\n      if (!workoutInProgress || workoutHistory.length === 0) {\n        Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n        return;\n      }\n      var userId = user == null ? void 0 : user.id;\n      if (!userId) {\n        try {\n          var userStr = yield AsyncStorage.getItem(\"user\");\n          if (userStr) userId = JSON.parse(userStr).id;\n        } catch (e) {}\n      }\n      if (!userId) {\n        Alert.alert(\"User not found\", \"You must be logged in to save workouts.\");\n        return;\n      }\n      var currentTime = new Date().getTime();\n      var updatedMuscleData = _objectSpread({}, muscleData);\n      selectedMuscles.forEach(function (muscle) {\n        updatedMuscleData[muscle] = currentTime;\n      });\n      setMuscleData(updatedMuscleData);\n      yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(updatedMuscleData));\n      var lastWorkout = workoutHistory[workoutHistory.length - 1];\n      if (lastWorkout) {\n        lastWorkout = _objectSpread(_objectSpread({}, lastWorkout), {}, {\n          duration: workoutTimer,\n          endTime: new Date().toISOString(),\n          workoutName: lastWorkout.workoutName || (savedWorkout == null ? void 0 : savedWorkout.name) || \"Untitled Workout\",\n          exercises: lastWorkout.exercises || (savedWorkout == null ? void 0 : savedWorkout.exercises) || [],\n          notes: lastWorkout.notes || \"\"\n        });\n        setWorkoutHistory([].concat(_toConsumableArray(workoutHistory.slice(0, -1)), [lastWorkout]));\n        try {\n          yield axios.post(\"http://localhost:5001/api/closed_workouts\", {\n            user_id: userId,\n            workout_name: lastWorkout.workoutName,\n            exercises: lastWorkout.exercises,\n            start_time: lastWorkout.startTime,\n            end_time: lastWorkout.endTime,\n            duration: lastWorkout.duration,\n            notes: lastWorkout.notes\n          });\n          Alert.alert(\"Workout Saved\", \"Your workout has been saved to history.\");\n        } catch (err) {\n          console.error(\"Failed to save closed workout:\", err);\n          Alert.alert(\"Error\", \"Failed to save workout to server.\");\n        }\n      } else {\n        Alert.alert(\"No workout found\", \"Could not find workout data to save.\");\n      }\n      setWorkoutTimer(0);\n    });\n    return function endWorkout() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n  var renderMuscleItem = function renderMuscleItem(_ref13) {\n    var muscle = _ref13.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, _this);\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxDEV(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsxDEV(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return clearMuscle(muscle);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.chipText,\n              children: muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.clearAllButton,\n        onPress: clearAllMuscles,\n        children: _jsxDEV(Text, {\n          style: styles.clearAllText,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, _this);\n  };\n  var handleLogout = function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        dispatch(logout());\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var handleConfigureWorkout = function handleConfigureWorkout() {\n    setIsWorkoutOptionsVisible(false);\n    navigation.navigate('ConfigureWorkout', {\n      exercises: [],\n      workoutName: ''\n    });\n  };\n  var handleStartWorkout = function handleStartWorkout() {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n  var handleCloseModal = function handleCloseModal() {\n    setIsWorkoutModalVisible(false);\n  };\n  var handleMuscleSelectModal = function handleMuscleSelectModal(muscles) {\n    setSelectedMuscles(muscles);\n  };\n  var handleMuscleRemove = function handleMuscleRemove(muscle) {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }, _this),\n    children: [renderMuscleSelectionBanner(), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, _this), isAuthenticated && _jsxDEV(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsxDEV(Text, {\n          style: styles.logoutText,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.streakContainer,\n      children: [_jsxDEV(Ionicons, {\n        name: \"trophy\",\n        size: 24,\n        color: \"#FFD700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.streakText,\n        children: [streak, \" day streak!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.statsContainer,\n      children: [_jsxDEV(View, {\n        style: styles.statItem,\n        children: [_jsxDEV(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days >= 48;\n          }).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.statLabel,\n          children: \"Ready Muscles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.statItem,\n        children: [_jsxDEV(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days < 48;\n          }).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.statLabel,\n          children: \"Resting Muscles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, _this), savedWorkout && _jsxDEV(View, {\n      style: styles.configuredWorkoutSection,\n      children: [_jsxDEV(Text, {\n        style: styles.configuredWorkoutTitle,\n        children: \"Current Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: {\n          marginBottom: 8\n        },\n        children: savedWorkout.exercises.map(function (ex, idx) {\n          return _jsxDEV(View, {\n            style: styles.configuredWorkoutExerciseCard,\n            children: [_jsxDEV(Text, {\n              style: styles.configuredWorkoutExerciseName,\n              children: ex.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, _this), _jsxDEV(Text, {\n              style: styles.configuredWorkoutExerciseDesc,\n              children: ex.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, _this), ex.sets && ex.sets.length > 0 && _jsxDEV(View, {\n              style: {\n                marginTop: 4\n              },\n              children: ex.sets.map(function (set, setIdx) {\n                return _jsxDEV(View, {\n                  style: {\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    marginBottom: 2\n                  },\n                  children: [_jsxDEV(Text, {\n                    style: styles.configuredWorkoutSetText,\n                    children: [\"Set \", setIdx + 1, \": \", set.setType.charAt(0).toUpperCase() + set.setType.slice(1), \" | Reps: \", set.reps, \" \", set.weight ? `| Weight: ${set.weight}` : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 25\n                  }, _this), set.notes ? _jsxDEV(Text, {\n                    style: styles.configuredWorkoutSetNotes,\n                    children: [\"Notes: \", set.notes]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 38\n                  }, _this) : null]\n                }, setIdx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 23\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, _this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.configuredWorkoutEditButton,\n        onPress: function onPress() {\n          return navigation.navigate('ConfigureWorkout', {\n            exercises: (savedWorkout == null ? void 0 : savedWorkout.exercises) || [],\n            workoutName: (savedWorkout == null ? void 0 : savedWorkout.name) || ''\n          });\n        },\n        children: _jsxDEV(Text, {\n          style: styles.configuredWorkoutEditButtonText,\n          children: \"Edit Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 9\n    }, _this), _jsxDEV(View, {\n      style: [styles.quickActions, {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginTop: 32,\n        marginBottom: 24\n      }],\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.startWorkoutButton, {\n          opacity: 1\n        }],\n        onPress: startWorkout,\n        children: [_jsxDEV(Ionicons, {\n          name: \"barbell-outline\",\n          size: 24,\n          color: \"#ffffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.startWorkoutButton, {\n          backgroundColor: '#23263a',\n          borderWidth: 2,\n          borderColor: '#4CAF50',\n          marginLeft: 16,\n          flexDirection: 'row',\n          alignItems: 'center',\n          opacity: workoutInProgress ? 1 : 0.5\n        }],\n        onPress: function onPress() {\n          if (workoutInProgress) {\n            endWorkout();\n          } else {\n            Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n          }\n        },\n        disabled: !workoutInProgress,\n        children: [_jsxDEV(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\",\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, _this), _jsxDEV(Modal, {\n      visible: isWorkoutOptionsVisible,\n      transparent: true,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setIsWorkoutOptionsVisible(false);\n      },\n      children: _jsxDEV(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'rgba(0,0,0,0.4)'\n        },\n        children: _jsxDEV(View, {\n          style: {\n            backgroundColor: '#fff',\n            padding: 32,\n            borderRadius: 16,\n            alignItems: 'center',\n            width: 300\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: 'bold',\n              marginBottom: 24\n            },\n            children: \"Workout Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: [styles.button, {\n              marginBottom: 16\n            }],\n            onPress: handleConfigureWorkout,\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Configure Workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.secondaryButton,\n            onPress: function onPress() {\n              return setIsWorkoutOptionsVisible(false);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, _this);\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","useFocusEffect","ButtonStyles","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_ref","_route$params2","route","navigation","_ref2","params","username","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","selectedMuscles","setSelectedMuscles","_useState5","_useState6","isWorkoutModalVisible","setIsWorkoutModalVisible","_useState7","_useState8","workoutTimer","setWorkoutTimer","_useState9","_useState10","isTimerRunning","setIsTimerRunning","_useState11","_useState12","showWorkoutBanner","setShowWorkoutBanner","_useState13","_useState14","workoutHistory","setWorkoutHistory","_useState15","_useState16","isRefreshing","setIsRefreshing","_useState17","_useState18","editMode","setEditMode","_useState19","_useState20","selectedMuscle","setSelectedMuscle","_useState21","_useState22","editDays","setEditDays","_useState23","_useState24","streak","setStreak","_useState25","_useState26","achievements","setAchievements","_useState27","_useState28","selectedGroup","setSelectedGroup","_useState29","_useState30","trainedMuscles","setTrainedMuscles","_useState31","_useState32","workoutInProgress","setWorkoutInProgress","_useState33","_useState34","savedWorkout","setSavedWorkout","_useState35","_useState36","isWorkoutOptionsVisible","setIsWorkoutOptionsVisible","_useSelector","state","auth","isAuthenticated","user","dispatch","workoutTimerRef","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","concat","getStatus","days","loadStreak","_ref3","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref4","value","setItem","toString","_x","updateStreak","_ref5","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref6","savedAchievements","JSON","parse","_ref7","currentStreak","prevAchievements","newAchievements","includes","push","length","_toConsumableArray","stringify","loadMuscleData","setOptions","headerRight","style","flexDirection","children","headerButton","marginRight","onPress","navigate","headerButtonText","fileName","_jsxFileName","lineNumber","columnNumber","_this","backgroundColor","handleLogout","_route$params","workout","useCallback","loadSavedWorkout","_ref8","workoutStr","checkWorkoutStatus","_ref9","inProgress","musclesStr","muscles","Array","isArray","_unused","removeItem","log","_ref10","savedData","initialData","reduce","acc","muscle","alert","handleMuscleSelect","prev","filter","m","clearMuscle","clearAllMuscles","startWorkout","endWorkout","_ref11","userId","id","userStr","e","currentTime","getTime","updatedMuscleData","_objectSpread","forEach","duration","endTime","workoutName","name","exercises","notes","slice","post","user_id","workout_name","start_time","startTime","end_time","err","handleEdit","saveEdit","_ref12","isNaN","newData","_defineProperty","cancelEdit","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","setInterval","clearInterval","renderMuscleItem","_ref13","item","status","muscleButton","onLongPress","transform","scale","muscleStatus","muscleName","daysContainer","daysText","editButton","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","chipText","clearAllButton","clearAllText","_ref14","clear","reset","routes","handleConfigureWorkout","handleStartWorkout","handleCloseModal","handleMuscleSelectModal","handleMuscleRemove","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","logoutButton","logoutText","streakContainer","streakText","statsContainer","statItem","statNumber","Object","values","statLabel","configuredWorkoutSection","configuredWorkoutTitle","marginBottom","ex","idx","configuredWorkoutExerciseCard","configuredWorkoutExerciseName","configuredWorkoutExerciseDesc","description","sets","marginTop","set","setIdx","justifyContent","configuredWorkoutSetText","setType","charAt","toUpperCase","reps","weight","configuredWorkoutSetNotes","configuredWorkoutEditButton","configuredWorkoutEditButtonText","quickActions","startWorkoutButton","opacity","buttonText","borderWidth","borderColor","marginLeft","alignItems","disabled","button","secondaryButton","position","bottom","left","right","visible","transparent","animationType","onRequestClose","flex","padding","borderRadius","width","fontSize","fontWeight","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport ButtonStyles from \"../styles/Button\";\nimport axios from \"axios\";\n\nconst HomeScreen = ({ route, navigation }) => {\n  const { username } = route.params || {};\n  const [muscleData, setMuscleData] = useState({});\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\n  const [workoutTimer, setWorkoutTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showWorkoutBanner, setShowWorkoutBanner] = useState(false);\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const [savedWorkout, setSavedWorkout] = useState(null);\n  const [isWorkoutOptionsVisible, setIsWorkoutOptionsVisible] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const workoutTimerRef = useRef(null);\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n\n  const MUSCLE_GROUPS = [...UPPER_BODY, ...LOWER_BODY];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: \"row\" }}>\n          {isAuthenticated ? (\n            <>\n              <TouchableOpacity\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\n                onPress={() => navigation.navigate(\"Calculator\")}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  ButtonStyles.headerButton,\n                  { backgroundColor: \"#553c9a\" },\n                ]}\n                onPress={handleLogout}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <TouchableOpacity\n              style={ButtonStyles.headerButton}\n              onPress={() => navigation.navigate(\"Login\")}\n            >\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ),\n    });\n  }, [navigation, isAuthenticated]);\n\n  useEffect(() => {\n    if (route.params?.workout) {\n      setSavedWorkout(route.params.workout);\n    }\n  }, [route.params?.workout]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const loadSavedWorkout = async () => {\n        const workoutStr = await AsyncStorage.getItem('savedWorkout');\n        if (workoutStr) {\n          setSavedWorkout(JSON.parse(workoutStr));\n        } else {\n          setSavedWorkout(null);\n        }\n      };\n      loadSavedWorkout();\n    }, [])\n  );\n\n  useEffect(() => {\n    const checkWorkoutStatus = async () => {\n      const inProgress = await AsyncStorage.getItem('workoutInProgress');\n      if (inProgress === 'true') {\n        setWorkoutInProgress(true);\n        // Defensive: restore selected muscles if possible\n        const musclesStr = await AsyncStorage.getItem('selectedMuscles');\n        if (musclesStr) {\n          try {\n            const muscles = JSON.parse(musclesStr);\n            if (Array.isArray(muscles) && muscles.length > 0) {\n              setSelectedMuscles(muscles);\n            }\n          } catch {}\n        }\n      } else {\n        setWorkoutInProgress(false);\n      }\n    };\n    checkWorkoutStatus();\n  }, []);\n\n  useEffect(() => {\n    AsyncStorage.setItem('workoutInProgress', workoutInProgress ? 'true' : 'false');\n    if (workoutInProgress) {\n      AsyncStorage.setItem('selectedMuscles', JSON.stringify(selectedMuscles));\n    } else {\n      AsyncStorage.removeItem('selectedMuscles');\n    }\n  }, [workoutInProgress, selectedMuscles]);\n\n  useEffect(() => {\n    console.log('DEBUG: workoutInProgress', workoutInProgress);\n    console.log('DEBUG: selectedMuscles', selectedMuscles);\n    console.log('DEBUG: workoutHistory', workoutHistory);\n    console.log('DEBUG: isTimerRunning', isTimerRunning);\n    console.log('DEBUG: muscleData', muscleData);\n  }, [workoutInProgress, selectedMuscles, workoutHistory, isTimerRunning, muscleData]);\n\n  useEffect(() => {\n    if (workoutInProgress && selectedMuscles.length === 0 && workoutHistory.length > 0) {\n      const lastWorkout = workoutHistory[workoutHistory.length - 1];\n      if (lastWorkout && Array.isArray(lastWorkout.muscles) && lastWorkout.muscles.length > 0) {\n        setSelectedMuscles(lastWorkout.muscles);\n        console.log('DEBUG: Restored selectedMuscles from workoutHistory', lastWorkout.muscles);\n      }\n    }\n  }, [workoutInProgress, selectedMuscles, workoutHistory]);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscles((prev) => {\n      // If the muscle is already selected, remove it\n      if (prev.includes(muscle)) {\n        return prev.filter((m) => m !== muscle);\n      }\n      // Otherwise, add it to the selection\n      return [...prev, muscle];\n    });\n  };\n\n  const clearMuscle = (muscle) => {\n    setSelectedMuscles((prev) => prev.filter((m) => m !== muscle));\n  };\n\n  const clearAllMuscles = () => {\n    setSelectedMuscles([]);\n  };\n\n  const startWorkout = () => {\n    setIsWorkoutOptionsVisible(true);\n  };\n\n  const endWorkout = async () => {\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    setSelectedMuscles([]);\n    // Defensive: If no workout in progress, do nothing\n    if (!workoutInProgress || workoutHistory.length === 0) {\n      Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n      return;\n    }\n\n    // Defensive: get user info\n    let userId = user?.id;\n    if (!userId) {\n      try {\n        const userStr = await AsyncStorage.getItem(\"user\");\n        if (userStr) userId = JSON.parse(userStr).id;\n      } catch (e) {}\n    }\n    if (!userId) {\n      Alert.alert(\"User not found\", \"You must be logged in to save workouts.\");\n      return;\n    }\n\n    // Update the last workout time for selected muscles\n    const currentTime = new Date().getTime();\n    const updatedMuscleData = { ...muscleData };\n    selectedMuscles.forEach((muscle) => {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n    await AsyncStorage.setItem(\"muscleData\", JSON.stringify(updatedMuscleData));\n\n    // Update the workout history with duration\n    let lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout = {\n        ...lastWorkout,\n        duration: workoutTimer,\n        endTime: new Date().toISOString(),\n        workoutName: lastWorkout.workoutName || savedWorkout?.name || \"Untitled Workout\",\n        exercises: lastWorkout.exercises || savedWorkout?.exercises || [],\n        notes: lastWorkout.notes || \"\",\n      };\n      setWorkoutHistory([...workoutHistory.slice(0, -1), lastWorkout]);\n      // Save closed workout to backend\n      try {\n        await axios.post(\"http://localhost:5001/api/closed_workouts\", {\n          user_id: userId,\n          workout_name: lastWorkout.workoutName,\n          exercises: lastWorkout.exercises,\n          start_time: lastWorkout.startTime,\n          end_time: lastWorkout.endTime,\n          duration: lastWorkout.duration,\n          notes: lastWorkout.notes,\n        });\n        Alert.alert(\"Workout Saved\", \"Your workout has been saved to history.\");\n      } catch (err) {\n        console.error(\"Failed to save closed workout:\", err);\n        Alert.alert(\"Error\", \"Failed to save workout to server.\");\n      }\n    } else {\n      Alert.alert(\"No workout found\", \"Could not find workout data to save.\");\n    }\n\n    // Reset workout timer and selection\n    setWorkoutTimer(0);\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n\n  useEffect(() => {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(() => {\n        setWorkoutTimer((prev) => prev + 1);\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n\n    return () => {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMuscleSelect(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => clearMuscle(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <TouchableOpacity\n          style={styles.clearAllButton}\n          onPress={clearAllMuscles}\n        >\n          <Text style={styles.clearAllText}>Clear All</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const handleLogout = async () => {\n    try {\n      await AsyncStorage.clear();\n      dispatch(logout());\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Login' }],\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const handleConfigureWorkout = () => {\n    setIsWorkoutOptionsVisible(false);\n    navigation.navigate('ConfigureWorkout', {\n      exercises: [], // Start with empty or last used\n      workoutName: '',\n    });\n  };\n\n  const handleStartWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsWorkoutModalVisible(false);\n  };\n\n  const handleMuscleSelectModal = (muscles) => {\n    setSelectedMuscles(muscles);\n  };\n\n  const handleMuscleRemove = (muscle) => {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(prev => prev.filter(m => m !== muscle));\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {renderMuscleSelectionBanner()}\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n        {isAuthenticated && (\n          <TouchableOpacity\n            style={styles.logoutButton}\n            onPress={handleLogout}\n          >\n            <Text style={styles.logoutText}>Logout</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {/* Streak Counter */}\n      <View style={styles.streakContainer}>\n        <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n        <Text style={styles.streakText}>{streak} day streak!</Text>\n      </View>\n\n      {/* Quick Stats */}\n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days >= 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Ready Muscles</Text>\n        </View>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days < 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Resting Muscles</Text>\n        </View>\n      </View>\n\n      {/* Current Workout Section */}\n      {savedWorkout && (\n        <View style={styles.configuredWorkoutSection}>\n          <Text style={styles.configuredWorkoutTitle}>Current Workout</Text>\n          <View style={{marginBottom: 8}}>\n            {savedWorkout.exercises.map((ex, idx) => (\n              <View key={idx} style={styles.configuredWorkoutExerciseCard}>\n                <Text style={styles.configuredWorkoutExerciseName}>{ex.name}</Text>\n                <Text style={styles.configuredWorkoutExerciseDesc}>{ex.description}</Text>\n                {ex.sets && ex.sets.length > 0 && (\n                  <View style={{marginTop: 4}}>\n                    {ex.sets.map((set, setIdx) => (\n                      <View key={setIdx} style={{flexDirection: 'row', justifyContent: 'space-between', marginBottom: 2}}>\n                        <Text style={styles.configuredWorkoutSetText}>\n                          Set {setIdx+1}: {set.setType.charAt(0).toUpperCase() + set.setType.slice(1)} | Reps: {set.reps} {set.weight ? `| Weight: ${set.weight}` : ''}\n                        </Text>\n                        {set.notes ? <Text style={styles.configuredWorkoutSetNotes}>Notes: {set.notes}</Text> : null}\n                      </View>\n                    ))}\n                  </View>\n                )}\n              </View>\n            ))}\n          </View>\n          <TouchableOpacity\n            style={styles.configuredWorkoutEditButton}\n            onPress={() => navigation.navigate('ConfigureWorkout', {\n              exercises: savedWorkout?.exercises || [],\n              workoutName: savedWorkout?.name || '',\n            })}\n          >\n            <Text style={styles.configuredWorkoutEditButtonText}>Edit Workout</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      {/* Quick Actions */}\n      <View style={[styles.quickActions, { flexDirection: 'row', justifyContent: 'center', marginTop: 32, marginBottom: 24 }]}> \n        <TouchableOpacity\n          style={[\n            styles.startWorkoutButton,\n            { opacity: 1 },\n          ]}\n          onPress={startWorkout}\n        >\n          <Ionicons name=\"barbell-outline\" size={24} color=\"#ffffff\" />\n          <Text style={styles.buttonText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.startWorkoutButton,\n            {\n              backgroundColor: '#23263a', // App theme: dark card\n              borderWidth: 2,\n              borderColor: '#4CAF50', // Green border for accent\n              marginLeft: 16,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: workoutInProgress ? 1 : 0.5, // PATCH: allow end button if workoutInProgress\n            },\n          ]}\n          onPress={() => {\n            if (workoutInProgress) {\n              endWorkout();\n            } else {\n              Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n            }\n          }}\n          disabled={!workoutInProgress} // PATCH: only require workoutInProgress\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" style={{ marginRight: 10 }} />\n          <Text style={styles.buttonText}>End Workout</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      <Modal\n        visible={isWorkoutOptionsVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setIsWorkoutOptionsVisible(false)}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0,0,0,0.4)' }}>\n          <View style={{ backgroundColor: '#fff', padding: 32, borderRadius: 16, alignItems: 'center', width: 300 }}>\n            <Text style={{ fontSize: 20, fontWeight: 'bold', marginBottom: 24 }}>Workout Options</Text>\n            <TouchableOpacity style={[styles.button, { marginBottom: 16 }]} onPress={handleConfigureWorkout}>\n              <Text style={styles.buttonText}>Configure Workout</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.secondaryButton} onPress={() => setIsWorkoutOptionsVisible(false)}>\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}