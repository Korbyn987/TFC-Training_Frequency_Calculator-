{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\AddExerciseScreen.js\",\n  _this = this;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getExercises, getMuscleGroups, initDatabase } from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AddExerciseScreen = function AddExerciseScreen(_ref) {\n  var _route$params2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _ref2 = (route == null ? void 0 : route.params) || {},\n    muscleGroup = _ref2.muscleGroup,\n    muscleGroupId = _ref2.muscleGroupId,\n    previousExercises = _ref2.previousExercises,\n    returnToPreset = _ref2.returnToPreset;\n  var safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  var _useState = useState(safePreviousExercises),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedExercises = _useState2[0],\n    setSelectedExercises = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(\"All\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeGroup = _useState6[0],\n    setActiveGroup = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    muscleGroups = _useState8[0],\n    setMuscleGroups = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    exercises = _useState10[0],\n    setExercises = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    error = _useState14[0],\n    setError = _useState14[1];\n  useFocusEffect(useCallback(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.newExerciseToAdd) {\n      var exerciseToAdd = route.params.newExerciseToAdd;\n      navigation.setParams({\n        newExerciseToAdd: undefined\n      });\n      navigation.navigate(\"ConfigureWorkout\", {\n        addExercise: exerciseToAdd\n      });\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.newExerciseToAdd]));\n  useEffect(function () {\n    console.log('[AddExerciseScreen] useEffect route.params:', route.params);\n    var _ref3 = route.params || {},\n      muscleGroup = _ref3.muscleGroup,\n      muscleGroupId = _ref3.muscleGroupId;\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route.params]);\n  useEffect(function () {\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n  var getPlatform = function getPlatform() {\n    try {\n      return Platform.OS;\n    } catch (_unused) {\n      return 'web';\n    }\n  };\n  var loadData = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var _route$params3;\n        setLoading(true);\n        setError(null);\n        console.log('[AddExerciseScreen] Loading data...');\n        var dbInitialized = yield initDatabase();\n        if (!dbInitialized) {\n          throw new Error(\"Failed to initialize database\");\n        }\n        var groups;\n        if (getPlatform() === \"web\") {\n          var _require = require(\"../database/database\"),\n            STATIC_MUSCLE_GROUPS = _require.STATIC_MUSCLE_GROUPS;\n          groups = STATIC_MUSCLE_GROUPS;\n        } else {\n          groups = yield getMuscleGroups();\n        }\n        setMuscleGroups(groups || []);\n        var exercisesData;\n        if (getPlatform() === \"web\") {\n          var _require2 = require(\"../database/database\"),\n            STATIC_EXERCISES = _require2.STATIC_EXERCISES;\n          exercisesData = STATIC_EXERCISES;\n        } else {\n          exercisesData = yield getExercises();\n        }\n        if ((_route$params3 = route.params) != null && _route$params3.muscleGroupId) {\n          var filteredExercises = (exercisesData || []).filter(function (exercise) {\n            return exercise.muscle_group_id === route.params.muscleGroupId;\n          });\n          setExercises(filteredExercises);\n          console.log('[AddExerciseScreen] Filtered exercises:', filteredExercises);\n        } else {\n          setExercises(exercisesData || []);\n          console.log('[AddExerciseScreen] All exercises:', exercisesData);\n        }\n        setLoading(false);\n        console.log('[AddExerciseScreen] Data load complete.');\n      } catch (err) {\n        setError(\"Error loading data: \" + err);\n        setLoading(false);\n        console.error('[AddExerciseScreen] Error loading data:', err);\n      }\n    });\n    return function loadData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var loadExercises = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setError(null);\n        console.log(\"Loading exercises for muscleGroupId:\", muscleGroupId, \"activeGroup:\", activeGroup);\n        var exerciseData = yield getExercises(activeGroup === \"All\" ? null : activeGroup);\n        setExercises(exerciseData);\n        if (activeGroup === \"All\") {\n          getExercises().then(setExercises);\n        } else {\n          getExercises(activeGroup).then(setExercises);\n        }\n      } catch (err) {}\n      var handleSelectExercise = function handleSelectExercise(exercise) {\n        setSelectedExercises(function (prev) {\n          if (prev.find(function (e) {\n            return e.id === exercise.id;\n          })) {\n            return prev.filter(function (e) {\n              return e.id !== exercise.id;\n            });\n          }\n          return [].concat(_toConsumableArray(prev), [exercise]);\n        });\n      };\n      var handleSaveExercises = function handleSaveExercises() {\n        var toAdd = selectedExercises.filter(function (ex) {\n          return !safePreviousExercises.some(function (prev) {\n            return prev.id === ex.id;\n          });\n        });\n        if (route.params && route.params.returnToPreset) {\n          navigation.navigate({\n            name: \"Profile\",\n            params: {\n              selectedExercisesForPreset: _toConsumableArray(selectedExercises),\n              showPresetModal: true\n            },\n            merge: true\n          });\n        } else if (toAdd.length > 0) {\n          navigation.navigate(\"ConfigureWorkout\", {\n            addExercises: toAdd\n          });\n        } else {\n          navigation.goBack();\n        }\n      };\n      var safeExercises = Array.isArray(exercises) ? exercises : [];\n      var filteredExercises = function filteredExercises() {\n        var query = searchQuery.toLowerCase();\n        var filtered = safeExercises;\n        if (activeGroup !== 'All') {\n          filtered = filtered.filter(function (exercise) {\n            return exercise.muscle_group_id === activeGroup || exercise.muscle_group === activeGroup;\n          });\n        }\n        if (query.length > 0) {\n          filtered = filtered.filter(function (exercise) {\n            return exercise.name.toLowerCase().includes(query);\n          });\n        }\n        console.log('[AddExerciseScreen] Filtered exercises:', filtered.length, 'activeGroup:', activeGroup, 'query:', query);\n        return filtered;\n      };\n      var renderMuscleGroupButton = function renderMuscleGroupButton(group) {\n        return _jsxDEV(TouchableOpacity, {\n          style: [styles.groupButton, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButton],\n          onPress: function onPress() {\n            console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n            setActiveGroup(group ? group.id : \"All\");\n          },\n          children: _jsxDEV(Text, {\n            style: [styles.groupButtonText, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButtonText],\n            children: group ? group.name : \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, _this)\n        }, group ? group.id : \"all\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 5\n        }, _this);\n      };\n      var renderExerciseItem = function renderExerciseItem(_ref6) {\n        var item = _ref6.item;\n        console.log('[AddExerciseScreen] Rendering exercise:', item.name, item.id);\n        return _jsxDEV(TouchableOpacity, {\n          style: [styles.exerciseItem, selectedExercises.find(function (e) {\n            return e.id === item.id;\n          }) && styles.selectedExerciseItem],\n          onPress: function onPress() {\n            return handleSelectExercise(item);\n          },\n          children: [_jsxDEV(View, {\n            style: styles.exerciseContent,\n            children: [_jsxDEV(Text, {\n              style: [styles.exerciseText, selectedExercises.find(function (e) {\n                return e.id === item.id;\n              }) && styles.selectedExerciseText],\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }, _this), item.description && _jsxDEV(Text, {\n              style: styles.exerciseDescription,\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 9\n          }, _this), selectedExercises.find(function (e) {\n            return e.id === item.id;\n          }) && _jsxDEV(Ionicons, {\n            name: \"checkmark-circle\",\n            size: 24,\n            color: \"#6b46c1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }, _this);\n      };\n      if (loading) {\n        console.log('[AddExerciseScreen] Loading UI');\n        return _jsxDEV(View, {\n          style: styles.loadingContainer,\n          children: [_jsxDEV(ActivityIndicator, {\n            size: \"large\",\n            color: \"#6b46c1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 9\n          }, _this), _jsxDEV(Text, {\n            style: {\n              color: '#fff',\n              marginTop: 16\n            },\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }, _this);\n      }\n      if (error) {\n        console.error('[AddExerciseScreen] Render error:', error);\n        return _jsxDEV(View, {\n          style: styles.errorContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.errorText,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 9\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.retryButton,\n            onPress: loadData,\n            children: _jsxDEV(Text, {\n              style: styles.retryButtonText,\n              children: \"Retry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 7\n        }, _this);\n      }\n      if (!muscleGroups || muscleGroups.length === 0) {\n        console.warn('[AddExerciseScreen] No muscle groups loaded');\n        return _jsxDEV(View, {\n          style: styles.errorContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.errorText,\n            children: \"No muscle groups found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.retryButton,\n            onPress: loadData,\n            children: _jsxDEV(Text, {\n              style: styles.retryButtonText,\n              children: \"Retry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }, _this);\n      }\n      if (!exercises || exercises.length === 0) {\n        console.warn('[AddExerciseScreen] No exercises loaded');\n        return _jsxDEV(View, {\n          style: styles.errorContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.errorText,\n            children: \"No exercises found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 9\n          }, _this), _jsxDEV(TouchableOpacity, {\n            style: styles.retryButton,\n            onPress: loadData,\n            children: _jsxDEV(Text, {\n              style: styles.retryButtonText,\n              children: \"Retry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 7\n        }, _this);\n      }\n      var safeMuscleGroups = Array.isArray(muscleGroups) ? muscleGroups : [];\n      var filtered = filteredExercises();\n      if (filtered.length === 0) {\n        console.warn('[AddExerciseScreen] No exercises match filter:', searchQuery, activeGroup);\n      }\n      if (safeExercises.length > 0) {\n        console.log('[AddExerciseScreen] First exercise object:', safeExercises[0]);\n      }\n      console.log('[AddExerciseScreen] Filtered array:', filtered);\n      return _jsxDEV(View, {\n        style: styles.container,\n        children: [_jsxDEV(View, {\n          style: {\n            backgroundColor: '#333',\n            padding: 8,\n            margin: 8,\n            borderRadius: 8\n          },\n          children: [_jsxDEV(Text, {\n            style: {\n              color: '#fff'\n            },\n            children: [\"Debug: \", filtered.length, \" exercises shown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 9\n          }, _this), filtered.length > 0 && _jsxDEV(Text, {\n            style: {\n              color: '#fff',\n              fontSize: 12\n            },\n            children: [\"First item key: \", filtered[0].id ? filtered[0].id.toString() : 'NO ID']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 7\n        }, _this), _jsxDEV(View, {\n          style: styles.searchContainer,\n          children: [_jsxDEV(Ionicons, {\n            name: \"search\",\n            size: 20,\n            color: \"#666\",\n            style: styles.searchIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 9\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.searchInput,\n            placeholder: \"Search exercises...\",\n            placeholderTextColor: \"#666\",\n            value: searchQuery,\n            onChangeText: setSearchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 7\n        }, _this), _jsxDEV(View, {\n          style: styles.groupButtonContainer,\n          children: [renderMuscleGroupButton(null), safeMuscleGroups.map(function (group) {\n            return renderMuscleGroupButton(group);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 7\n        }, _this), _jsxDEV(FlatList, {\n          data: filtered,\n          renderItem: renderExerciseItem,\n          keyExtractor: function keyExtractor(item, index) {\n            return item.id ? item.id.toString() : index.toString();\n          },\n          style: [styles.list, {\n            backgroundColor: '#222',\n            minHeight: 200\n          }],\n          contentContainerStyle: styles.listContent,\n          ListEmptyComponent: _jsxDEV(Text, {\n            style: {\n              color: '#fff',\n              textAlign: 'center',\n              marginTop: 32\n            },\n            children: \"No exercises found for this filter.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 7\n        }, _this), _jsxDEV(TouchableOpacity, {\n          style: [styles.saveButton, selectedExercises.length === 0 && styles.disabledButton],\n          onPress: handleSaveExercises,\n          disabled: selectedExercises.length === 0,\n          children: _jsxDEV(Text, {\n            style: styles.saveButtonText,\n            children: [\"Add \", selectedExercises.length, \" Exercise\", selectedExercises.length !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 7\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }, _this);\n    });\n    return function loadExercises() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#171923\"\n    },\n    loadingContainer: {\n      flex: 1,\n      backgroundColor: \"#171923\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    errorContainer: {\n      flex: 1,\n      backgroundColor: \"#171923\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: 20\n    },\n    errorText: {\n      color: \"#fc8181\",\n      fontSize: 16,\n      textAlign: \"center\",\n      marginBottom: 16\n    },\n    retryButton: {\n      backgroundColor: \"#6b46c1\",\n      paddingHorizontal: 24,\n      paddingVertical: 12,\n      borderRadius: 8\n    },\n    retryButtonText: {\n      color: \"#fff\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    },\n    searchContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: \"#2D3748\",\n      margin: 16,\n      paddingHorizontal: 16,\n      borderRadius: 8\n    },\n    searchIcon: {\n      marginRight: 8\n    },\n    searchInput: {\n      flex: 1,\n      height: 48,\n      color: \"#fff\",\n      fontSize: 16\n    },\n    groupButtonContainer: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      marginVertical: 8,\n      gap: 6\n    },\n    groupButton: {\n      paddingVertical: 4,\n      paddingHorizontal: 10,\n      borderRadius: 16,\n      backgroundColor: \"#272b3a\",\n      margin: 4,\n      minWidth: 70,\n      alignItems: \"center\",\n      minHeight: 32,\n      elevation: 1,\n      borderWidth: 1,\n      borderColor: \"#4a5568\"\n    },\n    activeGroupButton: {\n      backgroundColor: \"#6b46c1\",\n      borderColor: \"#a78bfa\"\n    },\n    groupButtonText: {\n      color: \"#e2e8f0\",\n      fontSize: 13,\n      fontWeight: \"500\",\n      letterSpacing: 0.2\n    },\n    activeGroupButtonText: {\n      color: \"#fff\",\n      fontWeight: \"700\"\n    },\n    list: {\n      flex: 1\n    },\n    listContent: {\n      padding: 16\n    },\n    exerciseItem: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      backgroundColor: \"#2D3748\",\n      padding: 16,\n      borderRadius: 8,\n      marginBottom: 8\n    },\n    exerciseContent: {\n      flex: 1,\n      marginRight: 16\n    },\n    selectedExerciseItem: {\n      backgroundColor: \"#2D3748\",\n      borderColor: \"#6b46c1\",\n      borderWidth: 2\n    },\n    exerciseText: {\n      color: \"#fff\",\n      fontSize: 16\n    },\n    exerciseDescription: {\n      color: \"#A0AEC0\",\n      fontSize: 14,\n      marginTop: 4\n    },\n    selectedExerciseText: {\n      fontWeight: \"bold\"\n    },\n    saveButton: {\n      backgroundColor: \"#6b46c1\",\n      margin: 16,\n      padding: 16,\n      borderRadius: 8,\n      alignItems: \"center\"\n    },\n    disabledButton: {\n      backgroundColor: \"#4A5568\"\n    },\n    saveButtonText: {\n      color: \"#fff\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    }\n  });\n};\nexport default AddExerciseScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","TouchableOpacity","FlatList","TextInput","StyleSheet","ScrollView","ActivityIndicator","Alert","Platform","Ionicons","getExercises","getMuscleGroups","initDatabase","useFocusEffect","jsxDEV","_jsxDEV","AddExerciseScreen","_ref","_route$params2","navigation","route","_ref2","params","muscleGroup","muscleGroupId","previousExercises","returnToPreset","safePreviousExercises","Array","isArray","_useState","_useState2","_slicedToArray","selectedExercises","setSelectedExercises","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","activeGroup","setActiveGroup","_useState7","_useState8","muscleGroups","setMuscleGroups","_useState9","_useState10","exercises","setExercises","_useState11","_useState12","loading","setLoading","_useState13","_useState14","error","setError","_route$params","newExerciseToAdd","exerciseToAdd","setParams","undefined","navigate","addExercise","console","log","_ref3","loadData","getPlatform","OS","_unused","_ref4","_asyncToGenerator","_route$params3","dbInitialized","Error","groups","_require","require","STATIC_MUSCLE_GROUPS","exercisesData","_require2","STATIC_EXERCISES","filteredExercises","filter","exercise","muscle_group_id","err","apply","arguments","loadExercises","_ref5","exerciseData","then","handleSelectExercise","prev","find","e","id","concat","_toConsumableArray","handleSaveExercises","toAdd","ex","some","name","selectedExercisesForPreset","showPresetModal","merge","length","addExercises","goBack","safeExercises","query","toLowerCase","filtered","muscle_group","includes","renderMuscleGroupButton","group","style","styles","groupButton","activeGroupButton","onPress","children","groupButtonText","activeGroupButtonText","fileName","_jsxFileName","lineNumber","columnNumber","_this","renderExerciseItem","_ref6","item","exerciseItem","selectedExerciseItem","exerciseContent","exerciseText","selectedExerciseText","description","exerciseDescription","size","color","loadingContainer","marginTop","errorContainer","errorText","retryButton","retryButtonText","warn","safeMuscleGroups","container","backgroundColor","padding","margin","borderRadius","fontSize","toString","searchContainer","searchIcon","searchInput","placeholder","placeholderTextColor","value","onChangeText","groupButtonContainer","map","data","renderItem","keyExtractor","index","list","minHeight","contentContainerStyle","listContent","ListEmptyComponent","textAlign","saveButton","disabledButton","disabled","saveButtonText","create","flex","justifyContent","alignItems","marginBottom","paddingHorizontal","paddingVertical","fontWeight","flexDirection","marginRight","height","flexWrap","marginVertical","gap","minWidth","elevation","borderWidth","borderColor","letterSpacing"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/AddExerciseScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  TextInput,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  getExercises,\n  getMuscleGroups,\n  initDatabase,\n} from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nconst AddExerciseScreen = ({ navigation, route }) => {\n  const { muscleGroup, muscleGroupId, previousExercises, returnToPreset } =\n    route?.params || {};\n  // Fallback to empty array if previousExercises is undefined\n  const safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  // Initialize selectedExercises with previousExercises if provided\n  const [selectedExercises, setSelectedExercises] = useState(safePreviousExercises);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeGroup, setActiveGroup] = useState(\"All\");\n  const [muscleGroups, setMuscleGroups] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useFocusEffect(\n    useCallback(() => {\n      if (route.params?.newExerciseToAdd) {\n        // Add the new exercise to the previously selected list and return to ConfigureWorkout\n        const exerciseToAdd = route.params.newExerciseToAdd;\n        navigation.setParams({ newExerciseToAdd: undefined }); // Clear param\n        navigation.navigate(\"ConfigureWorkout\", { addExercise: exerciseToAdd });\n      }\n    }, [route.params?.newExerciseToAdd])\n  );\n\n  useEffect(() => {\n    console.log('[AddExerciseScreen] useEffect route.params:', route.params);\n    const { muscleGroup, muscleGroupId } = route.params || {};\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route.params]);\n\n  useEffect(() => {\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n\n  const getPlatform = () => {\n    try {\n      return Platform.OS;\n    } catch {\n      return 'web';\n    }\n  };\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('[AddExerciseScreen] Loading data...');\n      // Initialize database\n      const dbInitialized = await initDatabase();\n      if (!dbInitialized) {\n        throw new Error(\"Failed to initialize database\");\n      }\n\n      // Load muscle groups\n      let groups;\n      if (getPlatform() === \"web\") {\n        const { STATIC_MUSCLE_GROUPS } = require(\"../database/database\");\n        groups = STATIC_MUSCLE_GROUPS;\n      } else {\n        groups = await getMuscleGroups();\n      }\n      setMuscleGroups(groups || []);\n\n      // Load exercises\n      let exercisesData;\n      if (getPlatform() === \"web\") {\n        const { STATIC_EXERCISES } = require(\"../database/database\");\n        exercisesData = STATIC_EXERCISES;\n      } else {\n        exercisesData = await getExercises();\n      }\n\n      // If muscleGroupId is provided, filter exercises for that muscle group\n      if (route.params?.muscleGroupId) {\n        const filteredExercises = (exercisesData || []).filter(\n          (exercise) => exercise.muscle_group_id === route.params.muscleGroupId\n        );\n        setExercises(filteredExercises);\n        console.log('[AddExerciseScreen] Filtered exercises:', filteredExercises);\n      } else {\n        setExercises(exercisesData || []);\n        console.log('[AddExerciseScreen] All exercises:', exercisesData);\n      }\n\n      setLoading(false);\n      console.log('[AddExerciseScreen] Data load complete.');\n    } catch (err) {\n      setError(\"Error loading data: \" + err);\n      setLoading(false);\n      console.error('[AddExerciseScreen] Error loading data:', err);\n    }\n  };\n\n  const loadExercises = async () => {\n    try {\n      setError(null);\n      console.log(\n        \"Loading exercises for muscleGroupId:\",\n        muscleGroupId,\n        \"activeGroup:\",\n        activeGroup\n      );\n      const exerciseData = await getExercises(\n        activeGroup === \"All\" ? null : activeGroup\n      );\n      setExercises(exerciseData);\n\n      if (activeGroup === \"All\") {\n        getExercises().then(setExercises);\n      } else {\n        getExercises(activeGroup).then(setExercises);\n      }\n    } catch (err) {}\n\n  const handleSelectExercise = (exercise) => {\n    setSelectedExercises((prev) => {\n      if (prev.find((e) => e.id === exercise.id)) {\n        return prev.filter((e) => e.id !== exercise.id);\n      }\n      return [...prev, exercise];\n    });\n  };\n\n  const handleSaveExercises = () => {\n    // Only add exercises that are not already present\n    const toAdd = selectedExercises.filter(\n      (ex) => !safePreviousExercises.some((prev) => prev.id === ex.id)\n    );\n    if (route.params && route.params.returnToPreset) {\n      // Save to preset flow: go back to the previous screen and pass exercises via navigation.navigate\n      navigation.navigate({\n        name: \"Profile\",\n        params: {\n          selectedExercisesForPreset: [...selectedExercises],\n          showPresetModal: true,\n        },\n        merge: true,\n      });\n    } else if (toAdd.length > 0) {\n      navigation.navigate(\"ConfigureWorkout\", { addExercises: toAdd });\n    } else {\n      navigation.goBack();\n    }\n  };\n\n  // Defensive: exercises fallback\n  const safeExercises = Array.isArray(exercises) ? exercises : [];\n\n  const filteredExercises = () => {\n    const query = searchQuery.toLowerCase();\n    // If activeGroup is 'All', show all exercises matching the search\n    let filtered = safeExercises;\n    if (activeGroup !== 'All') {\n      filtered = filtered.filter(exercise => {\n        // Defensive: allow matching by group id or name\n        return (\n          exercise.muscle_group_id === activeGroup ||\n          exercise.muscle_group === activeGroup\n        );\n      });\n    }\n    if (query.length > 0) {\n      filtered = filtered.filter(exercise =>\n        exercise.name.toLowerCase().includes(query)\n      );\n    }\n    console.log('[AddExerciseScreen] Filtered exercises:', filtered.length, 'activeGroup:', activeGroup, 'query:', query);\n    return filtered;\n  };\n\n  const renderMuscleGroupButton = (group) => (\n    <TouchableOpacity\n      key={group ? group.id : \"all\"}\n      style={[\n        styles.groupButton,\n        activeGroup === (group ? group.id : \"All\") &&\n          styles.activeGroupButton,\n      ]}\n      onPress={() => {\n          console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n        setActiveGroup(group ? group.id : \"All\");\n      }}\n    >\n      <Text\n        style={[\n          styles.groupButtonText,\n          activeGroup === (group ? group.id : \"All\") &&\n            styles.activeGroupButtonText,\n        ]}\n      >\n        {group ? group.name : \"All\"}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderExerciseItem = ({ item }) => {\n    console.log('[AddExerciseScreen] Rendering exercise:', item.name, item.id);\n    return (\n      <TouchableOpacity\n        style={[\n          styles.exerciseItem,\n          selectedExercises.find((e) => e.id === item.id) &&\n            styles.selectedExerciseItem,\n        ]}\n        onPress={() => handleSelectExercise(item)}\n      >\n        <View style={styles.exerciseContent}>\n          <Text\n            style={[\n              styles.exerciseText,\n              selectedExercises.find((e) => e.id === item.id) &&\n                styles.selectedExerciseText,\n            ]}\n          >\n            {item.name}\n          </Text>\n          {item.description && (\n            <Text style={styles.exerciseDescription}>{item.description}</Text>\n          )}\n        </View>\n        {selectedExercises.find((e) => e.id === item.id) && (\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#6b46c1\" />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  if (loading) {\n    console.log('[AddExerciseScreen] Loading UI');\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#6b46c1\" />\n        <Text style={{ color: '#fff', marginTop: 16 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  if (error) {\n    console.error('[AddExerciseScreen] Render error:', error);\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={loadData}>\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  if (!muscleGroups || muscleGroups.length === 0) {\n    console.warn('[AddExerciseScreen] No muscle groups loaded');\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>No muscle groups found.</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={loadData}>\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  if (!exercises || exercises.length === 0) {\n    console.warn('[AddExerciseScreen] No exercises loaded');\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>No exercises found.</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={loadData}>\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  // Defensive: muscleGroups fallback\n  const safeMuscleGroups = Array.isArray(muscleGroups) ? muscleGroups : [];\n\n  // Add fallback if no exercises match filter\n  const filtered = filteredExercises();\n  if (filtered.length === 0) {\n    console.warn('[AddExerciseScreen] No exercises match filter:', searchQuery, activeGroup);\n  }\n\n  // Log the first exercise object for debugging\n  if (safeExercises.length > 0) {\n    console.log('[AddExerciseScreen] First exercise object:', safeExercises[0]);\n  }\n\n  console.log('[AddExerciseScreen] Filtered array:', filtered);\n\n  return (\n    <View style={styles.container}>\n      {/* Debug Info Box */}\n      <View style={{ backgroundColor: '#333', padding: 8, margin: 8, borderRadius: 8 }}>\n        <Text style={{ color: '#fff' }}>Debug: {filtered.length} exercises shown</Text>\n        {filtered.length > 0 && (\n          <Text style={{ color: '#fff', fontSize: 12 }}>First item key: {filtered[0].id ? filtered[0].id.toString() : 'NO ID'}</Text>\n        )}\n      </View>\n\n      <View style={styles.searchContainer}>\n        <Ionicons\n          name=\"search\"\n          size={20}\n          color=\"#666\"\n          style={styles.searchIcon}\n        />\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search exercises...\"\n          placeholderTextColor=\"#666\"\n          value={searchQuery}\n          onChangeText={setSearchQuery}\n        />\n      </View>\n\n      <View style={styles.groupButtonContainer}>\n        {renderMuscleGroupButton(null)}\n        {safeMuscleGroups.map((group) => renderMuscleGroupButton(group))}\n      </View>\n\n      <FlatList\n        data={filtered}\n        renderItem={renderExerciseItem}\n        keyExtractor={(item, index) => (item.id ? item.id.toString() : index.toString())}\n        style={[styles.list, { backgroundColor: '#222', minHeight: 200 }]}\n        contentContainerStyle={styles.listContent}\n        ListEmptyComponent={\n          <Text style={{ color: '#fff', textAlign: 'center', marginTop: 32 }}>\n            No exercises found for this filter.\n          </Text>\n        }\n      />\n\n      <TouchableOpacity\n        style={[\n          styles.saveButton,\n          selectedExercises.length === 0 && styles.disabledButton,\n        ]}\n        onPress={handleSaveExercises}\n        disabled={selectedExercises.length === 0}\n      >\n        <Text style={styles.saveButtonText}>\n          Add {selectedExercises.length} Exercise\n          {selectedExercises.length !== 1 ? \"s\" : \"\"}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  errorContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  errorText: {\n    color: \"#fc8181\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 16,\n  },\n  retryButton: {\n    backgroundColor: \"#6b46c1\",\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n  },\n  retryButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    margin: 16,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n  },\n  searchIcon: {\n    marginRight: 8,\n  },\n  searchInput: {\n    flex: 1,\n    height: 48,\n    color: \"#fff\",\n    fontSize: 16,\n  },\n  groupButtonContainer: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n    marginVertical: 8,\n    gap: 6, // for React Native Web, otherwise use margin\n  },\n  groupButton: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 16,\n      backgroundColor: \"#272b3a\",\n    margin: 4,\n    minWidth: 70,\n      alignItems: \"center\",\n    minHeight: 32,\n    elevation: 1,\n    borderWidth: 1,\n      borderColor: \"#4a5568\",\n  },\n  activeGroupButton: {\n      backgroundColor: \"#6b46c1\",\n      borderColor: \"#a78bfa\",\n  },\n  groupButtonText: {\n      color: \"#e2e8f0\",\n    fontSize: 13,\n      fontWeight: \"500\",\n    letterSpacing: 0.2,\n  },\n  activeGroupButtonText: {\n      color: \"#fff\",\n      fontWeight: \"700\",\n  },\n  list: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n  },\n  exerciseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  exerciseContent: {\n    flex: 1,\n    marginRight: 16,\n  },\n  selectedExerciseItem: {\n    backgroundColor: \"#2D3748\",\n    borderColor: \"#6b46c1\",\n    borderWidth: 2,\n  },\n  exerciseText: {\n    color: \"#fff\",\n    fontSize: 16,\n  },\n  exerciseDescription: {\n    color: \"#A0AEC0\",\n    fontSize: 14,\n    marginTop: 4,\n  },\n  selectedExerciseText: {\n    fontWeight: \"bold\",\n  },\n  saveButton: {\n    backgroundColor: \"#6b46c1\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: \"center\",\n  },\n  disabledButton: {\n    backgroundColor: \"#4A5568\",\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n});\n};\nexport default AddExerciseScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}