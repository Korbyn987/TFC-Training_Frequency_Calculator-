{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBannerModal from \"../components/workoutBannerModal\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editMode = _useState4[0],\n    setEditMode = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMuscle = _useState6[0],\n    setSelectedMuscle = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editDays = _useState8[0],\n    setEditDays = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRefreshing = _useState10[0],\n    setIsRefreshing = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    streak = _useState12[0],\n    setStreak = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    achievements = _useState14[0],\n    setAchievements = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedGroup = _useState16[0],\n    setSelectedGroup = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    workoutInProgress = _useState18[0],\n    setWorkoutInProgress = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    trainedMuscles = _useState20[0],\n    setTrainedMuscles = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedMuscles = _useState22[0],\n    setSelectedMuscles = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    workoutModalVisible = _useState24[0],\n    setWorkoutModalVisible = _useState24[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref3 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  var loadMuscleData = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var startWorkout = function startWorkout() {\n    setWorkoutInProgress(true);\n    setSelectedMuscles([]);\n    setWorkoutModalVisible(true);\n  };\n  var closeWorkoutModal = function closeWorkoutModal() {\n    setWorkoutModalVisible(false);\n  };\n  var endWorkout = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        if (trainedMuscles.length === 0) {\n          Alert.alert(\"No Muscles Trained\", \"Please train at least one muscle before ending your workout\");\n          return;\n        }\n        var now = new Date();\n        var lastDate = yield AsyncStorage.getItem(\"lastTrainedDate\");\n        var newStreak = 1;\n        if (lastDate) {\n          var lastDateObj = new Date(lastDate);\n          var daysSinceLastWorkout = Math.floor((now - lastDateObj) / (24 * 60 * 60 * 1000));\n          if (daysSinceLastWorkout < 2) {\n            newStreak = streak + 1;\n          } else if (daysSinceLastWorkout >= 2) {\n            newStreak = 1;\n          }\n        }\n        setStreak(newStreak);\n        yield AsyncStorage.setItem(\"streak\", newStreak.toString());\n        yield AsyncStorage.setItem(\"lastTrainedDate\", now.toString());\n        yield AsyncStorage.setItem(\"trainedMuscles\", JSON.stringify([]));\n        setWorkoutInProgress(false);\n        setTrainedMuscles([]);\n        setSelectedMuscles([]);\n        setWorkoutModalVisible(false);\n        checkAchievements();\n        Alert.alert(\"Workout Complete!\", `Great job! Your streak is now ${newStreak} days. Keep it up!`);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to end workout\");\n      }\n    });\n    return function endWorkout() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setEditMode(true);\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var renderMuscleItem = function renderMuscleItem(_ref10) {\n    var muscle = _ref10.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMusclePress(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, _this);\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxDEV(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsxDEV(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return removeMuscleFromSelection(muscle);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.chipText,\n              children: muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, _this),\n    children: [renderMuscleSelectionBanner(), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: styles.streakContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"trophy\",\n          size: 24,\n          color: \"#FFD700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.streakText,\n          children: [streak, \" day streak!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, _this), _jsxDEV(WorkoutBannerModal, {\n      visible: workoutModalVisible,\n      onClose: closeWorkoutModal,\n      selectedMuscles: selectedMuscles,\n      onMuscleRemove: removeMuscleFromSelection,\n      onEndWorkout: endWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.quickActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.startWorkoutButton],\n        onPress: startWorkout,\n        disabled: workoutInProgress,\n        children: [_jsxDEV(Ionicons, {\n          name: \"play-circle\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.endWorkoutButton],\n        onPress: endWorkout,\n        disabled: !workoutInProgress || trainedMuscles.length === 0,\n        children: [_jsxDEV(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return updateMuscle(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return updateMuscle(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, _this);\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBannerModal","WorkoutSelectionModal","jsxDEV","_jsxDEV","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","editMode","setEditMode","_useState5","_useState6","selectedMuscle","setSelectedMuscle","_useState7","_useState8","editDays","setEditDays","_useState9","_useState10","isRefreshing","setIsRefreshing","_useState11","_useState12","streak","setStreak","_useState13","_useState14","achievements","setAchievements","_useState15","_useState16","selectedGroup","setSelectedGroup","_useState17","_useState18","workoutInProgress","setWorkoutInProgress","_useState19","_useState20","trainedMuscles","setTrainedMuscles","_useState21","_useState22","selectedMuscles","setSelectedMuscles","_useState23","_useState24","workoutModalVisible","setWorkoutModalVisible","_useSelector","state","auth","isAuthenticated","user","dispatch","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","getStatus","days","loadStreak","_ref2","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref3","value","setItem","toString","_x","updateStreak","_ref4","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref5","savedAchievements","JSON","parse","_ref6","currentStreak","prevAchievements","newAchievements","includes","push","length","concat","_toConsumableArray","stringify","loadMuscleData","_ref7","savedData","initialData","reduce","acc","muscle","alert","startWorkout","closeWorkoutModal","endWorkout","_ref8","now","lastDate","lastDateObj","daysSinceLastWorkout","Math","floor","handleEdit","saveEdit","_ref9","isNaN","newData","_objectSpread","_defineProperty","cancelEdit","renderMuscleItem","_ref10","item","status","style","muscleButton","onPress","handleMusclePress","onLongPress","children","transform","scale","muscleStatus","muscleName","fileName","_jsxFileName","lineNumber","columnNumber","_this","daysContainer","daysText","editButton","name","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","removeMuscleFromSelection","chipText","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","username","streakContainer","streakText","visible","onClose","onMuscleRemove","onEndWorkout","subtitle","data","renderItem","keyExtractor","list","contentContainerStyle","listContainer","quickActions","quickActionItem","startWorkoutButton","disabled","quickActionText","endWorkoutButton","forEach","updateMuscle","button","secondaryButton","position","bottom","left","right","buttonText","transparent","animationType","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBannerModal from \"../components/workoutBannerModal\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [muscleData, setMuscleData] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [workoutModalVisible, setWorkoutModalVisible] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  // Animation for muscle buttons\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const startWorkout = () => {\n    setWorkoutInProgress(true);\n    setSelectedMuscles([]);\n    setWorkoutModalVisible(true);\n  };\n\n  const closeWorkoutModal = () => {\n    setWorkoutModalVisible(false);\n  };\n\n  const endWorkout = async () => {\n    try {\n      if (trainedMuscles.length === 0) {\n        Alert.alert(\n          \"No Muscles Trained\",\n          \"Please train at least one muscle before ending your workout\"\n        );\n        return;\n      }\n\n      const now = new Date();\n      const lastDate = await AsyncStorage.getItem(\"lastTrainedDate\");\n      let newStreak = 1;\n\n      if (lastDate) {\n        const lastDateObj = new Date(lastDate);\n        const daysSinceLastWorkout = Math.floor(\n          (now - lastDateObj) / (24 * 60 * 60 * 1000)\n        );\n\n        if (daysSinceLastWorkout < 2) {\n          newStreak = streak + 1;\n        } else if (daysSinceLastWorkout >= 2) {\n          newStreak = 1;\n        }\n      }\n\n      setStreak(newStreak);\n      await AsyncStorage.setItem(\"streak\", newStreak.toString());\n\n      await AsyncStorage.setItem(\"lastTrainedDate\", now.toString());\n      await AsyncStorage.setItem(\"trainedMuscles\", JSON.stringify([]));\n\n      // Reset workout state\n      setWorkoutInProgress(false);\n      setTrainedMuscles([]);\n      setSelectedMuscles([]);\n      setWorkoutModalVisible(false);\n\n      // Check for achievements\n      checkAchievements();\n\n      Alert.alert(\n        \"Workout Complete!\",\n        `Great job! Your streak is now ${newStreak} days. Keep it up!`\n      );\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to end workout\");\n    }\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setEditMode(true);\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMusclePress(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => removeMuscleFromSelection(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {renderMuscleSelectionBanner()}\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n\n        {/* Streak Counter */}\n        <View style={styles.streakContainer}>\n          <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n          <Text style={styles.streakText}>{streak} day streak!</Text>\n        </View>\n      </View>\n\n      <WorkoutBannerModal\n        visible={workoutModalVisible}\n        onClose={closeWorkoutModal}\n        selectedMuscles={selectedMuscles}\n        onMuscleRemove={removeMuscleFromSelection}\n        onEndWorkout={endWorkout}\n      />\n\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\n\n      <FlatList\n        data={\n          selectedGroup === null\n            ? MUSCLE_GROUPS\n            : selectedGroup === \"upper\"\n            ? UPPER_BODY\n            : LOWER_BODY\n        }\n        renderItem={renderMuscleItem}\n        keyExtractor={(item) => item}\n        style={styles.list}\n        contentContainerStyle={styles.listContainer}\n      />\n\n      {/* Quick Actions */}\n      <View style={styles.quickActions}>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.startWorkoutButton]}\n          onPress={startWorkout}\n          disabled={workoutInProgress}\n        >\n          <Ionicons name=\"play-circle\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.endWorkoutButton]}\n          onPress={endWorkout}\n          disabled={!workoutInProgress || trainedMuscles.length === 0}\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>End Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"upper\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"upper\");\n            UPPER_BODY.forEach((muscle) => updateMuscle(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>Upper Body</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"lower\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"lower\");\n            LOWER_BODY.forEach((muscle) => updateMuscle(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Lower Body</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}