{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { API_URL } from \"../config\";\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (username, password) {\n    try {\n      var response = yield fetch(`${API_URL}/api/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Login failed');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var register = function () {\n  var _ref2 = _asyncToGenerator(function* (username, password, email) {\n    try {\n      var response = yield fetch(`${API_URL}/api/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          email: email\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Registration failed');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  });\n  return function register(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var forgotPassword = function () {\n  var _ref3 = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Failed to send reset email');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      throw error;\n    }\n  });\n  return function forgotPassword(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var resetPassword = function () {\n  var _ref4 = _asyncToGenerator(function* (token, newPassword) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token,\n          newPassword: newPassword\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Failed to reset password');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Reset password error:', error);\n      throw error;\n    }\n  });\n  return function resetPassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var recoverUsername = function () {\n  var _ref5 = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/recover-username`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      });\n      var data = yield response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to recover username');\n      }\n      return data;\n    } catch (error) {\n      throw error.message || error;\n    }\n  });\n  return function recoverUsername(_x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["API_URL","login","_ref","_asyncToGenerator","username","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","console","_x","_x2","apply","arguments","register","_ref2","email","_x3","_x4","_x5","forgotPassword","_ref3","_x6","resetPassword","_ref4","token","newPassword","_x7","_x8","recoverUsername","_ref5","data","message","_x9"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/services/authService.js"],"sourcesContent":["import { API_URL } from '../config';\n\n// Use different URLs based on platform\n// const API_URL = Platform.select({\n//   ios: \"http://localhost:5001\", // iOS simulator\n//   android: \"http://10.0.2.2:5001\", // Android emulator\n//   default: \"http://localhost:5001\", // Web\n// });\n\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(`${API_URL}/api/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Login failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\nexport const register = async (username, password, email) => {\n  try {\n    const response = await fetch(`${API_URL}/api/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password, email }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Registration failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\nexport const forgotPassword = async (email) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/forgot-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to send reset email');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Forgot password error:', error);\n    throw error;\n  }\n};\n\nexport const resetPassword = async (token, newPassword) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/reset-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ token, newPassword }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to reset password');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Reset password error:', error);\n    throw error;\n  }\n};\n\nexport const recoverUsername = async (email) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/recover-username`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to recover username');\n    }\n    return data;\n  } catch (error) {\n    throw error.message || error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}