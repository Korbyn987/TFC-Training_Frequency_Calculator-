{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/homeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editMode = _useState4[0],\n    setEditMode = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMuscle = _useState6[0],\n    setSelectedMuscle = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editDays = _useState8[0],\n    setEditDays = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRefreshing = _useState10[0],\n    setIsRefreshing = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    streak = _useState12[0],\n    setStreak = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    achievements = _useState14[0],\n    setAchievements = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedGroup = _useState16[0],\n    setSelectedGroup = _useState16[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  var loadMuscleData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateMuscle = function () {\n    var _ref3 = _asyncToGenerator(function* (muscle) {\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, muscle, 0));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        yield AsyncStorage.setItem(`recoveryTimer_${muscle}`, new Date().toString());\n        var now = new Date();\n        var lastDate = yield AsyncStorage.getItem(\"lastTrainedDate\");\n        if (!lastDate || now - new Date(lastDate) <= 24 * 60 * 60 * 1000) {\n          setStreak(function (prev) {\n            return prev + 1;\n          });\n          yield AsyncStorage.setItem(\"streak\", (streak + 1).toString());\n        } else {\n          setStreak(1);\n          yield AsyncStorage.setItem(\"streak\", \"1\");\n        }\n        yield AsyncStorage.setItem(\"lastTrainedDate\", now.toString());\n        checkAchievements();\n        Animated.timing(scaleAnim, {\n          toValue: 1.2,\n          duration: 200,\n          easing: Easing.inOut(Easing.ease),\n          useNativeDriver: true\n        }).start(function () {\n          Animated.spring(scaleAnim, {\n            toValue: 1,\n            friction: 4,\n            tension: 40,\n            useNativeDriver: true\n          }).start();\n        });\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to update muscle data\");\n      }\n    });\n    return function updateMuscle(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadStreak = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        setStreak(savedStreak ? parseInt(savedStreak) : 0);\n      } catch (error) {\n        console.error(\"Failed to load streak\", error);\n      }\n    });\n    return function loadStreak() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        setAchievements(savedAchievements ? JSON.parse(savedAchievements) : []);\n      } catch (error) {\n        console.error(\"Error loading achievements\", error);\n      }\n    });\n    return function loadAchievements() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var newAchievements = _toConsumableArray(achievements);\n      if (streak >= 7 && !achievements.includes(\"weekStreak\")) {\n        newAchievements.push(\"weekStreak\");\n      }\n      if (streak >= 30 && !achievements.includes(\"monthStreak\")) {\n        newAchievements.push(\"monthStreak\");\n      }\n      var readyMuscles = Object.values(muscleData).filter(function (days) {\n        return days >= 48;\n      }).length;\n      if (readyMuscles >= 5 && !achievements.includes(\"fiveReady\")) {\n        newAchievements.push(\"fiveReady\");\n      }\n      if (readyMuscles >= 10 && !achievements.includes(\"tenReady\")) {\n        newAchievements.push(\"tenReady\");\n      }\n      if (newAchievements.length !== achievements.length) {\n        setAchievements(newAchievements);\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify(newAchievements));\n        Alert.alert(\"Achievement Unlocked!\", \"You've unlocked a new achievement!\");\n      }\n    });\n    return function checkAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit(muscle) {\n    setSelectedMuscle(muscle);\n    Animated.timing(scaleAnim, {\n      toValue: 1.2,\n      duration: 200,\n      easing: Easing.inOut(Easing.ease),\n      useNativeDriver: true\n    }).start(function () {\n      Animated.spring(scaleAnim, {\n        toValue: 1,\n        friction: 4,\n        tension: 40,\n        useNativeDriver: true\n      }).start();\n    });\n    setEditDays(muscleData[muscle].toString());\n    setEditMode(true);\n  };\n  var saveEdit = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var renderMuscleItem = function renderMuscleItem(_ref8) {\n    var muscle = _ref8.item;\n    var days = muscleData[muscle] || 0;\n    var status = days < 48 ? \"rest\" : days < 72 ? \"caution\" : \"ready\";\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleItem,\n      onPress: function onPress() {\n        return updateMuscle(muscle);\n      },\n      onLongPress: function onLongPress() {\n        return handleEdit(muscle);\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, _this),\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: styles.streakContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"trophy\",\n          size: 24,\n          color: \"#FFD700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.streakText,\n          children: [streak, \" day streak!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: [_jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days >= 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Ready Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days < 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Resting Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.quickActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return updateMuscle(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return updateMuscle(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 16,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, _this);\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","jsxDEV","_jsxDEV","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","editMode","setEditMode","_useState5","_useState6","selectedMuscle","setSelectedMuscle","_useState7","_useState8","editDays","setEditDays","_useState9","_useState10","isRefreshing","setIsRefreshing","_useState11","_useState12","streak","setStreak","_useState13","_useState14","achievements","setAchievements","_useState15","_useState16","selectedGroup","setSelectedGroup","_useSelector","state","auth","isAuthenticated","user","dispatch","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","loadMuscleData","loadStreak","loadAchievements","_ref2","_asyncToGenerator","savedData","getItem","JSON","parse","initialData","reduce","acc","muscle","setItem","stringify","error","alert","apply","arguments","updateMuscle","_ref3","newData","_objectSpread","_defineProperty","Date","toString","now","lastDate","prev","checkAchievements","timing","toValue","duration","easing","inOut","ease","useNativeDriver","start","spring","friction","tension","_x","_ref4","savedStreak","parseInt","console","_ref5","savedAchievements","_ref6","newAchievements","_toConsumableArray","includes","push","readyMuscles","Object","values","filter","days","length","handleEdit","saveEdit","_ref7","isNaN","renderMuscleItem","_ref8","item","status","style","muscleItem","onPress","onLongPress","children","transform","scale","muscleStatus","muscleName","fileName","_jsxFileName","lineNumber","columnNumber","_this","daysContainer","daysText","editButton","name","size","color","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","username","streakContainer","streakText","statsContainer","statItem","statNumber","statLabel","subtitle","data","renderItem","keyExtractor","list","contentContainerStyle","listContainer","quickActions","quickActionItem","forEach","quickActionText","button","secondaryButton","position","bottom","left","right","buttonText","visible","transparent","animationType","modalContainer","modalContent","modalTitle","input","value","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Modal,\r\n  TextInput,\r\n  Alert,\r\n  Animated,\r\n  Easing,\r\n  RefreshControl,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/authSlice\";\r\nimport { styles } from \"../styles/homeStyles\";\r\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [muscleData, setMuscleData] = useState({});\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\r\n  const [editDays, setEditDays] = useState(\"\");\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [streak, setStreak] = useState(0);\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // Animation for muscle buttons\r\n  const scaleAnim = useRef(new Animated.Value(1)).current;\r\n\r\n  // Define muscle groups\r\n  const UPPER_BODY = [\r\n    \"Biceps\",\r\n    \"Triceps\",\r\n    \"Chest\",\r\n    \"Shoulders\",\r\n    \"Traps\",\r\n    \"Back\",\r\n  ];\r\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\r\n\r\n  useEffect(() => {\r\n    loadMuscleData();\r\n    loadStreak();\r\n    loadAchievements();\r\n  }, []);\r\n\r\n  const loadMuscleData = async () => {\r\n    try {\r\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\r\n      if (savedData !== null) {\r\n        setMuscleData(JSON.parse(savedData));\r\n      } else {\r\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\r\n          acc[muscle] = 0;\r\n          return acc;\r\n        }, {});\r\n        setMuscleData(initialData);\r\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\r\n    }\r\n  };\r\n\r\n  const updateMuscle = async (muscle) => {\r\n    try {\r\n      const newData = { ...muscleData, [muscle]: 0 };\r\n      setMuscleData(newData);\r\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\r\n\r\n      // Update the recovery timer for this muscle\r\n      await AsyncStorage.setItem(\r\n        `recoveryTimer_${muscle}`,\r\n        new Date().toString()\r\n      );\r\n\r\n      // update streak\r\n      const now = new Date();\r\n      const lastDate = await AsyncStorage.getItem(\"lastTrainedDate\");\r\n      if (!lastDate || now - new Date(lastDate) <= 24 * 60 * 60 * 1000) {\r\n        setStreak((prev) => prev + 1);\r\n        await AsyncStorage.setItem(\"streak\", (streak + 1).toString());\r\n      } else {\r\n        setStreak(1);\r\n        await AsyncStorage.setItem(\"streak\", \"1\");\r\n      }\r\n      await AsyncStorage.setItem(\"lastTrainedDate\", now.toString());\r\n\r\n      // check for achievements\r\n      checkAchievements();\r\n\r\n      // Trigger animation\r\n      Animated.timing(scaleAnim, {\r\n        toValue: 1.2,\r\n        duration: 200,\r\n        easing: Easing.inOut(Easing.ease),\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        Animated.spring(scaleAnim, {\r\n          toValue: 1,\r\n          friction: 4,\r\n          tension: 40,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      });\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", \"Failed to update muscle data\");\r\n    }\r\n  };\r\n\r\n  const loadStreak = async () => {\r\n    try {\r\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\r\n      setStreak(savedStreak ? parseInt(savedStreak) : 0);\r\n    } catch (error) {\r\n      console.error(\"Failed to load streak\", error);\r\n    }\r\n  };\r\n\r\n  const loadAchievements = async () => {\r\n    try {\r\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\r\n      setAchievements(savedAchievements ? JSON.parse(savedAchievements) : []);\r\n    } catch (error) {\r\n      console.error(\"Error loading achievements\", error);\r\n    }\r\n  };\r\n\r\n  const checkAchievements = async () => {\r\n    const newAchievements = [...achievements];\r\n\r\n    // Check for streak achievements\r\n    if (streak >= 7 && !achievements.includes(\"weekStreak\")) {\r\n      newAchievements.push(\"weekStreak\");\r\n    }\r\n    if (streak >= 30 && !achievements.includes(\"monthStreak\")) {\r\n      newAchievements.push(\"monthStreak\");\r\n    }\r\n\r\n    // Check for muscle group achievements\r\n    const readyMuscles = Object.values(muscleData).filter(\r\n      (days) => days >= 48\r\n    ).length;\r\n    if (readyMuscles >= 5 && !achievements.includes(\"fiveReady\")) {\r\n      newAchievements.push(\"fiveReady\");\r\n    }\r\n    if (readyMuscles >= 10 && !achievements.includes(\"tenReady\")) {\r\n      newAchievements.push(\"tenReady\");\r\n    }\r\n\r\n    if (newAchievements.length !== achievements.length) {\r\n      setAchievements(newAchievements);\r\n      await AsyncStorage.setItem(\r\n        \"achievements\",\r\n        JSON.stringify(newAchievements)\r\n      );\r\n      Alert.alert(\r\n        \"Achievement Unlocked!\",\r\n        \"You've unlocked a new achievement!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = (muscle) => {\r\n    setSelectedMuscle(muscle);\r\n    Animated.timing(scaleAnim, {\r\n      toValue: 1.2,\r\n      duration: 200,\r\n      easing: Easing.inOut(Easing.ease),\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      Animated.spring(scaleAnim, {\r\n        toValue: 1,\r\n        friction: 4,\r\n        tension: 40,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    });\r\n    setEditDays(muscleData[muscle].toString());\r\n    setEditMode(true);\r\n  };\r\n\r\n  const saveEdit = async () => {\r\n    if (isNaN(editDays) || editDays === \"\") {\r\n      Alert.alert(\"Error\", \"Please enter a valid number\");\r\n      return;\r\n    }\r\n    try {\r\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\r\n      setMuscleData(newData);\r\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\r\n      setEditMode(false);\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", \"Failed to save changes\");\r\n    }\r\n  };\r\n\r\n  const renderMuscleItem = ({ item: muscle }) => {\r\n    const days = muscleData[muscle] || 0;\r\n    const status = days < 48 ? \"rest\" : days < 72 ? \"caution\" : \"ready\";\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.muscleItem}\r\n        onPress={() => updateMuscle(muscle)}\r\n        onLongPress={() => handleEdit(muscle)}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            transform: [{ scale: scaleAnim }],\r\n          }}\r\n        >\r\n          <View style={styles.muscleStatus(status)}>\r\n            <Text style={styles.muscleName}>{muscle}</Text>\r\n            <View style={styles.daysContainer}>\r\n              <Text style={styles.daysText}>{days} days</Text>\r\n              <TouchableOpacity\r\n                style={styles.editButton}\r\n                onPress={() => handleEdit(muscle)}\r\n              >\r\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      refreshControl={\r\n        <RefreshControl\r\n          refreshing={isRefreshing}\r\n          onRefresh={async () => {\r\n            setIsRefreshing(true);\r\n            await loadMuscleData();\r\n            await loadStreak();\r\n            await loadAchievements();\r\n            setIsRefreshing(false);\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>\r\n          Welcome to TFC your Training Frequency Calculator\r\n        </Text>\r\n        {isAuthenticated && user && (\r\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\r\n        )}\r\n\r\n        {/* Streak Counter */}\r\n        <View style={styles.streakContainer}>\r\n          <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\r\n          <Text style={styles.streakText}>{streak} day streak!</Text>\r\n        </View>\r\n\r\n        {/* Quick Stats */}\r\n        <View style={styles.statsContainer}>\r\n          <View style={styles.statItem}>\r\n            <Text style={styles.statNumber}>\r\n              {Object.values(muscleData).filter((days) => days >= 48).length}\r\n            </Text>\r\n            <Text style={styles.statLabel}>Ready Muscles</Text>\r\n          </View>\r\n          <View style={styles.statItem}>\r\n            <Text style={styles.statNumber}>\r\n              {Object.values(muscleData).filter((days) => days < 48).length}\r\n            </Text>\r\n            <Text style={styles.statLabel}>Resting Muscles</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\r\n\r\n      <FlatList\r\n        data={\r\n          selectedGroup === null\r\n            ? MUSCLE_GROUPS\r\n            : selectedGroup === \"upper\"\r\n            ? UPPER_BODY\r\n            : LOWER_BODY\r\n        }\r\n        renderItem={renderMuscleItem}\r\n        keyExtractor={(item) => item}\r\n        style={styles.list}\r\n        contentContainerStyle={styles.listContainer}\r\n      />\r\n\r\n      {/* Quick Actions */}\r\n      <View style={styles.quickActions}>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.quickActionItem,\r\n            selectedGroup === \"upper\" && styles.selectedGroup,\r\n          ]}\r\n          onPress={() => {\r\n            setSelectedGroup(\"upper\");\r\n            UPPER_BODY.forEach((muscle) => updateMuscle(muscle));\r\n          }}\r\n        >\r\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\r\n          <Text style={styles.quickActionText}>Upper Body</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.quickActionItem,\r\n            selectedGroup === \"lower\" && styles.selectedGroup,\r\n          ]}\r\n          onPress={() => {\r\n            setSelectedGroup(\"lower\");\r\n            LOWER_BODY.forEach((muscle) => updateMuscle(muscle));\r\n          }}\r\n        >\r\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\r\n          <Text style={styles.quickActionText}>Lower Body</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Reset button to show all muscles */}\r\n      {selectedGroup !== null && (\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            styles.secondaryButton,\r\n            {\r\n              position: \"absolute\",\r\n              bottom: 16,\r\n              left: 16,\r\n              right: 16,\r\n            },\r\n          ]}\r\n          onPress={() => setSelectedGroup(null)}\r\n        >\r\n          <Text style={styles.buttonText}>Show All Muscles</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>\r\n              Edit Days for {selectedMuscle}\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={editDays}\r\n              onChangeText={setEditDays}\r\n              keyboardType=\"numeric\"\r\n              placeholder=\"Enter number of days\"\r\n            />\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.cancelButton]}\r\n                onPress={() => setEditMode(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.saveButton]}\r\n                onPress={saveEdit}\r\n              >\r\n                <Text style={styles.buttonText}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}