{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\App.web.js\",\n  _this = this;\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AboutScreen from \"./screens/AboutScreen\";\nimport CalculatorScreen from \"./screens/RecoveryGuideScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LoginScreen from \"./login/login\";\nimport CreateAccount from \"./login/createAccount\";\nimport RecoveryScreen from \"./screens/RecoveryScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ButtonStyles from \"./styles/Button\";\nimport { linking } from \"./navigation/linking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Calculator\") {\n            iconName = focused ? \"calculator\" : \"calculator-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"person\" : \"person-outline\";\n          } else if (route.name === \"About\") {\n            iconName = focused ? \"information-circle\" : \"information-circle-outline\";\n          }\n          return _jsxDEV(View, {\n            style: ButtonStyles.tabBarButton,\n            children: [_jsxDEV(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, _this), _jsxDEV(Text, {\n              style: [ButtonStyles.tabBarText, focused ? ButtonStyles.tabBarActive : ButtonStyles.tabBarInactive],\n              children: route.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this);\n        },\n        tabBarStyle: {\n          backgroundColor: \"#fff\",\n          borderTopWidth: 1,\n          borderTopColor: \"#e2e8f0\",\n          paddingTop: 10,\n          height: 70\n        },\n        tabBarActiveTintColor: \"#6b46c1\",\n        tabBarInactiveTintColor: \"#718096\"\n      };\n    },\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: \"Home\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Calculator\",\n      component: CalculatorScreen,\n      options: {\n        title: \"Calculator\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        title: \"About\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\nvar App = function App() {\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(NavigationContainer, {\n      linking: linking,\n      theme: DefaultTheme,\n      children: _jsxDEV(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#6b46c1\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          }\n        },\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            title: \"Login\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"CreateAccount\",\n          component: CreateAccount,\n          options: {\n            title: \"Create Account\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Recovery\",\n          component: RecoveryScreen,\n          options: {\n            title: \"Account Recovery\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"ResetPassword\",\n          component: ResetPasswordScreen,\n          options: {\n            title: \"Reset Password\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabNavigator,\n          options: {\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, _this);\n};\nexport default App;","map":{"version":3,"names":["React","View","Text","NavigationContainer","DefaultTheme","createStackNavigator","createBottomTabNavigator","Provider","store","HomeScreen","AboutScreen","CalculatorScreen","ProfileScreen","LoginScreen","CreateAccount","RecoveryScreen","ResetPasswordScreen","Ionicons","ButtonStyles","linking","jsxDEV","_jsxDEV","Stack","Tab","TabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","style","tabBarButton","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","tabBarText","tabBarActive","tabBarInactive","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","paddingTop","height","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","title","App","theme","initialRouteName","headerStyle","headerTintColor","headerTitleStyle","fontWeight","headerShown"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/App.web.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AboutScreen from \"./screens/AboutScreen\";\nimport CalculatorScreen from \"./screens/RecoveryGuideScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LoginScreen from \"./login/login\";\nimport CreateAccount from \"./login/createAccount\";\nimport RecoveryScreen from \"./screens/RecoveryScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ButtonStyles from \"./styles/Button\";\nimport { linking } from \"./navigation/linking\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Calculator\") {\n            iconName = focused ? \"calculator\" : \"calculator-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"person\" : \"person-outline\";\n          } else if (route.name === \"About\") {\n            iconName = focused ? \"information-circle\" : \"information-circle-outline\";\n          }\n\n          return (\n            <View style={ButtonStyles.tabBarButton}>\n              <Ionicons name={iconName} size={size} color={color} />\n              <Text\n                style={[\n                  ButtonStyles.tabBarText,\n                  focused ? ButtonStyles.tabBarActive : ButtonStyles.tabBarInactive,\n                ]}\n              >\n                {route.name}\n              </Text>\n            </View>\n          );\n        },\n        tabBarStyle: {\n          backgroundColor: \"#fff\",\n          borderTopWidth: 1,\n          borderTopColor: \"#e2e8f0\",\n          paddingTop: 10,\n          height: 70,\n        },\n        tabBarActiveTintColor: \"#6b46c1\",\n        tabBarInactiveTintColor: \"#718096\",\n      })}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: \"Home\"\n        }}\n      />\n      <Tab.Screen\n        name=\"Calculator\"\n        component={CalculatorScreen}\n        options={{\n          title: \"Calculator\"\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={{\n          title: \"Profile\"\n        }}\n      />\n      <Tab.Screen\n        name=\"About\"\n        component={AboutScreen}\n        options={{\n          title: \"About\"\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <NavigationContainer linking={linking} theme={DefaultTheme}>\n        <Stack.Navigator\n          initialRouteName=\"Login\"\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#6b46c1\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"Login\"\n            component={LoginScreen}\n            options={{\n              title: \"Login\",\n            }}\n          />\n          <Stack.Screen\n            name=\"CreateAccount\"\n            component={CreateAccount}\n            options={{\n              title: \"Create Account\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Recovery\"\n            component={RecoveryScreen}\n            options={{\n              title: \"Account Recovery\",\n            }}\n          />\n          <Stack.Screen\n            name=\"ResetPassword\"\n            component={ResetPasswordScreen}\n            options={{\n              title: \"Reset Password\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Tabs\"\n            component={TabNavigator}\n            options={{\n              headerShown: false,\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}