{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar API_URL = 'http://localhost:5001/api';\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (identifier, password) {\n    try {\n      var response = yield axios.post(`${API_URL}/login`, {\n        identifier: identifier,\n        password: password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.error) || error.message;\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var register = function () {\n  var _ref2 = _asyncToGenerator(function* (username, email, password) {\n    try {\n      var response = yield axios.post(`${API_URL}/register`, {\n        username: username,\n        email: email,\n        password: password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw ((_error$response2 = error.response) == null ? void 0 : (_error$response2$data = _error$response2.data) == null ? void 0 : _error$response2$data.error) || error.message;\n    }\n  });\n  return function register(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var forgotPassword = function () {\n  var _ref3 = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield axios.post(`${API_URL}/auth/forgot-password`, {\n        email: email\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw ((_error$response3 = error.response) == null ? void 0 : (_error$response3$data = _error$response3.data) == null ? void 0 : _error$response3$data.error) || error.message;\n    }\n  });\n  return function forgotPassword(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var resetPassword = function () {\n  var _ref4 = _asyncToGenerator(function* (token, newPassword) {\n    try {\n      var response = yield axios.post(`${API_URL}/auth/reset-password`, {\n        token: token,\n        newPassword: newPassword\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw ((_error$response4 = error.response) == null ? void 0 : (_error$response4$data = _error$response4.data) == null ? void 0 : _error$response4$data.error) || error.message;\n    }\n  });\n  return function resetPassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var recoverUsername = function () {\n  var _ref5 = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield axios.post(`${API_URL}/auth/recover-username`, {\n        email: email\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw ((_error$response5 = error.response) == null ? void 0 : (_error$response5$data = _error$response5.data) == null ? void 0 : _error$response5$data.error) || error.message;\n    }\n  });\n  return function recoverUsername(_x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","API_URL","login","_ref","_asyncToGenerator","identifier","password","response","post","data","error","_error$response","_error$response$data","message","_x","_x2","apply","arguments","register","_ref2","username","email","_error$response2","_error$response2$data","_x3","_x4","_x5","forgotPassword","_ref3","_error$response3","_error$response3$data","_x6","resetPassword","_ref4","token","newPassword","_error$response4","_error$response4$data","_x7","_x8","recoverUsername","_ref5","_error$response5","_error$response5$data","_x9"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\n// Use different URLs based on platform\nconst API_URL = 'http://localhost:5001/api';\n\nexport const login = async (identifier, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      identifier,\n      password,\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.error || error.message;\n  }\n};\n\nexport const register = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, {\n      username,\n      email,\n      password,\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.error || error.message;\n  }\n};\n\nexport const forgotPassword = async (email) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/forgot-password`, {\n      email,\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.error || error.message;\n  }\n};\n\nexport const resetPassword = async (token, newPassword) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/reset-password`, {\n      token,\n      newPassword,\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.error || error.message;\n  }\n};\n\nexport const recoverUsername = async (email) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/recover-username`, {\n      email,\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data?.error || error.message;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}