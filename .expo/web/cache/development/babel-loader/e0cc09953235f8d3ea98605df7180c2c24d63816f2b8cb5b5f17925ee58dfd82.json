{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMuscles = _useState4[0],\n    setSelectedMuscles = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isWorkoutModalVisible = _useState6[0],\n    setIsWorkoutModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    workoutTimer = _useState8[0],\n    setWorkoutTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTimerRunning = _useState10[0],\n    setIsTimerRunning = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    workoutHistory = _useState12[0],\n    setWorkoutHistory = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isRefreshing = _useState14[0],\n    setIsRefreshing = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    editMode = _useState16[0],\n    setEditMode = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedMuscle = _useState18[0],\n    setSelectedMuscle = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    editDays = _useState20[0],\n    setEditDays = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    streak = _useState22[0],\n    setStreak = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    achievements = _useState24[0],\n    setAchievements = _useState24[1];\n  var _useState25 = useState(null),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedGroup = _useState26[0],\n    setSelectedGroup = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    trainedMuscles = _useState28[0],\n    setTrainedMuscles = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    workoutInProgress = _useState30[0],\n    setWorkoutInProgress = _useState30[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n  var MUSCLE_GROUPS = [].concat(UPPER_BODY, LOWER_BODY);\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref3 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: isAuthenticated ? _jsxDEV(_Fragment, {\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                marginRight: 8\n              }],\n              onPress: function onPress() {\n                return navigation.navigate(\"Calculator\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Calculator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                backgroundColor: \"#553c9a\"\n              }],\n              onPress: function onPress() {\n                dispatch(logout());\n                navigation.replace(\"Login\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true) : _jsxDEV(TouchableOpacity, {\n            style: ButtonStyles.headerButton,\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsxDEV(Text, {\n              style: ButtonStyles.headerButtonText,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, _this);\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  var loadMuscleData = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      if (prev.includes(muscle)) {\n        return prev.filter(function (m) {\n          return m !== muscle;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [muscle]);\n    });\n  };\n  var clearMuscle = function clearMuscle(muscle) {\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var clearAllMuscles = function clearAllMuscles() {\n    setSelectedMuscles([]);\n  };\n  var startWorkout = function startWorkout() {\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n    var workoutData = {\n      muscles: selectedMuscles,\n      startTime: new Date().toISOString(),\n      duration: 0,\n      userId: user == null ? void 0 : user.id\n    };\n    setWorkoutHistory([].concat(_toConsumableArray(workoutHistory), [workoutData]));\n  };\n  var endWorkout = function endWorkout() {\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    var currentTime = new Date().getTime();\n    var updatedMuscleData = _objectSpread({}, muscleData);\n    selectedMuscles.forEach(function (muscle) {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n    var lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout.duration = workoutTimer;\n      setWorkoutHistory([].concat(_toConsumableArray(workoutHistory.slice(0, -1)), [lastWorkout]));\n    }\n  };\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n  var renderMuscleItem = function renderMuscleItem(_ref9) {\n    var muscle = _ref9.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, _this);\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxDEV(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsxDEV(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return clearMuscle(muscle);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.chipText,\n              children: muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.clearAllButton,\n        onPress: clearAllMuscles,\n        children: _jsxDEV(Text, {\n          style: styles.clearAllText,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, _this),\n    children: [renderMuscleSelectionBanner(), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: styles.streakContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"trophy\",\n          size: 24,\n          color: \"#FFD700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.streakText,\n          children: [streak, \" day streak!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: [_jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days >= 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Ready Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days < 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Resting Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.quickActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.startWorkoutButton],\n        onPress: function onPress() {\n          return setIsWorkoutModalVisible(true);\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"play-circle\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.endWorkoutButton],\n        onPress: endWorkout,\n        disabled: !workoutInProgress || selectedMuscles.length === 0,\n        children: [_jsxDEV(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }, _this), _jsxDEV(WorkoutSelectionModal, {\n      visible: isWorkoutModalVisible,\n      onClose: function onClose() {\n        return setIsWorkoutModalVisible(false);\n      },\n      onMuscleSelect: handleMuscleSelect,\n      selectedMuscles: selectedMuscles,\n      startWorkout: startWorkout,\n      endWorkout: endWorkout,\n      workoutTimer: workoutTimer,\n      isWorkoutInProgress: workoutInProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, _this), workoutInProgress && _jsxDEV(View, {\n      style: styles.workoutInProgressContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.workoutInProgressText,\n        children: \"Workout in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.endWorkoutButton,\n        onPress: endWorkout,\n        children: _jsxDEV(Text, {\n          style: styles.endWorkoutButtonText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, _this);\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","ButtonStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","selectedMuscles","setSelectedMuscles","_useState5","_useState6","isWorkoutModalVisible","setIsWorkoutModalVisible","_useState7","_useState8","workoutTimer","setWorkoutTimer","_useState9","_useState10","isTimerRunning","setIsTimerRunning","_useState11","_useState12","workoutHistory","setWorkoutHistory","_useState13","_useState14","isRefreshing","setIsRefreshing","_useState15","_useState16","editMode","setEditMode","_useState17","_useState18","selectedMuscle","setSelectedMuscle","_useState19","_useState20","editDays","setEditDays","_useState21","_useState22","streak","setStreak","_useState23","_useState24","achievements","setAchievements","_useState25","_useState26","selectedGroup","setSelectedGroup","_useState27","_useState28","trainedMuscles","setTrainedMuscles","_useState29","_useState30","workoutInProgress","setWorkoutInProgress","_useSelector","state","auth","isAuthenticated","user","dispatch","workoutTimerRef","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","concat","getStatus","days","loadStreak","_ref2","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref3","value","setItem","toString","_x","updateStreak","_ref4","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref5","savedAchievements","JSON","parse","_ref6","currentStreak","prevAchievements","newAchievements","includes","push","length","_toConsumableArray","stringify","loadMuscleData","setOptions","headerRight","style","flexDirection","children","headerButton","marginRight","onPress","navigate","headerButtonText","fileName","_jsxFileName","lineNumber","columnNumber","_this","backgroundColor","replace","_ref7","savedData","initialData","reduce","acc","muscle","alert","handleMuscleSelect","prev","filter","m","clearMuscle","clearAllMuscles","startWorkout","workoutData","muscles","startTime","duration","userId","id","endWorkout","currentTime","getTime","updatedMuscleData","_objectSpread","forEach","slice","handleEdit","saveEdit","_ref8","isNaN","newData","_defineProperty","cancelEdit","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","setInterval","clearInterval","renderMuscleItem","_ref9","item","status","muscleButton","onLongPress","transform","scale","muscleStatus","muscleName","daysContainer","daysText","editButton","name","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","chipText","clearAllButton","clearAllText","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","username","streakContainer","streakText","statsContainer","statItem","statNumber","Object","values","statLabel","subtitle","data","renderItem","keyExtractor","list","contentContainerStyle","listContainer","quickActions","quickActionItem","startWorkoutButton","quickActionText","endWorkoutButton","disabled","button","secondaryButton","position","bottom","left","right","buttonText","visible","onClose","onMuscleSelect","isWorkoutInProgress","workoutInProgressContainer","workoutInProgressText","endWorkoutButtonText","transparent","animationType","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Modal,\r\n  TextInput,\r\n  Alert,\r\n  Animated,\r\n  Easing,\r\n  RefreshControl,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/authSlice\";\r\nimport { styles } from \"../styles/HomeStyles\";\r\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\r\nimport WorkoutBanner from \"../components/workoutBanner\";\r\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport ButtonStyles from \"../styles/Button\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [muscleData, setMuscleData] = useState({});\r\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\r\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\r\n  const [workoutTimer, setWorkoutTimer] = useState(0);\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [workoutHistory, setWorkoutHistory] = useState([]);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\r\n  const [editDays, setEditDays] = useState(\"\");\r\n  const [streak, setStreak] = useState(0);\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\r\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\r\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const workoutTimerRef = useRef(null);\r\n  const scaleAnim = useRef(new Animated.Value(1)).current;\r\n\r\n  // Define muscle groups\r\n  const UPPER_BODY = [\r\n    \"Biceps\",\r\n    \"Triceps\",\r\n    \"Chest\",\r\n    \"Shoulders\",\r\n    \"Traps\",\r\n    \"Back\",\r\n  ];\r\n\r\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\r\n\r\n  const MUSCLE_GROUPS = [...UPPER_BODY, ...LOWER_BODY];\r\n\r\n  // Function to determine muscle status based on days\r\n  const getStatus = (days) => {\r\n    if (days <= 1) {\r\n      return \"red\"; // Do not train\r\n    } else if (days <= 3) {\r\n      return \"yellow\"; // Caution\r\n    } else {\r\n      return \"green\"; // Safe to train\r\n    }\r\n  };\r\n\r\n  // Function to load streak from AsyncStorage\r\n  const loadStreak = async () => {\r\n    try {\r\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\r\n      if (savedStreak !== null) {\r\n        setStreak(parseInt(savedStreak));\r\n      } else {\r\n        setStreak(0);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading streak:\", error);\r\n      setStreak(0);\r\n    }\r\n  };\r\n\r\n  // Function to save streak to AsyncStorage\r\n  const saveStreak = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem(\"streak\", value.toString());\r\n    } catch (error) {\r\n      console.error(\"Error saving streak:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to update streak when a workout is completed\r\n  const updateStreak = async () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\r\n\r\n    if (lastWorkout === today) {\r\n      // Workout already completed today\r\n      return;\r\n    }\r\n\r\n    setStreak((prevStreak) => {\r\n      const newStreak = prevStreak + 1;\r\n      saveStreak(newStreak);\r\n      AsyncStorage.setItem(\"lastWorkout\", today);\r\n      return newStreak;\r\n    });\r\n\r\n    // Check for achievements\r\n    checkAchievements();\r\n  };\r\n\r\n  // Function to load achievements\r\n  const loadAchievements = async () => {\r\n    try {\r\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\r\n      if (savedAchievements !== null) {\r\n        setAchievements(JSON.parse(savedAchievements));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading achievements:\", error);\r\n      setAchievements([]);\r\n    }\r\n  };\r\n\r\n  // Function to check for new achievements\r\n  const checkAchievements = async () => {\r\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\r\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\r\n    const prevAchievements = savedAchievements\r\n      ? JSON.parse(savedAchievements)\r\n      : [];\r\n\r\n    const newAchievements = [];\r\n\r\n    // Check for streak achievements\r\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\r\n      newAchievements.push(\"week\");\r\n    }\r\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\r\n      newAchievements.push(\"month\");\r\n    }\r\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\r\n      newAchievements.push(\"quarter\");\r\n    }\r\n\r\n    if (newAchievements.length > 0) {\r\n      setAchievements([...prevAchievements, ...newAchievements]);\r\n      await AsyncStorage.setItem(\r\n        \"achievements\",\r\n        JSON.stringify([...prevAchievements, ...newAchievements])\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMuscleData();\r\n    loadStreak();\r\n    loadAchievements();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => (\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          {isAuthenticated ? (\r\n            <>\r\n              <TouchableOpacity\r\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\r\n                onPress={() => navigation.navigate(\"Calculator\")}\r\n              >\r\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[\r\n                  ButtonStyles.headerButton,\r\n                  { backgroundColor: \"#553c9a\" },\r\n                ]}\r\n                onPress={() => {\r\n                  dispatch(logout());\r\n                  navigation.replace(\"Login\");\r\n                }}\r\n              >\r\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\r\n              </TouchableOpacity>\r\n            </>\r\n          ) : (\r\n            <TouchableOpacity\r\n              style={ButtonStyles.headerButton}\r\n              onPress={() => navigation.navigate(\"Login\")}\r\n            >\r\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      ),\r\n    });\r\n  }, [navigation, isAuthenticated]);\r\n\r\n  const loadMuscleData = async () => {\r\n    try {\r\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\r\n      if (savedData !== null) {\r\n        setMuscleData(JSON.parse(savedData));\r\n      } else {\r\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\r\n          acc[muscle] = 0;\r\n          return acc;\r\n        }, {});\r\n        setMuscleData(initialData);\r\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\r\n    }\r\n  };\r\n\r\n  const handleMuscleSelect = (muscle) => {\r\n    setSelectedMuscles((prev) => {\r\n      // If the muscle is already selected, remove it\r\n      if (prev.includes(muscle)) {\r\n        return prev.filter((m) => m !== muscle);\r\n      }\r\n      // Otherwise, add it to the selection\r\n      return [...prev, muscle];\r\n    });\r\n  };\r\n\r\n  const clearMuscle = (muscle) => {\r\n    setSelectedMuscles((prev) => prev.filter((m) => m !== muscle));\r\n  };\r\n\r\n  const clearAllMuscles = () => {\r\n    setSelectedMuscles([]);\r\n  };\r\n\r\n  const startWorkout = () => {\r\n    if (selectedMuscles.length === 0) {\r\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\r\n      return;\r\n    }\r\n    setIsWorkoutModalVisible(false);\r\n    setWorkoutInProgress(true);\r\n    setIsTimerRunning(true);\r\n    setWorkoutTimer(0);\r\n\r\n    // Store the workout in history\r\n    const workoutData = {\r\n      muscles: selectedMuscles,\r\n      startTime: new Date().toISOString(),\r\n      duration: 0,\r\n      userId: user?.id,\r\n    };\r\n    setWorkoutHistory([...workoutHistory, workoutData]);\r\n  };\r\n\r\n  const endWorkout = () => {\r\n    setIsTimerRunning(false);\r\n    setWorkoutInProgress(false);\r\n\r\n    // Update the last workout time for selected muscles\r\n    const currentTime = new Date().getTime();\r\n    const updatedMuscleData = { ...muscleData };\r\n    selectedMuscles.forEach((muscle) => {\r\n      updatedMuscleData[muscle] = currentTime;\r\n    });\r\n    setMuscleData(updatedMuscleData);\r\n\r\n    // Update the workout history with duration\r\n    const lastWorkout = workoutHistory[workoutHistory.length - 1];\r\n    if (lastWorkout) {\r\n      lastWorkout.duration = workoutTimer;\r\n      setWorkoutHistory([...workoutHistory.slice(0, -1), lastWorkout]);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (muscle) => {\r\n    setEditMode(true);\r\n    setEditDays(muscleData[muscle].toString());\r\n    setSelectedMuscle(muscle);\r\n  };\r\n\r\n  const saveEdit = async () => {\r\n    if (isNaN(editDays) || editDays === \"\") {\r\n      Alert.alert(\"Error\", \"Please enter a valid number\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\r\n      setMuscleData(newData);\r\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\r\n      setEditMode(false);\r\n      setSelectedMuscle(null);\r\n    } catch (error) {\r\n      Alert.alert(\"Error\", \"Failed to save changes\");\r\n    }\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditMode(false);\r\n    setSelectedMuscle(null);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      workoutTimerRef.current = setInterval(() => {\r\n        setWorkoutTimer((prev) => prev + 1);\r\n      }, 1000);\r\n    } else if (workoutTimerRef.current) {\r\n      clearInterval(workoutTimerRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (workoutTimerRef.current) {\r\n        clearInterval(workoutTimerRef.current);\r\n      }\r\n    };\r\n  }, [isTimerRunning]);\r\n\r\n  const renderMuscleItem = ({ item: muscle }) => {\r\n    const days = muscleData[muscle] || 0;\r\n    const status = getStatus(days);\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.muscleButton}\r\n        onPress={() => {\r\n          if (editMode) {\r\n            setEditMode(false);\r\n            setSelectedMuscle(muscle);\r\n            setEditDays(days.toString());\r\n          } else {\r\n            handleMuscleSelect(muscle);\r\n          }\r\n        }}\r\n        onLongPress={() => {\r\n          setEditMode(true);\r\n          setSelectedMuscle(muscle);\r\n          setEditDays(days.toString());\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={{\r\n            transform: [{ scale: scaleAnim }],\r\n          }}\r\n        >\r\n          <View style={styles.muscleStatus(status)}>\r\n            <Text style={styles.muscleName}>{muscle}</Text>\r\n            <View style={styles.daysContainer}>\r\n              <Text style={styles.daysText}>{days} days</Text>\r\n              <TouchableOpacity\r\n                style={styles.editButton}\r\n                onPress={() => handleEdit(muscle)}\r\n              >\r\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const renderMuscleSelectionBanner = () => {\r\n    if (!workoutInProgress) return null;\r\n\r\n    return (\r\n      <View style={styles.muscleSelectionBanner}>\r\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\r\n        <View style={styles.selectedMusclesContainer}>\r\n          {selectedMuscles.map((muscle, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={styles.selectedMuscleChip}\r\n              onPress={() => clearMuscle(muscle)}\r\n            >\r\n              <Text style={styles.chipText}>{muscle}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.clearAllButton}\r\n          onPress={clearAllMuscles}\r\n        >\r\n          <Text style={styles.clearAllText}>Clear All</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      refreshControl={\r\n        <RefreshControl\r\n          refreshing={isRefreshing}\r\n          onRefresh={async () => {\r\n            setIsRefreshing(true);\r\n            await loadMuscleData();\r\n            await loadStreak();\r\n            await loadAchievements();\r\n            setIsRefreshing(false);\r\n          }}\r\n        />\r\n      }\r\n    >\r\n      {renderMuscleSelectionBanner()}\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>\r\n          Welcome to TFC your Training Frequency Calculator\r\n        </Text>\r\n        {isAuthenticated && user && (\r\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\r\n        )}\r\n\r\n        {/* Streak Counter */}\r\n        <View style={styles.streakContainer}>\r\n          <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\r\n          <Text style={styles.streakText}>{streak} day streak!</Text>\r\n        </View>\r\n\r\n        {/* Quick Stats */}\r\n        <View style={styles.statsContainer}>\r\n          <View style={styles.statItem}>\r\n            <Text style={styles.statNumber}>\r\n              {Object.values(muscleData).filter((days) => days >= 48).length}\r\n            </Text>\r\n            <Text style={styles.statLabel}>Ready Muscles</Text>\r\n          </View>\r\n          <View style={styles.statItem}>\r\n            <Text style={styles.statNumber}>\r\n              {Object.values(muscleData).filter((days) => days < 48).length}\r\n            </Text>\r\n            <Text style={styles.statLabel}>Resting Muscles</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\r\n\r\n      <FlatList\r\n        data={\r\n          selectedGroup === null\r\n            ? MUSCLE_GROUPS\r\n            : selectedGroup === \"upper\"\r\n            ? UPPER_BODY\r\n            : LOWER_BODY\r\n        }\r\n        renderItem={renderMuscleItem}\r\n        keyExtractor={(item) => item}\r\n        style={styles.list}\r\n        contentContainerStyle={styles.listContainer}\r\n      />\r\n\r\n      {/* Quick Actions */}\r\n      <View style={styles.quickActions}>\r\n        <TouchableOpacity\r\n          style={[styles.quickActionItem, styles.startWorkoutButton]}\r\n          onPress={() => setIsWorkoutModalVisible(true)}\r\n        >\r\n          <Ionicons name=\"play-circle\" size={24} color=\"#2196F3\" />\r\n          <Text style={styles.quickActionText}>Start Workout</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[styles.quickActionItem, styles.endWorkoutButton]}\r\n          onPress={endWorkout}\r\n          disabled={!workoutInProgress || selectedMuscles.length === 0}\r\n        >\r\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\r\n          <Text style={styles.quickActionText}>End Workout</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.quickActionItem,\r\n            selectedGroup === \"upper\" && styles.selectedGroup,\r\n          ]}\r\n          onPress={() => {\r\n            setSelectedGroup(\"upper\");\r\n            UPPER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\r\n          }}\r\n        >\r\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\r\n          <Text style={styles.quickActionText}>Upper Body</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.quickActionItem,\r\n            selectedGroup === \"lower\" && styles.selectedGroup,\r\n          ]}\r\n          onPress={() => {\r\n            setSelectedGroup(\"lower\");\r\n            LOWER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\r\n          }}\r\n        >\r\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\r\n          <Text style={styles.quickActionText}>Lower Body</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Reset button to show all muscles */}\r\n      {selectedGroup !== null && (\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            styles.secondaryButton,\r\n            {\r\n              position: \"absolute\",\r\n              bottom: 12,\r\n              left: 16,\r\n              right: 16,\r\n            },\r\n          ]}\r\n          onPress={() => setSelectedGroup(null)}\r\n        >\r\n          <Text style={styles.buttonText}>Show All Muscles</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      <WorkoutSelectionModal\r\n        visible={isWorkoutModalVisible}\r\n        onClose={() => setIsWorkoutModalVisible(false)}\r\n        onMuscleSelect={handleMuscleSelect}\r\n        selectedMuscles={selectedMuscles}\r\n        startWorkout={startWorkout}\r\n        endWorkout={endWorkout}\r\n        workoutTimer={workoutTimer}\r\n        isWorkoutInProgress={workoutInProgress}\r\n      />\r\n\r\n      {workoutInProgress && (\r\n        <View style={styles.workoutInProgressContainer}>\r\n          <Text style={styles.workoutInProgressText}>Workout in Progress</Text>\r\n          <TouchableOpacity\r\n            style={styles.endWorkoutButton}\r\n            onPress={endWorkout}\r\n          >\r\n            <Text style={styles.endWorkoutButtonText}>End Workout</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n\r\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>\r\n              Edit Days for {selectedMuscle}\r\n            </Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={editDays}\r\n              onChangeText={setEditDays}\r\n              keyboardType=\"numeric\"\r\n              placeholder=\"Enter number of days\"\r\n            />\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.cancelButton]}\r\n                onPress={() => setEditMode(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.modalButton, styles.saveButton]}\r\n                onPress={saveEdit}\r\n              >\r\n                <Text style={styles.buttonText}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}