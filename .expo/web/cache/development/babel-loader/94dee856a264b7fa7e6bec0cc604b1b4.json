{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  workouts: [],\n  muscleStatus: {\n    chest: {\n      lastWorkout: null\n    },\n    back: {\n      lastWorkout: null\n    },\n    shoulders: {\n      lastWorkout: null\n    },\n    biceps: {\n      lastWorkout: null\n    },\n    triceps: {\n      lastWorkout: null\n    },\n    forearms: {\n      lastWorkout: null\n    },\n    abs: {\n      lastWorkout: null\n    },\n    traps: {\n      lastWorkout: null\n    },\n    quads: {\n      lastWorkout: null\n    },\n    hamstrings: {\n      lastWorkout: null\n    },\n    calves: {\n      lastWorkout: null\n    },\n    glutes: {\n      lastWorkout: null\n    }\n  }\n};\nvar workoutSlice = createSlice({\n  name: 'workout',\n  initialState: initialState,\n  reducers: {\n    addWorkout: function addWorkout(state, action) {\n      var _action$payload = action.payload,\n        date = _action$payload.date,\n        muscles = _action$payload.muscles,\n        intensity = _action$payload.intensity;\n      state.workouts.push({\n        date: date,\n        muscles: muscles,\n        intensity: intensity\n      });\n      muscles.forEach(function (muscle) {\n        if (state.muscleStatus[muscle]) {\n          state.muscleStatus[muscle].lastWorkout = date;\n        }\n      });\n    },\n    clearWorkouts: function clearWorkouts(state) {\n      return initialState;\n    }\n  }\n});\nvar _workoutSlice$actions = workoutSlice.actions,\n  addWorkout = _workoutSlice$actions.addWorkout,\n  clearWorkouts = _workoutSlice$actions.clearWorkouts;\nexport { addWorkout, clearWorkouts };\nexport default workoutSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","workouts","muscleStatus","chest","lastWorkout","back","shoulders","biceps","triceps","forearms","abs","traps","quads","hamstrings","calves","glutes","workoutSlice","name","reducers","addWorkout","state","action","_action$payload","payload","date","muscles","intensity","push","forEach","muscle","clearWorkouts","_workoutSlice$actions","actions","reducer"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/redux/workoutSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  workouts: [],\r\n  muscleStatus: {\r\n    chest: { lastWorkout: null },\r\n    back: { lastWorkout: null },\r\n    shoulders: { lastWorkout: null },\r\n    biceps: { lastWorkout: null },\r\n    triceps: { lastWorkout: null },\r\n    forearms: { lastWorkout: null },\r\n    abs: { lastWorkout: null },\r\n    traps: { lastWorkout: null },\r\n    quads: { lastWorkout: null },\r\n    hamstrings: { lastWorkout: null },\r\n    calves: { lastWorkout: null },\r\n    glutes: { lastWorkout: null }\r\n  }\r\n};\r\n\r\nconst workoutSlice = createSlice({\r\n  name: 'workout',\r\n  initialState,\r\n  reducers: {\r\n    addWorkout: (state, action) => {\r\n      const { date, muscles, intensity } = action.payload;\r\n      // Add the workout to history\r\n      state.workouts.push({\r\n        date,\r\n        muscles,\r\n        intensity\r\n      });\r\n      \r\n      // Update last workout date for each muscle\r\n      muscles.forEach(muscle => {\r\n        if (state.muscleStatus[muscle]) {\r\n          state.muscleStatus[muscle].lastWorkout = date;\r\n        }\r\n      });\r\n    },\r\n    clearWorkouts: (state) => {\r\n      return initialState;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addWorkout, clearWorkouts } = workoutSlice.actions;\r\nexport default workoutSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAK,CAAC;IAC5BC,IAAI,EAAE;MAAED,WAAW,EAAE;IAAK,CAAC;IAC3BE,SAAS,EAAE;MAAEF,WAAW,EAAE;IAAK,CAAC;IAChCG,MAAM,EAAE;MAAEH,WAAW,EAAE;IAAK,CAAC;IAC7BI,OAAO,EAAE;MAAEJ,WAAW,EAAE;IAAK,CAAC;IAC9BK,QAAQ,EAAE;MAAEL,WAAW,EAAE;IAAK,CAAC;IAC/BM,GAAG,EAAE;MAAEN,WAAW,EAAE;IAAK,CAAC;IAC1BO,KAAK,EAAE;MAAEP,WAAW,EAAE;IAAK,CAAC;IAC5BQ,KAAK,EAAE;MAAER,WAAW,EAAE;IAAK,CAAC;IAC5BS,UAAU,EAAE;MAAET,WAAW,EAAE;IAAK,CAAC;IACjCU,MAAM,EAAE;MAAEV,WAAW,EAAE;IAAK,CAAC;IAC7BW,MAAM,EAAE;MAAEX,WAAW,EAAE;IAAK;EAC9B;AACF,CAAC;AAED,IAAMY,YAAY,GAAGjB,WAAW,CAAC;EAC/BkB,IAAI,EAAE,SAAS;EACfjB,YAAY,EAAZA,YAAY;EACZkB,QAAQ,EAAE;IACRC,UAAU,EAAE,SAAZA,UAAUA,CAAGC,KAAK,EAAEC,MAAM,EAAK;MAC7B,IAAAC,eAAA,GAAqCD,MAAM,CAACE,OAAO;QAA3CC,IAAI,GAAAF,eAAA,CAAJE,IAAI;QAAEC,OAAO,GAAAH,eAAA,CAAPG,OAAO;QAAEC,SAAS,GAAAJ,eAAA,CAATI,SAAS;MAEhCN,KAAK,CAACnB,QAAQ,CAAC0B,IAAI,CAAC;QAClBH,IAAI,EAAJA,IAAI;QACJC,OAAO,EAAPA,OAAO;QACPC,SAAS,EAATA;MACF,CAAC,CAAC;MAGFD,OAAO,CAACG,OAAO,CAAC,UAAAC,MAAM,EAAI;QACxB,IAAIT,KAAK,CAAClB,YAAY,CAAC2B,MAAM,CAAC,EAAE;UAC9BT,KAAK,CAAClB,YAAY,CAAC2B,MAAM,CAAC,CAACzB,WAAW,GAAGoB,IAAI;QAC/C;MACF,CAAC,CAAC;IACJ,CAAC;IACDM,aAAa,EAAE,SAAfA,aAAaA,CAAGV,KAAK,EAAK;MACxB,OAAOpB,YAAY;IACrB;EACF;AACF,CAAC,CAAC;AAEK,IAAA+B,qBAAA,GAAsCf,YAAY,CAACgB,OAAO;EAAlDb,UAAU,GAAAY,qBAAA,CAAVZ,UAAU;EAAEW,aAAa,GAAAC,qBAAA,CAAbD,aAAa;AAA0B,SAAAX,UAAA,EAAAW,aAAA;AAClE,eAAed,YAAY,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}