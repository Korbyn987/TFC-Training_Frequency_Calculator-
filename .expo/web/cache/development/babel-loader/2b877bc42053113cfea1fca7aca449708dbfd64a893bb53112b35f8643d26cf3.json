{"ast":null,"code":"var _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/components/WorkoutSelectionModal.js\",\n  _this = this;\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useSelector } from \"react-redux\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport { styles } from \"../styles/workoutSelectionModalStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WorkoutSelectionModal = function WorkoutSelectionModal(_ref) {\n  var visible = _ref.visible,\n    onClose = _ref.onClose,\n    onMuscleSelect = _ref.onMuscleSelect,\n    selectedMuscles = _ref.selectedMuscles;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated;\n  if (!isAuthenticated) {\n    return null;\n  }\n  return _jsxDEV(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"slide\",\n    onRequestClose: onClose,\n    children: _jsxDEV(View, {\n      style: styles.modalOverlay,\n      children: _jsxDEV(View, {\n        style: styles.modalContent,\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          children: [_jsxDEV(Text, {\n            style: styles.title,\n            children: \"Select Muscles for Workouts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this), _jsxDEV(TouchableOpacity, {\n            onPress: onClose,\n            style: styles.closeButton,\n            children: _jsxDEV(Ionicons, {\n              name: \"close\",\n              size: 24,\n              color: \"#6b46c1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.muscleGrid,\n          children: MUSCLE_GROUPS.map(function (muscle) {\n            return _jsxDEV(TouchableOpacity, {\n              style: [styles.muscleButton, selectedMuscles.include(muscle) && styles.selectedMuscleButton],\n              onPress: function onPress() {\n                return onMuscleSelect(muscle);\n              },\n              children: _jsxDEV(Text, {\n                style: [styles.muscleButtonText, selectedMuscles.includes(muscle) && styles.selectedMuscleButtonText],\n                children: muscle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, _this)\n            }, muscle, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, _this);\n};\nexport default WorkoutSelectionModal;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","Modal","Ionicons","useSelector","MUSCLE_GROUPS","styles","jsxDEV","_jsxDEV","WorkoutSelectionModal","_ref","visible","onClose","onMuscleSelect","selectedMuscles","_useSelector","state","auth","isAuthenticated","transparent","animationType","onRequestClose","children","style","modalOverlay","modalContent","header","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","onPress","closeButton","name","size","color","muscleGrid","map","muscle","muscleButton","include","selectedMuscleButton","muscleButtonText","includes","selectedMuscleButtonText"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/components/WorkoutSelectionModal.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, TouchableOpacity, Modal } from \"react-native\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useSelector } from \"react-redux\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport { styles } from \"../styles/workoutSelectionModalStyles\";\n\nconst WorkoutSelectionModal = ({\n  visible,\n  onClose,\n  onMuscleSelect,\n  selectedMuscles,\n}) => {\n  const { isAuthenticated } = useSelector((state) => state.auth);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <View style={styles.header}>\n            <Text style={styles.title}>Select Muscles for Workouts</Text>\n            <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n              <Ionicons name=\"close\" size={24} color=\"#6b46c1\" />\n            </TouchableOpacity>\n          </View>\n          <View style={styles.muscleGrid}>\n            {MUSCLE_GROUPS.map((muscle) => (\n              <TouchableOpacity\n                key={muscle}\n                style={[\n                  styles.muscleButton,\n                  selectedMuscles.include(muscle) &&\n                    styles.selectedMuscleButton,\n                ]}\n                onPress={() => onMuscleSelect(muscle)}\n              >\n                <Text\n                  style={[\n                    styles.muscleButtonText,\n                    selectedMuscles.includes(muscle) &&\n                      styles.selectedMuscleButtonText,\n                  ]}\n                >\n                  {muscle}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\nexport default WorkoutSelectionModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,MAAM,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAKrB;EAAA,IAJJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IACdC,eAAe,GAAAJ,IAAA,CAAfI,eAAe;EAEf,IAAAC,YAAA,GAA4BX,WAAW,CAAC,UAACY,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAtDC,eAAe,GAAAH,YAAA,CAAfG,eAAe;EAEvB,IAAI,CAACA,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EACA,OACEV,OAAA,CAACN,KAAK;IACJS,OAAO,EAAEA,OAAQ;IACjBQ,WAAW,EAAE,IAAK;IAClBC,aAAa,EAAC,OAAO;IACrBC,cAAc,EAAET,OAAQ;IAAAU,QAAA,EAExBd,OAAA,CAACT,IAAI;MAACwB,KAAK,EAAEjB,MAAM,CAACkB,YAAa;MAAAF,QAAA,EAC/Bd,OAAA,CAACT,IAAI;QAACwB,KAAK,EAAEjB,MAAM,CAACmB,YAAa;QAAAH,QAAA,GAC/Bd,OAAA,CAACT,IAAI;UAACwB,KAAK,EAAEjB,MAAM,CAACoB,MAAO;UAAAJ,QAAA,GACzBd,OAAA,CAACR,IAAI;YAACuB,KAAK,EAAEjB,MAAM,CAACqB,KAAM;YAAAL,QAAA,EAAC;UAA2B;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KAAM,CAAC,EAC7DxB,OAAA,CAACP,gBAAgB;YAACgC,OAAO,EAAErB,OAAQ;YAACW,KAAK,EAAEjB,MAAM,CAAC4B,WAAY;YAAAZ,QAAA,EAC5Dd,OAAA,CAACL,QAAQ;cAACgC,IAAI,EAAC,OAAO;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAS;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAAE;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACnC,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACf,CAAC,EACPxB,OAAA,CAACT,IAAI;UAACwB,KAAK,EAAEjB,MAAM,CAACgC,UAAW;UAAAhB,QAAA,EAC5BjB,aAAa,CAACkC,GAAG,CAAC,UAACC,MAAM;YAAA,OACxBhC,OAAA,CAACP,gBAAgB;cAEfsB,KAAK,EAAE,CACLjB,MAAM,CAACmC,YAAY,EACnB3B,eAAe,CAAC4B,OAAO,CAACF,MAAM,CAAC,IAC7BlC,MAAM,CAACqC,oBAAoB,CAC7B;cACFV,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQpB,cAAc,CAAC2B,MAAM,CAAC;cAAA,CAAC;cAAAlB,QAAA,EAEtCd,OAAA,CAACR,IAAI;gBACHuB,KAAK,EAAE,CACLjB,MAAM,CAACsC,gBAAgB,EACvB9B,eAAe,CAAC+B,QAAQ,CAACL,MAAM,CAAC,IAC9BlC,MAAM,CAACwC,wBAAwB,CACjC;gBAAAxB,QAAA,EAEDkB;cAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,GAAAC,KACH;YAAC,GAhBFQ,MAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,GAAAC,KAiBK,CAAC;UAAA,CACpB;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACE,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACH;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACH;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACF,CAAC;AAEZ,CAAC;AACD,eAAevB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}