{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\ResetPasswordScreen.js\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useRoute } from '@react-navigation/native';\nimport { authService } from \"../services/authService\";\nimport ButtonStyles from \"../styles/Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  var _route$params;\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    success = _useState8[0],\n    setSuccess = _useState8[1];\n  var route = useRoute();\n  var token = (_route$params = route.params) == null ? void 0 : _route$params.token;\n  useEffect(function () {\n    if (!token) {\n      setError('Invalid or missing reset token');\n    }\n  }, [token]);\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setError('');\n        if (!newPassword || !confirmPassword) {\n          setError('Please fill in all fields');\n          return;\n        }\n        if (newPassword.length < 6) {\n          setError('Password must be at least 6 characters long');\n          return;\n        }\n        if (newPassword !== confirmPassword) {\n          setError('Passwords do not match');\n          return;\n        }\n        if (!token) {\n          setError('Invalid reset token');\n          return;\n        }\n        yield authService.resetPassword(token, newPassword);\n        setSuccess(true);\n        setNewPassword('');\n        setConfirmPassword('');\n        setTimeout(function () {\n          navigation.navigate('Login');\n        }, 2000);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.error) || 'Failed to reset password');\n      }\n    });\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!token) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        style: styles.error,\n        children: \"Invalid or missing reset token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), !success ? _jsxDEV(_Fragment, {\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChangeText: setNewPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, _this), error ? _jsxDEV(Text, {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }, _this) : null, _jsxDEV(TouchableOpacity, {\n        style: ButtonStyles.primaryButton,\n        onPress: handleSubmit,\n        children: _jsxDEV(Text, {\n          style: ButtonStyles.buttonText,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : _jsxDEV(View, {\n      style: styles.successContainer,\n      children: _jsxDEV(Text, {\n        style: styles.success,\n        children: \"Password reset successful! Redirecting to login...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#6b46c1'\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  error: {\n    color: '#e53e3e',\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  successContainer: {\n    alignItems: 'center'\n  },\n  success: {\n    color: '#38a169',\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","useRoute","authService","ButtonStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordScreen","_ref","_route$params","navigation","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","error","setError","_useState7","_useState8","success","setSuccess","route","token","params","handleSubmit","_ref2","_asyncToGenerator","length","resetPassword","setTimeout","navigate","_error$response","_error$response$data","response","data","apply","arguments","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","title","input","placeholder","value","onChangeText","secureTextEntry","primaryButton","onPress","buttonText","successContainer","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","textAlign"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\nimport { authService } from '../services/authService';\nimport ButtonStyles from '../styles/Button';\n\nconst ResetPasswordScreen = ({ navigation }) => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const route = useRoute();\n  const token = route.params?.token;\n\n  useEffect(() => {\n    if (!token) {\n      setError('Invalid or missing reset token');\n    }\n  }, [token]);\n\n  const handleSubmit = async () => {\n    try {\n      setError('');\n\n      // Validate passwords\n      if (!newPassword || !confirmPassword) {\n        setError('Please fill in all fields');\n        return;\n      }\n\n      if (newPassword.length < 6) {\n        setError('Password must be at least 6 characters long');\n        return;\n      }\n\n      if (newPassword !== confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n\n      if (!token) {\n        setError('Invalid reset token');\n        return;\n      }\n\n      // Call API to reset password\n      await authService.resetPassword(token, newPassword);\n\n      // Show success message and clear form\n      setSuccess(true);\n      setNewPassword('');\n      setConfirmPassword('');\n\n      // Navigate to login after 2 seconds\n      setTimeout(() => {\n        navigation.navigate('Login');\n      }, 2000);\n    } catch (error) {\n      setError(error.response?.data?.error || 'Failed to reset password');\n    }\n  };\n\n  if (!token) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.error}>Invalid or missing reset token</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reset Your Password</Text>\n      \n      {!success ? (\n        <>\n          <TextInput\n            style={styles.input}\n            placeholder=\"New Password\"\n            value={newPassword}\n            onChangeText={setNewPassword}\n            secureTextEntry\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChangeText={setConfirmPassword}\n            secureTextEntry\n          />\n\n          {error ? <Text style={styles.error}>{error}</Text> : null}\n\n          <TouchableOpacity\n            style={ButtonStyles.primaryButton}\n            onPress={handleSubmit}\n          >\n            <Text style={ButtonStyles.buttonText}>Reset Password</Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <View style={styles.successContainer}>\n          <Text style={styles.success}>\n            Password reset successful! Redirecting to login...\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#6b46c1',\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16,\n  },\n  error: {\n    color: '#e53e3e',\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  successContainer: {\n    alignItems: 'center',\n  },\n  success: {\n    color: '#38a169',\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n\nexport default ResetPasswordScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}