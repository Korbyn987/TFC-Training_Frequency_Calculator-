{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\AddExerciseScreen.js\",\n  _this = this;\nconsole.log(\"AddExerciseScreen.js loaded (start)\");\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getExercises, getMuscleGroups, initDatabase } from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AddExerciseScreen = function AddExerciseScreen(_ref) {\n  var _route$params2, _route$params4;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  console.log(\"AddExerciseScreen: component render start\");\n  var _ref2 = (route == null ? void 0 : route.params) || {},\n    muscleGroup = _ref2.muscleGroup,\n    muscleGroupId = _ref2.muscleGroupId,\n    previousExercises = _ref2.previousExercises,\n    returnToPreset = _ref2.returnToPreset;\n  var safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  var _useState = useState(safePreviousExercises),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedExercises = _useState2[0],\n    setSelectedExercises = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(\"All\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeGroup = _useState6[0],\n    setActiveGroup = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    muscleGroups = _useState8[0],\n    setMuscleGroups = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    exercises = _useState10[0],\n    setExercises = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loading = _useState12[0],\n    setLoading = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    error = _useState14[0],\n    setError = _useState14[1];\n  useFocusEffect(useCallback(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.newExerciseToAdd) {\n      console.log(\"AddExerciseScreen: Detected newExerciseToAdd param\");\n      var exerciseToAdd = route.params.newExerciseToAdd;\n      navigation.setParams({\n        newExerciseToAdd: undefined\n      });\n      navigation.navigate(\"ConfigureWorkout\", {\n        addExercise: exerciseToAdd\n      });\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.newExerciseToAdd]));\n  useEffect(function () {\n    console.log(\"AddExerciseScreen: useEffect (mount)\");\n    var _ref3 = route.params || {},\n      muscleGroup = _ref3.muscleGroup,\n      muscleGroupId = _ref3.muscleGroupId;\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route]);\n  useEffect(function () {\n    console.log(\"AddExerciseScreen: useEffect (muscleGroup)\");\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n  useEffect(function () {\n    var _route$params3;\n    if ((_route$params3 = route.params) != null && _route$params3.previousExercises) {\n      setSelectedExercises(Array.isArray(route.params.previousExercises) ? route.params.previousExercises : []);\n      console.log('AddExerciseScreen: loaded previousExercises', route.params.previousExercises);\n    } else {\n      setSelectedExercises([]);\n      console.log('AddExerciseScreen: no previousExercises, starting with empty selection');\n    }\n  }, [(_route$params4 = route.params) == null ? void 0 : _route$params4.previousExercises]);\n  var loadData = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var _route$params5;\n        console.log(\"AddExerciseScreen: loadData start\");\n        setLoading(true);\n        setError(null);\n        var dbInitialized = yield initDatabase();\n        console.log(\"AddExerciseScreen: initDatabase result\", dbInitialized);\n        if (!dbInitialized) {\n          throw new Error(\"Failed to initialize database\");\n        }\n        var groups;\n        if (Platform.OS === \"web\") {\n          var _require = require(\"../database/database\"),\n            STATIC_MUSCLE_GROUPS = _require.STATIC_MUSCLE_GROUPS;\n          groups = STATIC_MUSCLE_GROUPS;\n        } else {\n          groups = yield getMuscleGroups();\n        }\n        console.log(\"AddExerciseScreen: muscleGroups\", groups);\n        setMuscleGroups(groups);\n        var exercisesData;\n        if (Platform.OS === \"web\") {\n          var _require2 = require(\"../database/database\"),\n            STATIC_EXERCISES = _require2.STATIC_EXERCISES;\n          exercisesData = STATIC_EXERCISES;\n        } else {\n          exercisesData = yield getExercises();\n        }\n        console.log(\"AddExerciseScreen: exercisesData\", exercisesData);\n        if ((_route$params5 = route.params) != null && _route$params5.muscleGroupId) {\n          var _filteredExercises = exercisesData.filter(function (exercise) {\n            return exercise.muscle_group_id === route.params.muscleGroupId;\n          });\n          setExercises(_filteredExercises);\n          console.log(\"AddExerciseScreen: filteredExercises\", _filteredExercises);\n        } else {\n          setExercises(exercisesData);\n        }\n        setLoading(false);\n        console.log(\"AddExerciseScreen: loadData complete\");\n      } catch (err) {\n        setError(\"Error loading data: \" + err);\n        setLoading(false);\n        console.error(\"AddExerciseScreen: loadData error\", err);\n      }\n    });\n    return function loadData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (error) {\n    console.log(\"AddExerciseScreen: rendering error UI\", error);\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#171923'\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#fc8181',\n          fontSize: 18\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, _this);\n  }\n  if (loading) {\n    console.log(\"AddExerciseScreen: rendering loading UI\");\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#171923'\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          color: '#fff',\n          fontSize: 18\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this);\n  }\n  console.log(\"AddExerciseScreen: rendering main UI\");\n  var handleSelectExercise = function handleSelectExercise(exercise) {\n    setSelectedExercises(function (prev) {\n      if (prev.find(function (e) {\n        return e.id === exercise.id;\n      })) {\n        return prev.filter(function (e) {\n          return e.id !== exercise.id;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [exercise]);\n    });\n  };\n  var handleSaveExercises = function handleSaveExercises() {\n    console.log('AddExerciseScreen: handleSaveExercises sending selectedExercises:', selectedExercises);\n    if (route.params && route.params.returnToPreset) {\n      navigation.navigate({\n        name: \"Profile\",\n        params: {\n          selectedExercisesForPreset: _toConsumableArray(selectedExercises),\n          showPresetModal: true\n        },\n        merge: true\n      });\n    } else {\n      navigation.navigate({\n        name: \"ConfigureWorkout\",\n        params: {\n          selectedExercises: _toConsumableArray(selectedExercises)\n        },\n        merge: true\n      });\n    }\n  };\n  var safeExercises = Array.isArray(exercises) ? exercises : [];\n  var filteredExercises = function filteredExercises() {\n    var query = searchQuery.toLowerCase();\n    return safeExercises.filter(function (exercise) {\n      var matchesQuery = exercise.name.toLowerCase().includes(query);\n      var matchesGroup = activeGroup === \"All\" || exercise.muscle_group_id === activeGroup || exercise.muscleGroupId === activeGroup;\n      return matchesQuery && matchesGroup;\n    });\n  };\n  var renderMuscleGroupButton = function renderMuscleGroupButton(group) {\n    return _jsxDEV(TouchableOpacity, {\n      style: [styles.groupButton, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButton],\n      onPress: function onPress() {\n        console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n        setActiveGroup(group ? group.id : \"All\");\n      },\n      children: _jsxDEV(Text, {\n        style: [styles.groupButtonText, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButtonText],\n        children: group ? group.name : \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, _this)\n    }, group ? group.id : \"all\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, _this);\n  };\n  var renderExerciseItem = function renderExerciseItem(_ref5) {\n    var item = _ref5.item;\n    return _jsxDEV(TouchableOpacity, {\n      style: [styles.exerciseItem, selectedExercises.find(function (e) {\n        return e.id === item.id;\n      }) && styles.selectedExerciseItem],\n      onPress: function onPress() {\n        return handleSelectExercise(item);\n      },\n      children: [_jsxDEV(View, {\n        style: styles.exerciseContent,\n        children: [_jsxDEV(Text, {\n          style: [styles.exerciseText, selectedExercises.find(function (e) {\n            return e.id === item.id;\n          }) && styles.selectedExerciseText],\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, _this), item.description && _jsxDEV(Text, {\n          style: styles.exerciseDescription,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, _this), selectedExercises.find(function (e) {\n        return e.id === item.id;\n      }) && _jsxDEV(Ionicons, {\n        name: \"checkmark-circle\",\n        size: 24,\n        color: \"#6b46c1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, _this);\n  };\n  return _jsxDEV(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxDEV(View, {\n      style: [styles.container, {\n        paddingBottom: 80\n      }],\n      children: [_jsxDEV(View, {\n        style: styles.searchContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"search\",\n          size: 20,\n          color: \"#666\",\n          style: styles.searchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, _this), _jsxDEV(TextInput, {\n          style: styles.searchInput,\n          placeholder: \"Search exercises...\",\n          placeholderTextColor: \"#666\",\n          value: searchQuery,\n          onChangeText: setSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.groupButtonContainer,\n        children: [renderMuscleGroupButton(null), muscleGroups.map(function (group) {\n          return renderMuscleGroupButton(group);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, _this), _jsxDEV(FlatList, {\n        data: filteredExercises(),\n        renderItem: renderExerciseItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        style: styles.list,\n        contentContainerStyle: styles.listContent,\n        keyboardShouldPersistTaps: \"handled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, _this), selectedExercises.length > 0 && _jsxDEV(View, {\n      style: styles.fixedButtonContainer,\n      children: _jsxDEV(TouchableOpacity, {\n        style: [styles.saveButton, selectedExercises.length === 0 && styles.disabledButton],\n        onPress: handleSaveExercises,\n        disabled: selectedExercises.length === 0,\n        children: _jsxDEV(Text, {\n          style: styles.saveButtonText,\n          children: [\"Add \", selectedExercises.length, \" Exercise\", selectedExercises.length !== 1 ? \"s\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#171923\"\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  errorText: {\n    color: \"#fc8181\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 16\n  },\n  retryButton: {\n    backgroundColor: \"#6b46c1\",\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    margin: 16,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  searchIcon: {\n    marginRight: 8\n  },\n  searchInput: {\n    flex: 1,\n    height: 48,\n    color: \"#fff\",\n    fontSize: 16\n  },\n  groupButtonContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    marginVertical: 8,\n    gap: 6\n  },\n  groupButton: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 16,\n    backgroundColor: \"#272b3a\",\n    margin: 4,\n    minWidth: 70,\n    alignItems: \"center\",\n    minHeight: 32,\n    elevation: 1,\n    borderWidth: 1,\n    borderColor: \"#4a5568\"\n  },\n  activeGroupButton: {\n    backgroundColor: \"#6b46c1\",\n    borderColor: \"#a78bfa\"\n  },\n  groupButtonText: {\n    color: \"#e2e8f0\",\n    fontSize: 13,\n    fontWeight: \"500\",\n    letterSpacing: 0.2\n  },\n  activeGroupButtonText: {\n    color: \"#fff\",\n    fontWeight: \"700\"\n  },\n  list: {\n    flex: 1\n  },\n  listContent: {\n    padding: 16\n  },\n  exerciseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  exerciseContent: {\n    flex: 1,\n    marginRight: 16\n  },\n  selectedExerciseItem: {\n    backgroundColor: \"#2D3748\",\n    borderColor: \"#6b46c1\",\n    borderWidth: 2\n  },\n  exerciseText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  exerciseDescription: {\n    color: \"#A0AEC0\",\n    fontSize: 14,\n    marginTop: 4\n  },\n  selectedExerciseText: {\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#6b46c1\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: \"center\"\n  },\n  disabledButton: {\n    backgroundColor: \"#4A5568\"\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  fixedButtonContainer: {\n    position: Platform.OS === \"web\" ? \"fixed\" : \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(23,25,35,0.96)\",\n    paddingHorizontal: 16,\n    paddingBottom: Platform.OS === \"ios\" ? 32 : 16,\n    paddingTop: 8,\n    zIndex: 100,\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});\nexport default AddExerciseScreen;","map":{"version":3,"names":["console","log","React","View","Text","TouchableOpacity","FlatList","TextInput","StyleSheet","ScrollView","ActivityIndicator","Alert","Platform","Ionicons","getExercises","getMuscleGroups","initDatabase","useFocusEffect","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AddExerciseScreen","_ref","_route$params2","_route$params4","navigation","route","_ref2","params","muscleGroup","muscleGroupId","previousExercises","returnToPreset","safePreviousExercises","Array","isArray","_useState","_useState2","_slicedToArray","selectedExercises","setSelectedExercises","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","activeGroup","setActiveGroup","_useState7","_useState8","muscleGroups","setMuscleGroups","_useState9","_useState10","exercises","setExercises","_useState11","_useState12","loading","setLoading","_useState13","_useState14","error","setError","_route$params","newExerciseToAdd","exerciseToAdd","setParams","undefined","navigate","addExercise","_ref3","loadData","_route$params3","_ref4","_asyncToGenerator","_route$params5","dbInitialized","Error","groups","OS","_require","require","STATIC_MUSCLE_GROUPS","exercisesData","_require2","STATIC_EXERCISES","filteredExercises","filter","exercise","muscle_group_id","err","apply","arguments","style","flex","justifyContent","alignItems","backgroundColor","children","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_this","handleSelectExercise","prev","find","e","id","concat","_toConsumableArray","handleSaveExercises","name","selectedExercisesForPreset","showPresetModal","merge","safeExercises","query","toLowerCase","matchesQuery","includes","matchesGroup","renderMuscleGroupButton","group","styles","groupButton","activeGroupButton","onPress","groupButtonText","activeGroupButtonText","renderExerciseItem","_ref5","item","exerciseItem","selectedExerciseItem","exerciseContent","exerciseText","selectedExerciseText","description","exerciseDescription","size","container","paddingBottom","searchContainer","searchIcon","searchInput","placeholder","placeholderTextColor","value","onChangeText","groupButtonContainer","map","data","renderItem","keyExtractor","toString","list","contentContainerStyle","listContent","keyboardShouldPersistTaps","length","fixedButtonContainer","saveButton","disabledButton","disabled","saveButtonText","create","loadingContainer","errorContainer","padding","errorText","textAlign","marginBottom","retryButton","paddingHorizontal","paddingVertical","borderRadius","retryButtonText","fontWeight","flexDirection","margin","marginRight","height","flexWrap","marginVertical","gap","minWidth","minHeight","elevation","borderWidth","borderColor","letterSpacing","marginTop","position","left","right","bottom","paddingTop","zIndex","width"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/AddExerciseScreen.js"],"sourcesContent":["console.log(\"AddExerciseScreen.js loaded (start)\");\n\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  TextInput,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n  Alert,\n  Platform\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  getExercises,\n  getMuscleGroups,\n  initDatabase\n} from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useState, useEffect, useCallback } from \"react\";\n\nconst AddExerciseScreen = ({ navigation, route }) => {\n  console.log(\"AddExerciseScreen: component render start\");\n  const { muscleGroup, muscleGroupId, previousExercises, returnToPreset } = route?.params || {};\n  const safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  const [selectedExercises, setSelectedExercises] = useState(safePreviousExercises);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeGroup, setActiveGroup] = useState(\"All\");\n  const [muscleGroups, setMuscleGroups] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useFocusEffect(\n    useCallback(() => {\n      if (route.params?.newExerciseToAdd) {\n        console.log(\"AddExerciseScreen: Detected newExerciseToAdd param\");\n        const exerciseToAdd = route.params.newExerciseToAdd;\n        navigation.setParams({ newExerciseToAdd: undefined });\n        navigation.navigate(\"ConfigureWorkout\", { addExercise: exerciseToAdd });\n      }\n    }, [route.params?.newExerciseToAdd])\n  );\n\n  useEffect(() => {\n    console.log(\"AddExerciseScreen: useEffect (mount)\");\n    const { muscleGroup, muscleGroupId } = route.params || {};\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route]);\n\n  useEffect(() => {\n    console.log(\"AddExerciseScreen: useEffect (muscleGroup)\");\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n\n  useEffect(() => {\n    if (route.params?.previousExercises) {\n      setSelectedExercises(Array.isArray(route.params.previousExercises) ? route.params.previousExercises : []);\n      console.log('AddExerciseScreen: loaded previousExercises', route.params.previousExercises);\n    } else {\n      setSelectedExercises([]);\n      console.log('AddExerciseScreen: no previousExercises, starting with empty selection');\n    }\n  }, [route.params?.previousExercises]);\n\n  const loadData = async () => {\n    try {\n      console.log(\"AddExerciseScreen: loadData start\");\n      setLoading(true);\n      setError(null);\n      // Initialize database\n      const dbInitialized = await initDatabase();\n      console.log(\"AddExerciseScreen: initDatabase result\", dbInitialized);\n      if (!dbInitialized) {\n        throw new Error(\"Failed to initialize database\");\n      }\n      // Load muscle groups\n      let groups;\n      if (Platform.OS === \"web\") {\n        const { STATIC_MUSCLE_GROUPS } = require(\"../database/database\");\n        groups = STATIC_MUSCLE_GROUPS;\n      } else {\n        groups = await getMuscleGroups();\n      }\n      console.log(\"AddExerciseScreen: muscleGroups\", groups);\n      setMuscleGroups(groups);\n      // Load exercises\n      let exercisesData;\n      if (Platform.OS === \"web\") {\n        const { STATIC_EXERCISES } = require(\"../database/database\");\n        exercisesData = STATIC_EXERCISES;\n      } else {\n        exercisesData = await getExercises();\n      }\n      console.log(\"AddExerciseScreen: exercisesData\", exercisesData);\n      if (route.params?.muscleGroupId) {\n        const filteredExercises = exercisesData.filter(\n          (exercise) => exercise.muscle_group_id === route.params.muscleGroupId\n        );\n        setExercises(filteredExercises);\n        console.log(\"AddExerciseScreen: filteredExercises\", filteredExercises);\n      } else {\n        setExercises(exercisesData);\n      }\n      setLoading(false);\n      console.log(\"AddExerciseScreen: loadData complete\");\n    } catch (err) {\n      setError(\"Error loading data: \" + err);\n      setLoading(false);\n      console.error(\"AddExerciseScreen: loadData error\", err);\n    }\n  };\n\n  // Fallback UI for debugging\n  if (error) {\n    console.log(\"AddExerciseScreen: rendering error UI\", error);\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#171923' }}>\n        <Text style={{ color: '#fc8181', fontSize: 18 }}>Error: {error}</Text>\n      </View>\n    );\n  }\n  if (loading) {\n    console.log(\"AddExerciseScreen: rendering loading UI\");\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#171923' }}>\n        <Text style={{ color: '#fff', fontSize: 18 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  console.log(\"AddExerciseScreen: rendering main UI\");\n\n  const handleSelectExercise = (exercise) => {\n    setSelectedExercises((prev) => {\n      if (prev.find((e) => e.id === exercise.id)) {\n        return prev.filter((e) => e.id !== exercise.id);\n      }\n      return [...prev, exercise];\n    });\n  };\n\n  const handleSaveExercises = () => {\n    console.log('AddExerciseScreen: handleSaveExercises sending selectedExercises:', selectedExercises);\n    if (route.params && route.params.returnToPreset) {\n      navigation.navigate({\n        name: \"Profile\",\n        params: {\n          selectedExercisesForPreset: [...selectedExercises],\n          showPresetModal: true\n        },\n        merge: true\n      });\n    } else {\n      navigation.navigate({\n        name: \"ConfigureWorkout\",\n        params: { selectedExercises: [...selectedExercises] },\n        merge: true\n      });\n    }\n  };\n\n  // Defensive: exercises fallback\n  const safeExercises = Array.isArray(exercises) ? exercises : [];\n\n  const filteredExercises = () => {\n    const query = searchQuery.toLowerCase();\n    return safeExercises.filter((exercise) => {\n      const matchesQuery = exercise.name.toLowerCase().includes(query);\n      const matchesGroup =\n        activeGroup === \"All\" ||\n        exercise.muscle_group_id === activeGroup ||\n        exercise.muscleGroupId === activeGroup; // fallback for different naming\n      return matchesQuery && matchesGroup;\n    });\n  };\n\n  const renderMuscleGroupButton = (group) => (\n    <TouchableOpacity\n      key={group ? group.id : \"all\"}\n      style={[\n        styles.groupButton,\n        activeGroup === (group ? group.id : \"All\") && styles.activeGroupButton\n      ]}\n      onPress={() => {\n        console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n        setActiveGroup(group ? group.id : \"All\");\n      }}\n    >\n      <Text\n        style={[\n          styles.groupButtonText,\n          activeGroup === (group ? group.id : \"All\") &&\n            styles.activeGroupButtonText\n        ]}\n      >\n        {group ? group.name : \"All\"}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderExerciseItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.exerciseItem,\n        selectedExercises.find((e) => e.id === item.id) &&\n          styles.selectedExerciseItem\n      ]}\n      onPress={() => handleSelectExercise(item)}\n    >\n      <View style={styles.exerciseContent}>\n        <Text\n          style={[\n            styles.exerciseText,\n            selectedExercises.find((e) => e.id === item.id) &&\n              styles.selectedExerciseText\n          ]}\n        >\n          {item.name}\n        </Text>\n        {item.description && (\n          <Text style={styles.exerciseDescription}>{item.description}</Text>\n        )}\n      </View>\n      {selectedExercises.find((e) => e.id === item.id) && (\n        <Ionicons name=\"checkmark-circle\" size={24} color=\"#6b46c1\" />\n      )}\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={[styles.container, { paddingBottom: 80 }]}>\n        <View style={styles.searchContainer}>\n          <Ionicons\n            name=\"search\"\n            size={20}\n            color=\"#666\"\n            style={styles.searchIcon}\n          />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search exercises...\"\n            placeholderTextColor=\"#666\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n        </View>\n\n        <View style={styles.groupButtonContainer}>\n          {renderMuscleGroupButton(null)}\n          {muscleGroups.map((group) => renderMuscleGroupButton(group))}\n        </View>\n\n        <FlatList\n          data={filteredExercises()}\n          renderItem={renderExerciseItem}\n          keyExtractor={(item) => item.id.toString()}\n          style={styles.list}\n          contentContainerStyle={styles.listContent}\n          keyboardShouldPersistTaps=\"handled\"\n        />\n      </View>\n      {selectedExercises.length > 0 && (\n        <View style={styles.fixedButtonContainer}>\n          <TouchableOpacity\n            style={[\n              styles.saveButton,\n              selectedExercises.length === 0 && styles.disabledButton\n            ]}\n            onPress={handleSaveExercises}\n            disabled={selectedExercises.length === 0}\n          >\n            <Text style={styles.saveButtonText}>\n              Add {selectedExercises.length} Exercise\n              {selectedExercises.length !== 1 ? \"s\" : \"\"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#171923\"\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  errorText: {\n    color: \"#fc8181\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 16\n  },\n  retryButton: {\n    backgroundColor: \"#6b46c1\",\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    margin: 16,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  searchIcon: {\n    marginRight: 8\n  },\n  searchInput: {\n    flex: 1,\n    height: 48,\n    color: \"#fff\",\n    fontSize: 16\n  },\n  groupButtonContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    marginVertical: 8,\n    gap: 6 // for React Native Web, otherwise use margin\n  },\n  groupButton: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 16,\n    backgroundColor: \"#272b3a\",\n    margin: 4,\n    minWidth: 70,\n    alignItems: \"center\",\n    minHeight: 32,\n    elevation: 1,\n    borderWidth: 1,\n    borderColor: \"#4a5568\"\n  },\n  activeGroupButton: {\n    backgroundColor: \"#6b46c1\",\n    borderColor: \"#a78bfa\"\n  },\n  groupButtonText: {\n    color: \"#e2e8f0\",\n    fontSize: 13,\n    fontWeight: \"500\",\n    letterSpacing: 0.2\n  },\n  activeGroupButtonText: {\n    color: \"#fff\",\n    fontWeight: \"700\"\n  },\n  list: {\n    flex: 1\n  },\n  listContent: {\n    padding: 16\n  },\n  exerciseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  exerciseContent: {\n    flex: 1,\n    marginRight: 16\n  },\n  selectedExerciseItem: {\n    backgroundColor: \"#2D3748\",\n    borderColor: \"#6b46c1\",\n    borderWidth: 2\n  },\n  exerciseText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  exerciseDescription: {\n    color: \"#A0AEC0\",\n    fontSize: 14,\n    marginTop: 4\n  },\n  selectedExerciseText: {\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#6b46c1\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: \"center\"\n  },\n  disabledButton: {\n    backgroundColor: \"#4A5568\"\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  fixedButtonContainer: {\n    position: Platform.OS === \"web\" ? \"fixed\" : \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(23,25,35,0.96)\",\n    paddingHorizontal: 16,\n    paddingBottom: Platform.OS === \"ios\" ? 32 : 16,\n    paddingTop: 8,\n    zIndex: 100,\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});\nexport default AddExerciseScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}