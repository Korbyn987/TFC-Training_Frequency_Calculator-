{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/login/login.js\",\n  _this = this;\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/authSlice\";\nimport { styles } from \"../styles/loginStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar API_URL = Platform.select({\n  ios: 'http://localhost:5001/api',\n  android: 'http://10.0.2.2:5001/api',\n  default: 'http://localhost:5001/api'\n});\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var dispatch = useDispatch();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!username || !password) {\n        Alert.alert(\"Error\", \"Please fill in all fields\");\n        return;\n      }\n      setIsLoading(true);\n      try {\n        var response = yield fetch(`${API_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n        var data = yield response.json();\n        if (!response.ok) {\n          throw new Error(data.error || \"Login failed\");\n        }\n        dispatch(login({\n          username: data.username\n        }));\n        Alert.alert(\"Success\", \"Login successful!\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return navigation.replace(\"Tabs\");\n          }\n        }]);\n      } catch (error) {\n        Alert.alert(\"Error\", error.message || \"Failed to login\");\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.label,\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.input,\n        value: username,\n        onChangeText: setUsername,\n        placeholder: \"Enter username\",\n        autoCapitalize: \"none\",\n        editable: !isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.inputContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.label,\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.input,\n        value: password,\n        onChangeText: setPassword,\n        placeholder: \"Enter password\",\n        secureTextEntry: true,\n        editable: !isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), _jsxDEV(TouchableOpacity, {\n      style: [styles.button, isLoading && styles.buttonDisabled],\n      onPress: handleLogin,\n      disabled: isLoading,\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: isLoading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this), _jsxDEV(TouchableOpacity, {\n      style: styles.linkContainer,\n      onPress: function onPress() {\n        return navigation.navigate(\"CreateAccount\");\n      },\n      disabled: isLoading,\n      children: _jsxDEV(Text, {\n        style: styles.linkText,\n        children: \"Don't have an account? Create one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","Platform","useDispatch","login","styles","jsxDEV","_jsxDEV","API_URL","select","ios","android","default","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","dispatch","handleLogin","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error","text","onPress","replace","message","apply","arguments","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","inputContainer","label","input","value","onChangeText","placeholder","autoCapitalize","editable","secureTextEntry","button","buttonDisabled","disabled","buttonText","linkContainer","navigate","linkText"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/login/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/authSlice\";\nimport { styles } from \"../styles/loginStyles\";\n\n// Use different URLs based on platform\nconst API_URL = Platform.select({\n  ios: 'http://localhost:5001/api',  // iOS simulator\n  android: 'http://10.0.2.2:5001/api',  // Android emulator\n  default: 'http://localhost:5001/api',  // Web\n});\n\nconst LoginScreen = ({ navigation }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      Alert.alert(\"Error\", \"Please fill in all fields\");\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || \"Login failed\");\n      }\n\n      // Dispatch login action with user data\n      dispatch(login({ username: data.username }));\n      \n      // Show success message and navigate to home\n      Alert.alert(\n        \"Success\",\n        \"Login successful!\",\n        [\n          {\n            text: \"OK\",\n            onPress: () => navigation.replace(\"Tabs\")\n          }\n        ]\n      );\n    } catch (error) {\n      Alert.alert(\"Error\", error.message || \"Failed to login\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Login</Text>\n      <View style={styles.inputContainer}>\n        <Text style={styles.label}>Username:</Text>\n        <TextInput\n          style={styles.input}\n          value={username}\n          onChangeText={setUsername}\n          placeholder=\"Enter username\"\n          autoCapitalize=\"none\"\n          editable={!isLoading}\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <Text style={styles.label}>Password:</Text>\n        <TextInput\n          style={styles.input}\n          value={password}\n          onChangeText={setPassword}\n          placeholder=\"Enter password\"\n          secureTextEntry\n          editable={!isLoading}\n        />\n      </View>\n\n      <TouchableOpacity \n        style={[styles.button, isLoading && styles.buttonDisabled]} \n        onPress={handleLogin}\n        disabled={isLoading}\n      >\n        <Text style={styles.buttonText}>\n          {isLoading ? \"Logging in...\" : \"Login\"}\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={styles.linkContainer}\n        onPress={() => navigation.navigate(\"CreateAccount\")}\n        disabled={isLoading}\n      >\n        <Text style={styles.linkText}>Don't have an account? Create one</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}