{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport ButtonStyles from \"../styles/Button\";\nimport axios from \"axios\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _route$params2, _route$params4, _route$params6, _route$params8;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params || {},\n    username = _ref2.username;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMuscles = _useState4[0],\n    setSelectedMuscles = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isWorkoutModalVisible = _useState6[0],\n    setIsWorkoutModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    workoutTimer = _useState8[0],\n    setWorkoutTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isTimerRunning = _useState0[0],\n    setIsTimerRunning = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showWorkoutBanner = _useState10[0],\n    setShowWorkoutBanner = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    workoutHistory = _useState12[0],\n    setWorkoutHistory = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isRefreshing = _useState14[0],\n    setIsRefreshing = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    editMode = _useState16[0],\n    setEditMode = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedMuscle = _useState18[0],\n    setSelectedMuscle = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    editDays = _useState20[0],\n    setEditDays = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    streak = _useState22[0],\n    setStreak = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    achievements = _useState24[0],\n    setAchievements = _useState24[1];\n  var _useState25 = useState(null),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedGroup = _useState26[0],\n    setSelectedGroup = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    trainedMuscles = _useState28[0],\n    setTrainedMuscles = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    workoutInProgress = _useState30[0],\n    setWorkoutInProgress = _useState30[1];\n  var _useState31 = useState(null),\n    _useState32 = _slicedToArray(_useState31, 2),\n    savedWorkout = _useState32[0],\n    setSavedWorkout = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    isWorkoutOptionsVisible = _useState34[0],\n    setIsWorkoutOptionsVisible = _useState34[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n  var MUSCLE_GROUPS = [].concat(UPPER_BODY, LOWER_BODY);\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var muscleStatus = useSelector(function (state) {\n    var _state$workout;\n    return (_state$workout = state.workout) == null ? void 0 : _state$workout.muscleStatus;\n  }) || {};\n  var workouts = useSelector(function (state) {\n    var _state$workout2;\n    return ((_state$workout2 = state.workout) == null ? void 0 : _state$workout2.workouts) || [];\n  });\n  var formatTimeLeft = function formatTimeLeft(hours) {\n    if (hours <= 0) return 'now';\n    var days = Math.floor(hours / 24);\n    var remainingHours = Math.ceil(hours % 24);\n    if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''}${remainingHours > 0 ? ` and ${remainingHours} hour${remainingHours > 1 ? 's' : ''}` : ''}`;\n    }\n    return `${remainingHours} hour${remainingHours > 1 ? 's' : ''}`;\n  };\n  var getNextWorkoutTime = function getNextWorkoutTime() {\n    if (!workouts || workouts.length === 0) {\n      return {\n        message: 'No workout history found. Ready for your first workout!',\n        timeLeft: 0,\n        status: 'ready'\n      };\n    }\n    var latestWorkout = _toConsumableArray(workouts).sort(function (a, b) {\n      return new Date(b.date) - new Date(a.date);\n    })[0];\n    if (!latestWorkout || !latestWorkout.muscles || latestWorkout.muscles.length === 0) {\n      return {\n        message: 'No muscle data in latest workout',\n        timeLeft: 0,\n        status: 'ready'\n      };\n    }\n    var longestRecovery = {\n      timeLeft: 0,\n      muscle: '',\n      recoveryTime: 0\n    };\n    latestWorkout.muscles.forEach(function (muscleName) {\n      var muscleKey = muscleName.toLowerCase();\n      var muscleData = muscleStatus[muscleKey];\n      if (muscleData && muscleData.lastWorkout) {\n        var recoveryTime = muscleData.recoveryTime || 72;\n        var lastWorkout = new Date(muscleData.lastWorkout);\n        var now = new Date();\n        var hoursSinceWorkout = (now - lastWorkout) / (1000 * 60 * 60);\n        var timeLeft = Math.max(0, recoveryTime - hoursSinceWorkout);\n        if (timeLeft > longestRecovery.timeLeft) {\n          longestRecovery = {\n            timeLeft: timeLeft,\n            muscle: muscleName,\n            recoveryTime: recoveryTime,\n            lastWorkout: muscleData.lastWorkout\n          };\n        }\n      }\n    });\n    if (longestRecovery.timeLeft > 0) {\n      var timeLeftFormatted = formatTimeLeft(longestRecovery.timeLeft);\n      var recoveryTimeFormatted = formatTimeLeft(longestRecovery.recoveryTime);\n      return {\n        message: `Next workout in ~${timeLeftFormatted} (${longestRecovery.muscle} recovery: ${recoveryTimeFormatted})`,\n        timeLeft: longestRecovery.timeLeft,\n        muscle: longestRecovery.muscle,\n        status: longestRecovery.timeLeft < 24 ? 'soon' : 'wait',\n        lastWorkout: longestRecovery.lastWorkout\n      };\n    }\n    return {\n      message: 'Ready for your next workout!',\n      timeLeft: 0,\n      status: 'ready'\n    };\n  };\n  var nextWorkoutInfo = getNextWorkoutTime();\n  var loadStreak = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref4 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 9\n          }\n        }, isAuthenticated ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n          style: [ButtonStyles.headerButton, {\n            marginRight: 8\n          }],\n          onPress: function onPress() {\n            return navigation.navigate(\"Calculator\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: ButtonStyles.headerButtonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }\n        }, \"Calculator\")), React.createElement(TouchableOpacity, {\n          style: [ButtonStyles.headerButton, {\n            backgroundColor: \"#553c9a\"\n          }],\n          onPress: handleLogout,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: ButtonStyles.headerButtonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }\n        }, \"Logout\"))) : React.createElement(TouchableOpacity, {\n          style: ButtonStyles.headerButton,\n          onPress: function onPress() {\n            return navigation.navigate(\"Login\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: ButtonStyles.headerButtonText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }\n        }, \"Login\")));\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  useEffect(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.workout) {\n      setSavedWorkout(route.params.workout);\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.workout]);\n  useFocusEffect(React.useCallback(function () {\n    var loadSavedWorkout = function () {\n      var _ref8 = _asyncToGenerator(function* () {\n        var workoutStr = yield AsyncStorage.getItem('savedWorkout');\n        if (workoutStr) {\n          setSavedWorkout(JSON.parse(workoutStr));\n        } else {\n          setSavedWorkout(null);\n        }\n      });\n      return function loadSavedWorkout() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    loadSavedWorkout();\n  }, []));\n  useEffect(function () {\n    var checkWorkoutStatus = function () {\n      var _ref9 = _asyncToGenerator(function* () {\n        var inProgress = yield AsyncStorage.getItem('workoutInProgress');\n        if (inProgress === 'true') {\n          setWorkoutInProgress(true);\n          var musclesStr = yield AsyncStorage.getItem('selectedMuscles');\n          if (musclesStr) {\n            try {\n              var muscles = JSON.parse(musclesStr);\n              if (Array.isArray(muscles) && muscles.length > 0) {\n                setSelectedMuscles(muscles);\n              }\n            } catch (_unused) {}\n          }\n        } else {\n          setWorkoutInProgress(false);\n        }\n      });\n      return function checkWorkoutStatus() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    checkWorkoutStatus();\n  }, []);\n  useEffect(function () {\n    AsyncStorage.setItem('workoutInProgress', workoutInProgress ? 'true' : 'false');\n    if (workoutInProgress) {\n      AsyncStorage.setItem('selectedMuscles', JSON.stringify(selectedMuscles));\n    } else {\n      AsyncStorage.removeItem('selectedMuscles');\n    }\n  }, [workoutInProgress, selectedMuscles]);\n  useEffect(function () {\n    console.log('DEBUG: workoutInProgress', workoutInProgress);\n    console.log('DEBUG: selectedMuscles', selectedMuscles);\n    console.log('DEBUG: workoutHistory', workoutHistory);\n    console.log('DEBUG: isTimerRunning', isTimerRunning);\n    console.log('DEBUG: muscleData', muscleData);\n  }, [workoutInProgress, selectedMuscles, workoutHistory, isTimerRunning, muscleData]);\n  useEffect(function () {\n    if (workoutInProgress && selectedMuscles.length === 0 && workoutHistory.length > 0) {\n      var lastWorkout = workoutHistory[workoutHistory.length - 1];\n      if (lastWorkout && Array.isArray(lastWorkout.muscles) && lastWorkout.muscles.length > 0) {\n        setSelectedMuscles(lastWorkout.muscles);\n        console.log('DEBUG: Restored selectedMuscles from workoutHistory', lastWorkout.muscles);\n      }\n    }\n  }, [workoutInProgress, selectedMuscles, workoutHistory]);\n  useEffect(function () {\n    var _route$params3;\n    if ((_route$params3 = route.params) != null && _route$params3.workoutJustSaved) {\n      console.log('[HomeScreen] workoutJustSaved param detected');\n      var loadAndSetWorkout = function () {\n        var _ref0 = _asyncToGenerator(function* () {\n          try {\n            var workoutStr = yield AsyncStorage.getItem('savedWorkout');\n            if (workoutStr) {\n              var workout = JSON.parse(workoutStr);\n              setSavedWorkout(workout);\n              setWorkoutInProgress(true);\n              setIsTimerRunning(true);\n              setWorkoutTimer(0);\n              console.log('[HomeScreen] Workout loaded and started:', workout);\n            } else {\n              setSavedWorkout(null);\n              setWorkoutInProgress(false);\n              setIsTimerRunning(false);\n              setWorkoutTimer(0);\n              console.warn('[HomeScreen] No savedWorkout found in AsyncStorage');\n            }\n          } catch (e) {\n            setSavedWorkout(null);\n            setWorkoutInProgress(false);\n            setIsTimerRunning(false);\n            setWorkoutTimer(0);\n            console.error('[HomeScreen] Error loading savedWorkout from AsyncStorage', e);\n          }\n          navigation.setParams({\n            workoutJustSaved: undefined\n          });\n        });\n        return function loadAndSetWorkout() {\n          return _ref0.apply(this, arguments);\n        };\n      }();\n      loadAndSetWorkout();\n    }\n  }, [(_route$params4 = route.params) == null ? void 0 : _route$params4.workoutJustSaved]);\n  useEffect(function () {\n    var _route$params5;\n    if ((_route$params5 = route.params) != null && _route$params5.workoutConfig) {\n      setSavedWorkout(route.params.workoutConfig);\n      AsyncStorage.setItem('savedWorkout', JSON.stringify(route.params.workoutConfig));\n      setWorkoutInProgress(true);\n      setIsTimerRunning(true);\n      setWorkoutTimer(0);\n      console.log('[HomeScreen] Workout configured and started:', route.params.workoutConfig);\n      navigation.setParams({\n        workoutConfig: undefined\n      });\n    }\n  }, [(_route$params6 = route.params) == null ? void 0 : _route$params6.workoutConfig]);\n  useEffect(function () {\n    var _route$params7;\n    if ((_route$params7 = route.params) != null && _route$params7.workout) {\n      setSavedWorkout(route.params.workout);\n      AsyncStorage.setItem('savedWorkout', JSON.stringify(route.params.workout));\n      setWorkoutInProgress(true);\n      setIsTimerRunning(true);\n      setWorkoutTimer(0);\n      console.log('[HomeScreen] Workout loaded and started:', route.params.workout);\n      navigation.setParams({\n        workout: undefined\n      });\n    }\n  }, [(_route$params8 = route.params) == null ? void 0 : _route$params8.workout]);\n  var loadMuscleData = function () {\n    var _ref1 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref1.apply(this, arguments);\n    };\n  }();\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      if (prev.includes(muscle)) {\n        return prev.filter(function (m) {\n          return m !== muscle;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [muscle]);\n    });\n  };\n  var clearMuscle = function clearMuscle(muscle) {\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var clearAllMuscles = function clearAllMuscles() {\n    setSelectedMuscles([]);\n  };\n  var startWorkout = function () {\n    var _ref10 = _asyncToGenerator(function* () {\n      console.log(\"Start Workout button pressed\");\n      setWorkoutInProgress(true);\n      setIsTimerRunning(true);\n      setWorkoutTimer(0);\n      if (!savedWorkout) {\n        var newWorkout = {\n          name: 'Untitled Workout',\n          exercises: [],\n          startTime: new Date().toISOString(),\n          notes: ''\n        };\n        setSavedWorkout(newWorkout);\n        yield AsyncStorage.setItem('savedWorkout', JSON.stringify(newWorkout));\n        console.log('[HomeScreen] Created and started new workout:', newWorkout);\n      } else {\n        if (!savedWorkout.startTime) {\n          var updated = _objectSpread(_objectSpread({}, savedWorkout), {}, {\n            startTime: new Date().toISOString()\n          });\n          setSavedWorkout(updated);\n          yield AsyncStorage.setItem('savedWorkout', JSON.stringify(updated));\n          console.log('[HomeScreen] Updated workout with startTime:', updated);\n        }\n      }\n      yield AsyncStorage.setItem('workoutInProgress', 'true');\n      navigation.navigate('ConfigureWorkout', {\n        exercises: (savedWorkout == null ? void 0 : savedWorkout.exercises) || [],\n        workoutName: (savedWorkout == null ? void 0 : savedWorkout.name) || 'Untitled Workout'\n      });\n    });\n    return function startWorkout() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var endWorkout = function () {\n    var _ref11 = _asyncToGenerator(function* () {\n      var _workoutToSave, _workoutToSave2, _workoutToSave3, _workoutToSave4, _workoutToSave5;\n      console.log(\"Inside endWorkout function\");\n      console.log(\"End Workout button pressed\");\n      setIsTimerRunning(false);\n      setWorkoutInProgress(false);\n      setSelectedMuscles([]);\n      var workoutToSave = savedWorkout;\n      if (!workoutToSave) {\n        try {\n          var workoutStr = yield AsyncStorage.getItem('savedWorkout');\n          if (workoutStr) workoutToSave = JSON.parse(workoutStr);\n        } catch (e) {\n          console.error(\"Error reading savedWorkout from AsyncStorage\", e);\n        }\n      }\n      if (!workoutToSave) {\n        Alert.alert(\"No saved workout\", \"You must start and save a workout before ending it.\");\n        console.error(\"No savedWorkout found in state or AsyncStorage. Cannot end workout.\");\n        return;\n      }\n      var workoutName = ((_workoutToSave = workoutToSave) == null ? void 0 : _workoutToSave.name) || \"Untitled Workout\";\n      var exercises = (_workoutToSave2 = workoutToSave) == null ? void 0 : _workoutToSave2.exercises;\n      if (!Array.isArray(exercises) || exercises.length === 0) {\n        Alert.alert(\"No exercises found\", \"Cannot save a workout with no exercises.\");\n        return;\n      }\n      var startTime = ((_workoutToSave3 = workoutToSave) == null ? void 0 : _workoutToSave3.startTime) || ((_workoutToSave4 = workoutToSave) == null ? void 0 : _workoutToSave4.startedAt) || new Date(Date.now() - workoutTimer * 1000).toISOString();\n      var endTime = new Date().toISOString();\n      var duration = workoutTimer;\n      var notes = ((_workoutToSave5 = workoutToSave) == null ? void 0 : _workoutToSave5.notes) || \"\";\n      var userId = user == null ? void 0 : user.id;\n      if (!userId) {\n        try {\n          var userStr = yield AsyncStorage.getItem(\"user\");\n          if (userStr) userId = JSON.parse(userStr).id;\n        } catch (e) {\n          console.error(\"Error reading user from AsyncStorage\", e);\n        }\n      }\n      if (!userId) {\n        Alert.alert(\"User not found\", \"You must be logged in to save workouts.\");\n        console.error(\"No user_id found in Redux or AsyncStorage. Cannot save workout.\");\n        return;\n      }\n      console.log('Saving closed workout with payload:', {\n        user_id: userId,\n        workout_name: workoutName,\n        exercises: exercises,\n        start_time: startTime,\n        end_time: endTime,\n        duration: duration,\n        notes: notes\n      });\n      try {\n        var response = yield axios.post(\"http://localhost:5001/api/closed_workouts\", {\n          user_id: userId,\n          workout_name: workoutName,\n          exercises: exercises,\n          start_time: startTime,\n          end_time: endTime,\n          duration: duration,\n          notes: notes\n        });\n        console.log('Backend response:', response.data);\n        Alert.alert(\"Workout Saved\", \"Your workout has been saved to your history.\");\n        navigation.navigate('Profile', {\n          refreshHistory: true\n        });\n      } catch (err) {\n        var _err$response, _err$response2, _err$response2$data;\n        console.error(\"Failed to save closed workout:\", (err == null ? void 0 : (_err$response = err.response) == null ? void 0 : _err$response.data) || err.message);\n        Alert.alert(\"Error\", (err == null ? void 0 : (_err$response2 = err.response) == null ? void 0 : (_err$response2$data = _err$response2.data) == null ? void 0 : _err$response2$data.error) || \"Failed to save workout to server.\");\n      }\n      setIsTimerRunning(false);\n      setWorkoutInProgress(false);\n      setSelectedMuscles([]);\n      setWorkoutTimer(0);\n      yield AsyncStorage.removeItem('savedWorkout');\n    });\n    return function endWorkout() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n  var renderMuscleItem = function renderMuscleItem(_ref13) {\n    var muscle = _ref13.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return React.createElement(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 7\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        transform: [{\n          scale: scaleAnim\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.muscleStatus(status),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.muscleName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 13\n      }\n    }, muscle), React.createElement(View, {\n      style: styles.daysContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.daysText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 15\n      }\n    }, days, \" days\"), React.createElement(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        return handleEdit(muscle);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 15\n      }\n    }, React.createElement(Ionicons, {\n      name: \"pencil\",\n      size: 20,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }\n    }))))));\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    var getStatusColor = function getStatusColor(timeLeft) {\n      if (timeLeft <= 0) return '#10b981';\n      if (timeLeft < 24) return '#f59e0b';\n      return '#ef4444';\n    };\n    return React.createElement(View, {\n      style: styles.muscleSelectionBanner,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.bannerTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }\n    }, \"Selected Muscles:\"), React.createElement(View, {\n      style: styles.selectedMusclesContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }\n    }, selectedMuscles.map(function (muscle, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        style: styles.selectedMuscleChip,\n        onPress: function onPress() {\n          return clearMuscle(muscle);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.chipText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 15\n        }\n      }, muscle));\n    })), React.createElement(TouchableOpacity, {\n      style: styles.clearAllButton,\n      onPress: clearAllMuscles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.clearAllText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }\n    }, \"Clear All\")));\n  };\n  var handleLogout = function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        dispatch(logout());\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var handleConfigureWorkout = function handleConfigureWorkout() {\n    setIsWorkoutOptionsVisible(false);\n    navigation.navigate('ConfigureWorkout', {\n      exercises: [],\n      workoutName: ''\n    });\n  };\n  var handleStartWorkout = function handleStartWorkout() {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n  var handleCloseModal = function handleCloseModal() {\n    setIsWorkoutModalVisible(false);\n  };\n  var handleMuscleSelectModal = function handleMuscleSelectModal(muscles) {\n    setSelectedMuscles(muscles);\n  };\n  var handleMuscleRemove = function handleMuscleRemove(muscle) {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 5\n    }\n  }, renderMuscleSelectionBanner(), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 9\n    }\n  }, \"Welcome to TFC your Training Frequency Calculator\"), isAuthenticated && user && React.createElement(Text, {\n    style: styles.welcomeUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 11\n    }\n  }, \"Welcome, \", user.username, \"!\"), isAuthenticated && React.createElement(TouchableOpacity, {\n    style: styles.logoutButton,\n    onPress: handleLogout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.logoutText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 13\n    }\n  }, \"Logout\"))), React.createElement(View, {\n    style: styles.streakContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    name: \"trophy\",\n    size: 24,\n    color: \"#FFD700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.streakText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 9\n    }\n  }, streak, \" day streak!\")), React.createElement(View, {\n    style: [styles.nextWorkoutContainer, {\n      backgroundColor: nextWorkoutInfo.timeLeft > 0 ? nextWorkoutInfo.timeLeft < 24 ? '#f59e0b' : '#ef4444' : '#10b981'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.nextWorkoutText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 9\n    }\n  }, nextWorkoutInfo.muscle ? `${nextWorkoutInfo.message} (${nextWorkoutInfo.muscle})` : nextWorkoutInfo.message)), React.createElement(View, {\n    style: styles.statsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.statItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.statNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 11\n    }\n  }, Object.values(muscleData).filter(function (days) {\n    return days >= 48;\n  }).length), React.createElement(Text, {\n    style: styles.statLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 11\n    }\n  }, \"Ready Muscles\")), React.createElement(View, {\n    style: styles.statItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.statNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 11\n    }\n  }, Object.values(muscleData).filter(function (days) {\n    return days < 48;\n  }).length), React.createElement(Text, {\n    style: styles.statLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 11\n    }\n  }, \"Resting Muscles\"))), savedWorkout && React.createElement(View, {\n    style: styles.configuredWorkoutSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.configuredWorkoutTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 11\n    }\n  }, \"Current Workout\"), React.createElement(View, {\n    style: {\n      marginBottom: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 11\n    }\n  }, savedWorkout.exercises.map(function (ex, idx) {\n    return React.createElement(View, {\n      key: idx,\n      style: styles.configuredWorkoutExerciseCard,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.configuredWorkoutExerciseName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 17\n      }\n    }, ex.name), React.createElement(Text, {\n      style: styles.configuredWorkoutExerciseDesc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 17\n      }\n    }, ex.description), ex.sets && ex.sets.length > 0 && React.createElement(View, {\n      style: {\n        marginTop: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 19\n      }\n    }, ex.sets.map(function (set, setIdx) {\n      return React.createElement(View, {\n        key: setIdx,\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          marginBottom: 2\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: styles.configuredWorkoutSetText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 25\n        }\n      }, \"Set \", setIdx + 1, \": \", set.setType.charAt(0).toUpperCase() + set.setType.slice(1), \" | Reps: \", set.reps, \" \", set.weight ? `| Weight: ${set.weight}` : ''), set.notes ? React.createElement(Text, {\n        style: styles.configuredWorkoutSetNotes,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 38\n        }\n      }, \"Notes: \", set.notes) : null);\n    })));\n  })), React.createElement(TouchableOpacity, {\n    style: styles.configuredWorkoutEditButton,\n    onPress: function onPress() {\n      return navigation.navigate('ConfigureWorkout', {\n        exercises: (savedWorkout == null ? void 0 : savedWorkout.exercises) || [],\n        workoutName: (savedWorkout == null ? void 0 : savedWorkout.name) || ''\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.configuredWorkoutEditButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 13\n    }\n  }, \"Edit Workout\"))), React.createElement(View, {\n    style: [styles.quickActions, {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: 32,\n      marginBottom: 24\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.startWorkoutButton, {\n      opacity: 1\n    }],\n    onPress: startWorkout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"barbell-outline\",\n    size: 24,\n    color: \"#ffffff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 11\n    }\n  }, \"Start Workout\")), React.createElement(TouchableOpacity, {\n    style: [styles.startWorkoutButton, {\n      backgroundColor: '#23263a',\n      borderWidth: 2,\n      borderColor: '#4CAF50',\n      marginLeft: 16,\n      flexDirection: 'row',\n      alignItems: 'center',\n      opacity: 1\n    }],\n    onPress: function onPress() {\n      console.log(\"End Workout button was pressed. workoutInProgress:\", workoutInProgress);\n      if (workoutInProgress) {\n        endWorkout();\n      } else {\n        Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n      }\n    },\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"checkmark-circle\",\n    size: 24,\n    color: \"#4CAF50\",\n    style: {\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 11\n    }\n  }, \"End Workout\"))), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: 'purple',\n      padding: 12,\n      margin: 12,\n      borderRadius: 8\n    },\n    onPress: function onPress() {\n      return navigation.navigate('SelectRoutine');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 9\n    }\n  }, \"Go Directly to Select Routine\")), selectedGroup !== null && React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.secondaryButton, {\n      position: \"absolute\",\n      bottom: 12,\n      left: 16,\n      right: 16\n    }],\n    onPress: function onPress() {\n      return setSelectedGroup(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 11\n    }\n  }, \"Show All Muscles\")), React.createElement(Modal, {\n    visible: isWorkoutOptionsVisible,\n    transparent: true,\n    animationType: \"slide\",\n    onRequestClose: function onRequestClose() {\n      return setIsWorkoutOptionsVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(20,22,34,0.97)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#181a24',\n      padding: 36,\n      borderRadius: 22,\n      alignItems: 'center',\n      width: 320,\n      borderWidth: 2,\n      borderColor: '#4b2e83',\n      shadowColor: '#000',\n      shadowOpacity: 0.4,\n      shadowRadius: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 22,\n      fontWeight: 'bold',\n      color: '#f2f2f2',\n      marginBottom: 24,\n      letterSpacing: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 13\n    }\n  }, \"Workout Options\"), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#4b2e83',\n      borderRadius: 12,\n      paddingVertical: 14,\n      paddingHorizontal: 38,\n      marginBottom: 18,\n      width: 220,\n      alignItems: 'center',\n      shadowColor: '#4b2e83',\n      shadowOpacity: 0.4,\n      shadowRadius: 6\n    },\n    onPress: handleConfigureWorkout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff',\n      fontWeight: '600',\n      fontSize: 18,\n      letterSpacing: 0.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 15\n    }\n  }, \"Configure Workout\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: 'transparent',\n      borderWidth: 1.5,\n      borderColor: '#4b2e83',\n      borderRadius: 12,\n      paddingVertical: 12,\n      paddingHorizontal: 38,\n      marginBottom: 0,\n      width: 220,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      return setIsWorkoutOptionsVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#4b2e83',\n      fontWeight: '600',\n      fontSize: 18,\n      letterSpacing: 0.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))), React.createElement(Modal, {\n    visible: editMode,\n    transparent: true,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 13\n    }\n  }, \"Edit Days for \", selectedMuscle), React.createElement(TextInput, {\n    style: styles.input,\n    value: editDays,\n    onChangeText: setEditDays,\n    keyboardType: \"numeric\",\n    placeholder: \"Enter number of days\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.modalButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.modalButton, styles.cancelButton],\n    onPress: function onPress() {\n      return setEditMode(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), React.createElement(TouchableOpacity, {\n    style: [styles.modalButton, styles.saveButton],\n    onPress: saveEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 17\n    }\n  }, \"Save\")))))));\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","useFocusEffect","ButtonStyles","axios","HomeScreen","_ref","_route$params2","_route$params4","_route$params6","_route$params8","route","navigation","_ref2","params","username","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","selectedMuscles","setSelectedMuscles","_useState5","_useState6","isWorkoutModalVisible","setIsWorkoutModalVisible","_useState7","_useState8","workoutTimer","setWorkoutTimer","_useState9","_useState0","isTimerRunning","setIsTimerRunning","_useState1","_useState10","showWorkoutBanner","setShowWorkoutBanner","_useState11","_useState12","workoutHistory","setWorkoutHistory","_useState13","_useState14","isRefreshing","setIsRefreshing","_useState15","_useState16","editMode","setEditMode","_useState17","_useState18","selectedMuscle","setSelectedMuscle","_useState19","_useState20","editDays","setEditDays","_useState21","_useState22","streak","setStreak","_useState23","_useState24","achievements","setAchievements","_useState25","_useState26","selectedGroup","setSelectedGroup","_useState27","_useState28","trainedMuscles","setTrainedMuscles","_useState29","_useState30","workoutInProgress","setWorkoutInProgress","_useState31","_useState32","savedWorkout","setSavedWorkout","_useState33","_useState34","isWorkoutOptionsVisible","setIsWorkoutOptionsVisible","_useSelector","state","auth","isAuthenticated","user","dispatch","workoutTimerRef","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","concat","getStatus","days","muscleStatus","_state$workout","workout","workouts","_state$workout2","formatTimeLeft","hours","Math","floor","remainingHours","ceil","getNextWorkoutTime","length","message","timeLeft","status","latestWorkout","_toConsumableArray","sort","a","b","Date","date","muscles","longestRecovery","muscle","recoveryTime","forEach","muscleName","muscleKey","toLowerCase","lastWorkout","now","hoursSinceWorkout","max","timeLeftFormatted","recoveryTimeFormatted","nextWorkoutInfo","loadStreak","_ref3","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref4","value","setItem","toString","_x","updateStreak","_ref5","today","toISOString","split","prevStreak","newStreak","checkAchievements","loadAchievements","_ref6","savedAchievements","JSON","parse","_ref7","currentStreak","prevAchievements","newAchievements","includes","push","stringify","loadMuscleData","setOptions","headerRight","createElement","style","flexDirection","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","headerButton","marginRight","onPress","navigate","headerButtonText","backgroundColor","handleLogout","_route$params","useCallback","loadSavedWorkout","_ref8","workoutStr","checkWorkoutStatus","_ref9","inProgress","musclesStr","Array","isArray","_unused","removeItem","log","_route$params3","workoutJustSaved","loadAndSetWorkout","_ref0","warn","e","setParams","undefined","_route$params5","workoutConfig","_route$params7","_ref1","savedData","initialData","reduce","acc","alert","handleMuscleSelect","prev","filter","m","clearMuscle","clearAllMuscles","startWorkout","_ref10","newWorkout","name","exercises","startTime","notes","updated","_objectSpread","workoutName","endWorkout","_ref11","_workoutToSave","_workoutToSave2","_workoutToSave3","_workoutToSave4","_workoutToSave5","workoutToSave","startedAt","endTime","duration","userId","id","userStr","user_id","workout_name","start_time","end_time","response","post","data","refreshHistory","err","_err$response","_err$response2","_err$response2$data","handleEdit","saveEdit","_ref12","isNaN","newData","_defineProperty","cancelEdit","formatTime","seconds","minutes","remainingSeconds","padStart","setInterval","clearInterval","renderMuscleItem","_ref13","item","muscleButton","onLongPress","transform","scale","daysContainer","daysText","editButton","size","color","renderMuscleSelectionBanner","getStatusColor","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","key","selectedMuscleChip","chipText","clearAllButton","clearAllText","_ref14","clear","reset","routes","handleConfigureWorkout","handleStartWorkout","handleCloseModal","handleMuscleSelectModal","handleMuscleRemove","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","logoutButton","logoutText","streakContainer","streakText","nextWorkoutContainer","nextWorkoutText","statsContainer","statItem","statNumber","Object","values","statLabel","configuredWorkoutSection","configuredWorkoutTitle","marginBottom","ex","idx","configuredWorkoutExerciseCard","configuredWorkoutExerciseName","configuredWorkoutExerciseDesc","description","sets","marginTop","set","setIdx","justifyContent","configuredWorkoutSetText","setType","charAt","toUpperCase","slice","reps","weight","configuredWorkoutSetNotes","configuredWorkoutEditButton","configuredWorkoutEditButtonText","quickActions","startWorkoutButton","opacity","buttonText","borderWidth","borderColor","marginLeft","alignItems","disabled","padding","margin","borderRadius","fontWeight","button","secondaryButton","position","bottom","left","right","visible","transparent","animationType","onRequestClose","flex","width","shadowColor","shadowOpacity","shadowRadius","fontSize","letterSpacing","paddingVertical","paddingHorizontal","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport ButtonStyles from \"../styles/Button\";\nimport axios from \"axios\";\n\nconst HomeScreen = ({ route, navigation }) => {\n  const { username } = route.params || {};\n  const [muscleData, setMuscleData] = useState({});\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\n  const [workoutTimer, setWorkoutTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showWorkoutBanner, setShowWorkoutBanner] = useState(false);\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const [savedWorkout, setSavedWorkout] = useState(null);\n  const [isWorkoutOptionsVisible, setIsWorkoutOptionsVisible] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const workoutTimerRef = useRef(null);\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n\n  const MUSCLE_GROUPS = [...UPPER_BODY, ...LOWER_BODY];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Get muscle status from Redux store\n  const muscleStatus = useSelector((state) => state.workout?.muscleStatus) || {};\n  const workouts = useSelector((state) => state.workout?.workouts || []);\n\n  // Function to format time in a user-friendly way\n  const formatTimeLeft = (hours) => {\n    if (hours <= 0) return 'now';\n    \n    const days = Math.floor(hours / 24);\n    const remainingHours = Math.ceil(hours % 24);\n    \n    if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''}${remainingHours > 0 ? ` and ${remainingHours} hour${remainingHours > 1 ? 's' : ''}` : ''}`;\n    }\n    return `${remainingHours} hour${remainingHours > 1 ? 's' : ''}`;\n  };\n\n  // Function to get next recommended workout time\n  const getNextWorkoutTime = () => {\n    if (!workouts || workouts.length === 0) {\n      return { \n        message: 'No workout history found. Ready for your first workout!', \n        timeLeft: 0,\n        status: 'ready'\n      };\n    }\n\n    // Get the most recent workout\n    const latestWorkout = [...workouts].sort((a, b) => \n      new Date(b.date) - new Date(a.date)\n    )[0];\n\n    if (!latestWorkout || !latestWorkout.muscles || latestWorkout.muscles.length === 0) {\n      return { \n        message: 'No muscle data in latest workout', \n        timeLeft: 0,\n        status: 'ready'\n      };\n    }\n\n    // Find the muscle group with the longest recovery time\n    let longestRecovery = { timeLeft: 0, muscle: '', recoveryTime: 0 };\n    \n    latestWorkout.muscles.forEach(muscleName => {\n      const muscleKey = muscleName.toLowerCase();\n      const muscleData = muscleStatus[muscleKey];\n      \n      if (muscleData && muscleData.lastWorkout) {\n        const recoveryTime = muscleData.recoveryTime || 72; // Default to 72 hours if not set\n        const lastWorkout = new Date(muscleData.lastWorkout);\n        const now = new Date();\n        const hoursSinceWorkout = (now - lastWorkout) / (1000 * 60 * 60);\n        const timeLeft = Math.max(0, recoveryTime - hoursSinceWorkout);\n        \n        if (timeLeft > longestRecovery.timeLeft) {\n          longestRecovery = {\n            timeLeft,\n            muscle: muscleName,\n            recoveryTime,\n            lastWorkout: muscleData.lastWorkout\n          };\n        }\n      }\n    });\n\n    if (longestRecovery.timeLeft > 0) {\n      const timeLeftFormatted = formatTimeLeft(longestRecovery.timeLeft);\n      const recoveryTimeFormatted = formatTimeLeft(longestRecovery.recoveryTime);\n      \n      return {\n        message: `Next workout in ~${timeLeftFormatted} (${longestRecovery.muscle} recovery: ${recoveryTimeFormatted})`,\n        timeLeft: longestRecovery.timeLeft,\n        muscle: longestRecovery.muscle,\n        status: longestRecovery.timeLeft < 24 ? 'soon' : 'wait',\n        lastWorkout: longestRecovery.lastWorkout\n      };\n    }\n    \n    return { \n      message: 'Ready for your next workout!', \n      timeLeft: 0,\n      status: 'ready'\n    };\n  };\n\n  // Get next workout information\n  const nextWorkoutInfo = getNextWorkoutTime();\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: \"row\" }}>\n          {isAuthenticated ? (\n            <>\n              <TouchableOpacity\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\n                onPress={() => navigation.navigate(\"Calculator\")}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  ButtonStyles.headerButton,\n                  { backgroundColor: \"#553c9a\" },\n                ]}\n                onPress={handleLogout}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <TouchableOpacity\n              style={ButtonStyles.headerButton}\n              onPress={() => navigation.navigate(\"Login\")}\n            >\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ),\n    });\n  }, [navigation, isAuthenticated]);\n\n  useEffect(() => {\n    if (route.params?.workout) {\n      setSavedWorkout(route.params.workout);\n    }\n  }, [route.params?.workout]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const loadSavedWorkout = async () => {\n        const workoutStr = await AsyncStorage.getItem('savedWorkout');\n        if (workoutStr) {\n          setSavedWorkout(JSON.parse(workoutStr));\n        } else {\n          setSavedWorkout(null);\n        }\n      };\n      loadSavedWorkout();\n    }, [])\n  );\n\n  useEffect(() => {\n    const checkWorkoutStatus = async () => {\n      const inProgress = await AsyncStorage.getItem('workoutInProgress');\n      if (inProgress === 'true') {\n        setWorkoutInProgress(true);\n        // Defensive: restore selected muscles if possible\n        const musclesStr = await AsyncStorage.getItem('selectedMuscles');\n        if (musclesStr) {\n          try {\n            const muscles = JSON.parse(musclesStr);\n            if (Array.isArray(muscles) && muscles.length > 0) {\n              setSelectedMuscles(muscles);\n            }\n          } catch {}\n        }\n      } else {\n        setWorkoutInProgress(false);\n      }\n    };\n    checkWorkoutStatus();\n  }, []);\n\n  useEffect(() => {\n    AsyncStorage.setItem('workoutInProgress', workoutInProgress ? 'true' : 'false');\n    if (workoutInProgress) {\n      AsyncStorage.setItem('selectedMuscles', JSON.stringify(selectedMuscles));\n    } else {\n      AsyncStorage.removeItem('selectedMuscles');\n    }\n  }, [workoutInProgress, selectedMuscles]);\n\n  useEffect(() => {\n    console.log('DEBUG: workoutInProgress', workoutInProgress);\n    console.log('DEBUG: selectedMuscles', selectedMuscles);\n    console.log('DEBUG: workoutHistory', workoutHistory);\n    console.log('DEBUG: isTimerRunning', isTimerRunning);\n    console.log('DEBUG: muscleData', muscleData);\n  }, [workoutInProgress, selectedMuscles, workoutHistory, isTimerRunning, muscleData]);\n\n  useEffect(() => {\n    if (workoutInProgress && selectedMuscles.length === 0 && workoutHistory.length > 0) {\n      const lastWorkout = workoutHistory[workoutHistory.length - 1];\n      if (lastWorkout && Array.isArray(lastWorkout.muscles) && lastWorkout.muscles.length > 0) {\n        setSelectedMuscles(lastWorkout.muscles);\n        console.log('DEBUG: Restored selectedMuscles from workoutHistory', lastWorkout.muscles);\n      }\n    }\n  }, [workoutInProgress, selectedMuscles, workoutHistory]);\n\n  useEffect(() => {\n    if (route.params?.workoutJustSaved) {\n      console.log('[HomeScreen] workoutJustSaved param detected');\n      // Load the latest saved workout from AsyncStorage\n      const loadAndSetWorkout = async () => {\n        try {\n          const workoutStr = await AsyncStorage.getItem('savedWorkout');\n          if (workoutStr) {\n            const workout = JSON.parse(workoutStr);\n            setSavedWorkout(workout);\n            setWorkoutInProgress(true);\n            setIsTimerRunning(true);\n            setWorkoutTimer(0);\n            console.log('[HomeScreen] Workout loaded and started:', workout);\n          } else {\n            setSavedWorkout(null);\n            setWorkoutInProgress(false);\n            setIsTimerRunning(false);\n            setWorkoutTimer(0);\n            console.warn('[HomeScreen] No savedWorkout found in AsyncStorage');\n          }\n        } catch (e) {\n          setSavedWorkout(null);\n          setWorkoutInProgress(false);\n          setIsTimerRunning(false);\n          setWorkoutTimer(0);\n          console.error('[HomeScreen] Error loading savedWorkout from AsyncStorage', e);\n        }\n        // Clean up param so it doesn't retrigger\n        navigation.setParams({ workoutJustSaved: undefined });\n      };\n      loadAndSetWorkout();\n    }\n  }, [route.params?.workoutJustSaved]);\n\n  useEffect(() => {\n    if (route.params?.workoutConfig) {\n      setSavedWorkout(route.params.workoutConfig);\n      AsyncStorage.setItem('savedWorkout', JSON.stringify(route.params.workoutConfig));\n      setWorkoutInProgress(true);\n      setIsTimerRunning(true);\n      setWorkoutTimer(0);\n      console.log('[HomeScreen] Workout configured and started:', route.params.workoutConfig);\n      navigation.setParams({ workoutConfig: undefined });\n    }\n  }, [route.params?.workoutConfig]);\n\n  useEffect(() => {\n    if (route.params?.workout) {\n      setSavedWorkout(route.params.workout);\n      AsyncStorage.setItem('savedWorkout', JSON.stringify(route.params.workout));\n      setWorkoutInProgress(true);\n      setIsTimerRunning(true);\n      setWorkoutTimer(0);\n      console.log('[HomeScreen] Workout loaded and started:', route.params.workout);\n      navigation.setParams({ workout: undefined });\n    }\n  }, [route.params?.workout]);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscles((prev) => {\n      // If the muscle is already selected, remove it\n      if (prev.includes(muscle)) {\n        return prev.filter((m) => m !== muscle);\n      }\n      // Otherwise, add it to the selection\n      return [...prev, muscle];\n    });\n  };\n\n  const clearMuscle = (muscle) => {\n    setSelectedMuscles((prev) => prev.filter((m) => m !== muscle));\n  };\n\n  const clearAllMuscles = () => {\n    setSelectedMuscles([]);\n  };\n\n  // Start Workout handler\n  const startWorkout = async () => {\n    console.log(\"Start Workout button pressed\");\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n    // Defensive: if no savedWorkout, create a basic one\n    if (!savedWorkout) {\n      const newWorkout = {\n        name: 'Untitled Workout',\n        exercises: [],\n        startTime: new Date().toISOString(),\n        notes: '',\n      };\n      setSavedWorkout(newWorkout);\n      await AsyncStorage.setItem('savedWorkout', JSON.stringify(newWorkout));\n      console.log('[HomeScreen] Created and started new workout:', newWorkout);\n    } else {\n      // Update start time if not set\n      if (!savedWorkout.startTime) {\n        const updated = { ...savedWorkout, startTime: new Date().toISOString() };\n        setSavedWorkout(updated);\n        await AsyncStorage.setItem('savedWorkout', JSON.stringify(updated));\n        console.log('[HomeScreen] Updated workout with startTime:', updated);\n      }\n    }\n    await AsyncStorage.setItem('workoutInProgress', 'true');\n    // Redirect user to ConfigureWorkoutScreen\n    navigation.navigate('ConfigureWorkout', {\n      exercises: savedWorkout?.exercises || [],\n      workoutName: savedWorkout?.name || 'Untitled Workout',\n    });\n  };\n\n  const endWorkout = async () => {\n    console.log(\"Inside endWorkout function\");\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    setSelectedMuscles([]);\n    let workoutToSave = savedWorkout;\n    // Defensive: If no savedWorkout in state, try to read from AsyncStorage\n    if (!workoutToSave) {\n      try {\n        const workoutStr = await AsyncStorage.getItem('savedWorkout');\n        if (workoutStr) workoutToSave = JSON.parse(workoutStr);\n      } catch (e) {\n        console.error(\"Error reading savedWorkout from AsyncStorage\", e);\n      }\n    }\n    if (!workoutToSave) {\n      Alert.alert(\"No saved workout\", \"You must start and save a workout before ending it.\");\n      console.error(\"No savedWorkout found in state or AsyncStorage. Cannot end workout.\");\n      return;\n    }\n    // --- Get workout details for closed_workouts ---\n    const workoutName = workoutToSave?.name || \"Untitled Workout\";\n    let exercises = workoutToSave?.exercises;\n    if (!Array.isArray(exercises) || exercises.length === 0) {\n      Alert.alert(\"No exercises found\", \"Cannot save a workout with no exercises.\");\n      return;\n    }\n    const startTime = workoutToSave?.startTime || (workoutToSave?.startedAt || new Date(Date.now() - workoutTimer * 1000).toISOString());\n    const endTime = new Date().toISOString();\n    const duration = workoutTimer;\n    const notes = workoutToSave?.notes || \"\";\n    // Defensive: Get user_id from Redux or AsyncStorage\n    let userId = user?.id;\n    if (!userId) {\n      try {\n        const userStr = await AsyncStorage.getItem(\"user\");\n        if (userStr) userId = JSON.parse(userStr).id;\n      } catch (e) {\n        console.error(\"Error reading user from AsyncStorage\", e);\n      }\n    }\n    if (!userId) {\n      Alert.alert(\"User not found\", \"You must be logged in to save workouts.\");\n      console.error(\"No user_id found in Redux or AsyncStorage. Cannot save workout.\");\n      return;\n    }\n    // Log outgoing payload for debugging\n    console.log('Saving closed workout with payload:', {\n      user_id: userId,\n      workout_name: workoutName,\n      exercises,\n      start_time: startTime,\n      end_time: endTime,\n      duration,\n      notes,\n    });\n    // Save closed workout to backend\n    try {\n      const response = await axios.post(\"http://localhost:5001/api/closed_workouts\", {\n        user_id: userId,\n        workout_name: workoutName,\n        exercises,\n        start_time: startTime,\n        end_time: endTime,\n        duration,\n        notes,\n      });\n      console.log('Backend response:', response.data);\n      Alert.alert(\"Workout Saved\", \"Your workout has been saved to your history.\");\n      // After saving, navigate to Profile and trigger a refresh\n      navigation.navigate('Profile', { refreshHistory: true });\n    } catch (err) {\n      console.error(\"Failed to save closed workout:\", err?.response?.data || err.message);\n      Alert.alert(\"Error\", err?.response?.data?.error || \"Failed to save workout to server.\");\n    }\n    // --- Reset workout state ---\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    setSelectedMuscles([]);\n    setWorkoutTimer(0);\n    await AsyncStorage.removeItem('savedWorkout');\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n\n  useEffect(() => {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(() => {\n        setWorkoutTimer((prev) => prev + 1);\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n\n    return () => {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMuscleSelect(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    const getStatusColor = (timeLeft) => {\n      if (timeLeft <= 0) return '#10b981'; // Green - Ready to train\n      if (timeLeft < 24) return '#f59e0b'; // Yellow - Almost ready\n      return '#ef4444'; // Red - Needs more recovery\n    };\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => clearMuscle(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <TouchableOpacity\n          style={styles.clearAllButton}\n          onPress={clearAllMuscles}\n        >\n          <Text style={styles.clearAllText}>Clear All</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const handleLogout = async () => {\n    try {\n      await AsyncStorage.clear();\n      dispatch(logout());\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Login' }],\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const handleConfigureWorkout = () => {\n    setIsWorkoutOptionsVisible(false);\n    navigation.navigate('ConfigureWorkout', {\n      exercises: [], // Start with empty or last used\n      workoutName: '',\n    });\n  };\n\n  const handleStartWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsWorkoutModalVisible(false);\n  };\n\n  const handleMuscleSelectModal = (muscles) => {\n    setSelectedMuscles(muscles);\n  };\n\n  const handleMuscleRemove = (muscle) => {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(prev => prev.filter(m => m !== muscle));\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {renderMuscleSelectionBanner()}\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n        {isAuthenticated && (\n          <TouchableOpacity\n            style={styles.logoutButton}\n            onPress={handleLogout}\n          >\n            <Text style={styles.logoutText}>Logout</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {/* Streak Counter */}\n      <View style={styles.streakContainer}>\n        <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n        <Text style={styles.streakText}>{streak} day streak!</Text>\n      </View>\n\n      {/* Next Workout Indicator */}\n      <View style={[\n        styles.nextWorkoutContainer, \n        { \n          backgroundColor: nextWorkoutInfo.timeLeft > 0 ? \n            (nextWorkoutInfo.timeLeft < 24 ? '#f59e0b' : '#ef4444') : \n            '#10b981' \n        }\n      ]}>\n        <Text style={styles.nextWorkoutText}>\n          {nextWorkoutInfo.muscle ? \n            `${nextWorkoutInfo.message} (${nextWorkoutInfo.muscle})` : \n            nextWorkoutInfo.message}\n        </Text>\n      </View>\n\n      {/* Quick Stats */}\n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days >= 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Ready Muscles</Text>\n        </View>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days < 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Resting Muscles</Text>\n        </View>\n      </View>\n\n      {/* Current Workout Section */}\n      {savedWorkout && (\n        <View style={styles.configuredWorkoutSection}>\n          <Text style={styles.configuredWorkoutTitle}>Current Workout</Text>\n          <View style={{marginBottom: 8}}>\n            {savedWorkout.exercises.map((ex, idx) => (\n              <View key={idx} style={styles.configuredWorkoutExerciseCard}>\n                <Text style={styles.configuredWorkoutExerciseName}>{ex.name}</Text>\n                <Text style={styles.configuredWorkoutExerciseDesc}>{ex.description}</Text>\n                {ex.sets && ex.sets.length > 0 && (\n                  <View style={{marginTop: 4}}>\n                    {ex.sets.map((set, setIdx) => (\n                      <View key={setIdx} style={{flexDirection: 'row', justifyContent: 'space-between', marginBottom: 2}}>\n                        <Text style={styles.configuredWorkoutSetText}>\n                          Set {setIdx+1}: {set.setType.charAt(0).toUpperCase() + set.setType.slice(1)} | Reps: {set.reps} {set.weight ? `| Weight: ${set.weight}` : ''}\n                        </Text>\n                        {set.notes ? <Text style={styles.configuredWorkoutSetNotes}>Notes: {set.notes}</Text> : null}\n                      </View>\n                    ))}\n                  </View>\n                )}\n              </View>\n            ))}\n          </View>\n          <TouchableOpacity\n            style={styles.configuredWorkoutEditButton}\n            onPress={() => navigation.navigate('ConfigureWorkout', {\n              exercises: savedWorkout?.exercises || [],\n              workoutName: savedWorkout?.name || '',\n            })}\n          >\n            <Text style={styles.configuredWorkoutEditButtonText}>Edit Workout</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      {/* Quick Actions */}\n      <View style={[styles.quickActions, { flexDirection: 'row', justifyContent: 'center', marginTop: 32, marginBottom: 24 }]}> \n        <TouchableOpacity\n          style={[\n            styles.startWorkoutButton,\n            { opacity: 1 },\n          ]}\n          onPress={startWorkout}\n        >\n          <Ionicons name=\"barbell-outline\" size={24} color=\"#ffffff\" />\n          <Text style={styles.buttonText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.startWorkoutButton,\n            {\n              backgroundColor: '#23263a', // App theme: dark card\n              borderWidth: 2,\n              borderColor: '#4CAF50', // Green border for accent\n              marginLeft: 16,\n              flexDirection: 'row',\n              alignItems: 'center',\n              opacity: 1, // Always enabled\n            },\n          ]}\n          onPress={() => {\n            console.log(\"End Workout button was pressed. workoutInProgress:\", workoutInProgress);\n            if (workoutInProgress) {\n              endWorkout();\n            } else {\n              Alert.alert(\"No workout in progress\", \"Start a workout before ending it.\");\n            }\n          }}\n          disabled={false} // Always enabled\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" style={{ marginRight: 10 }} />\n          <Text style={styles.buttonText}>End Workout</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* DEBUG: Direct navigation to Select Routine */}\n      <TouchableOpacity\n        style={{ backgroundColor: 'purple', padding: 12, margin: 12, borderRadius: 8 }}\n        onPress={() => navigation.navigate('SelectRoutine')}\n      >\n        <Text style={{ color: 'white', fontWeight: 'bold' }}>Go Directly to Select Routine</Text>\n      </TouchableOpacity>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      <Modal\n        visible={isWorkoutOptionsVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setIsWorkoutOptionsVisible(false)}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(20,22,34,0.97)' }}>\n          <View style={{ backgroundColor: '#181a24', padding: 36, borderRadius: 22, alignItems: 'center', width: 320, borderWidth: 2, borderColor: '#4b2e83', shadowColor: '#000', shadowOpacity: 0.4, shadowRadius: 18 }}>\n            <Text style={{ fontSize: 22, fontWeight: 'bold', color: '#f2f2f2', marginBottom: 24, letterSpacing: 1 }}>Workout Options</Text>\n            <TouchableOpacity style={{ backgroundColor: '#4b2e83', borderRadius: 12, paddingVertical: 14, paddingHorizontal: 38, marginBottom: 18, width: 220, alignItems: 'center', shadowColor: '#4b2e83', shadowOpacity: 0.4, shadowRadius: 6 }} onPress={handleConfigureWorkout}>\n              <Text style={{ color: '#fff', fontWeight: '600', fontSize: 18, letterSpacing: 0.5 }}>Configure Workout</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={{ backgroundColor: 'transparent', borderWidth: 1.5, borderColor: '#4b2e83', borderRadius: 12, paddingVertical: 12, paddingHorizontal: 38, marginBottom: 0, width: 220, alignItems: 'center' }} onPress={() => setIsWorkoutOptionsVisible(false)}>\n              <Text style={{ color: '#4b2e83', fontWeight: '600', fontSize: 18, letterSpacing: 0.5 }}>Cancel</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}