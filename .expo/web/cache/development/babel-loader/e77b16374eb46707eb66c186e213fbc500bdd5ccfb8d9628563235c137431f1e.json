{"ast":null,"code":"import { useCallback, useEffect, useMemo } from 'react';\nimport { createAnimatedPropAdapter, Easing, interpolateColor, processColor, runOnJS, useAnimatedProps, useDerivedValue, useSharedValue, withDelay, withTiming } from 'react-native-reanimated';\nimport { withPause } from 'react-native-redash';\nimport useCircleValues from \"./useCircleValues\";\nvar _worklet_3386002850621_init_data = {\n  code: \"function anonymous(v) {\\n  return Math.round(v);\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"v\\\",\\\"Math\\\",\\\"round\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAiBwB,SAACA,SAAIA,CAAAC,CAAA;EAGvB,OAAOC,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC;AACtB\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_9662471165211_init_data = {\n  code: \"function anonymous(isFinished) {\\n  const {\\n    runOnJS,\\n    onAnimationComplete\\n  } = this._closure;\\n  if (isFinished) {\\n    var _runOnJS;\\n    (_runOnJS = runOnJS(onAnimationComplete)) === null || _runOnJS === void 0 ? void 0 : _runOnJS();\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"isFinished\\\",\\\"runOnJS\\\",\\\"onAnimationComplete\\\",\\\"_closure\\\",\\\"_runOnJS\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAkDO,SAAAA,UAAAC,UAAc;EAAA;IAAAC,OAAA;IAAAC;EAAA,SAAAC,QAAA;EACf,IAAIH,UAAU,EAAE;IACd,IAAII,QAAQ;IAEZ,CAACA,QAAQ,GAAGH,OAAO,CAACC,mBAAmB,CAAC,MAAM,IAAI,IAAIE,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAAC,CAAC;EACjG;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_3404431613582_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    initialValue,\\n    maxValue,\\n    clockwise,\\n    animatedValue,\\n    circleCircumference,\\n    colors,\\n    values,\\n    interpolateColor\\n  } = this._closure;\\n  let biggestValue = Math.max(initialValue, maxValue);\\n  biggestValue = biggestValue <= 0 ? 1 : biggestValue;\\n  const maxPercentage = clockwise ? 100 * animatedValue.value / biggestValue : 100 * -animatedValue.value / biggestValue;\\n  const config = {\\n    strokeDashoffset: circleCircumference - circleCircumference * maxPercentage / 100\\n  };\\n  const strokeColor = colors && values ? interpolateColor(animatedValue.value, values, colors) : undefined;\\n  if (strokeColor) {\\n    config.stroke = strokeColor;\\n  }\\n  return config;\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"initialValue\\\",\\\"maxValue\\\",\\\"clockwise\\\",\\\"animatedValue\\\",\\\"circleCircumference\\\",\\\"colors\\\",\\\"values\\\",\\\"interpolateColor\\\",\\\"_closure\\\",\\\"biggestValue\\\",\\\"Math\\\",\\\"max\\\",\\\"maxPercentage\\\",\\\"value\\\",\\\"config\\\",\\\"strokeDashoffset\\\",\\\"strokeColor\\\",\\\"undefined\\\",\\\"stroke\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAqF+C,SAAAA,SAAMA,CAAA;EAAA;IAAAC,YAAA;IAAAC,QAAA;IAAAC,SAAA;IAAAC,aAAA;IAAAC,mBAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC;EAAA,SAAAC,QAAA;EACjD,IAAIC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAACX,YAAY,EAAEC,QAAQ,CAAC;EACnDQ,YAAY,GAAGA,YAAY,IAAI,CAAC,GAAG,CAAC,GAAGA,YAAY;EACnD,MAAMG,aAAa,GAAGV,SAAS,GAAG,GAAG,GAAGC,aAAa,CAACU,KAAK,GAAGJ,YAAY,GAAG,GAAG,GAAG,CAACN,aAAa,CAACU,KAAK,GAAGJ,YAAY;EACtH,MAAMK,MAAM,GAAG;IACbC,gBAAgB,EAAEX,mBAAmB,GAAGA,mBAAmB,GAAGQ,aAAa,GAAG;EAChF,CAAC;EACD,MAAMI,WAAW,GAAGX,MAAM,IAAIC,MAAM,GAAGC,gBAAgB,CAACJ,aAAa,CAACU,KAAK,EAAEP,MAAM,EAAED,MAAM,CAAC,GAAGY,SAAS;EAExG,IAAID,WAAW,EAAE;IACfF,MAAM,CAACI,MAAM,GAAGF,WAAW;EAC7B;EAEA,OAAOF,MAAM;AACf\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_4966335212859_init_data = {\n  code: \"function anonymous(props) {\\n  const {\\n    processColor\\n  } = this._closure;\\n  if (Object.keys(props).includes('stroke')) {\\n    props.stroke = {\\n      type: 0,\\n      payload: processColor(props.stroke)\\n    };\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"props\\\",\\\"processColor\\\",\\\"_closure\\\",\\\"Object\\\",\\\"keys\\\",\\\"includes\\\",\\\"stroke\\\",\\\"type\\\",\\\"payload\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAmGmC,SAAAA,SAASA,CAAAC,KAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACxC,IAAIC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,QAAQ,CAAC,QAAQ,CAAC,EAAE;IAGzCL,KAAK,CAACM,MAAM,GAAG;MACbC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAEP,YAAY,CAACD,KAAK,CAACM,MAAM;IACpC,CAAC;EACH;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_17555868675264_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    progressFormatter,\\n    animatedValue\\n  } = this._closure;\\n  return \\\"\\\" + progressFormatter(animatedValue.value);\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"progressFormatter\\\",\\\"animatedValue\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAgHwC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,iBAAA;IAAAC;EAAA,SAAAC,QAAA;EAC1C,YAAUF,iBAAiB,CAACC,aAAa,CAACE,KAAK,CAAC;AAClD\\\",\\\"ignoreList\\\":[]}\"\n};\nvar _worklet_4978851882157_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    progressValue\\n  } = this._closure;\\n  return {\\n    text: progressValue.value\\n  };\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-circular-progress-indicator\\\\lib\\\\module\\\\hooks\\\\useAnimatedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"progressValue\\\",\\\"_closure\\\",\\\"text\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-circular-progress-indicator/lib/module/hooks/useAnimatedValue.js\\\"],\\\"mappings\\\":\\\"AAmH6C,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAC/C,OAAO;IACLC,IAAI,EAAEF,aAAa,CAACG;EAEtB,CAAC;AACH\\\",\\\"ignoreList\\\":[]}\"\n};\nexport default function useAnimatedValue(_ref) {\n  var _ref$initialValue = _ref.initialValue,\n    initialValue = _ref$initialValue === void 0 ? 0 : _ref$initialValue,\n    _ref$radius = _ref.radius,\n    radius = _ref$radius === void 0 ? 60 : _ref$radius,\n    _ref$maxValue = _ref.maxValue,\n    maxValue = _ref$maxValue === void 0 ? 100 : _ref$maxValue,\n    clockwise = _ref.clockwise,\n    startInPausedState = _ref.startInPausedState,\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 0 : _ref$delay,\n    value = _ref.value,\n    duration = _ref.duration,\n    _ref$onAnimationCompl = _ref.onAnimationComplete,\n    onAnimationComplete = _ref$onAnimationCompl === void 0 ? function () {\n      return null;\n    } : _ref$onAnimationCompl,\n    _ref$activeStrokeWidt = _ref.activeStrokeWidth,\n    activeStrokeWidth = _ref$activeStrokeWidt === void 0 ? 10 : _ref$activeStrokeWidt,\n    _ref$inActiveStrokeWi = _ref.inActiveStrokeWidth,\n    inActiveStrokeWidth = _ref$inActiveStrokeWi === void 0 ? 10 : _ref$inActiveStrokeWi,\n    _ref$progressFormatte = _ref.progressFormatter,\n    progressFormatter = _ref$progressFormatte === void 0 ? function () {\n      var _e = [new global.Error(), 1, -27];\n      var _f = function _f(v) {\n        return Math.round(v);\n      };\n      _f._closure = {};\n      _f.__initData = _worklet_3386002850621_init_data;\n      _f.__workletHash = 3386002850621;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }() : _ref$progressFormatte,\n    _ref$strokeColorConfi = _ref.strokeColorConfig,\n    strokeColorConfig = _ref$strokeColorConfi === void 0 ? undefined : _ref$strokeColorConfi;\n  var paused = useSharedValue(startInPausedState);\n  var animatedValue = useSharedValue(initialValue);\n  var _useCircleValues = useCircleValues({\n      radius: radius,\n      activeStrokeWidth: activeStrokeWidth,\n      inActiveStrokeWidth: inActiveStrokeWidth\n    }),\n    circleCircumference = _useCircleValues.circleCircumference;\n  var pause = useCallback(function () {\n    paused.value = true;\n  }, [paused]);\n  var play = useCallback(function () {\n    paused.value = false;\n  }, [paused]);\n  var resetAnimatedValue = useCallback(function () {\n    paused.value = false;\n    animatedValue.value = initialValue;\n  }, [animatedValue, initialValue, paused]);\n  var animateValue = useCallback(function () {\n    animatedValue.value = withPause(withDelay(delay, withTiming(value, {\n      duration: duration,\n      easing: Easing.linear\n    }, function () {\n      var _e = [new global.Error(), -3, -27];\n      var _f = function _f(isFinished) {\n        if (isFinished) {\n          var _runOnJS;\n          (_runOnJS = runOnJS(onAnimationComplete)) === null || _runOnJS === void 0 ? void 0 : _runOnJS();\n        }\n      };\n      _f._closure = {\n        runOnJS: runOnJS,\n        onAnimationComplete: onAnimationComplete\n      };\n      _f.__initData = _worklet_9662471165211_init_data;\n      _f.__workletHash = 9662471165211;\n      _f.__stackDetails = _e;\n      _f.__version = \"3.3.0\";\n      return _f;\n    }())), paused);\n  }, [animatedValue, delay, duration, paused, value]);\n  var reAnimate = function reAnimate() {\n    resetAnimatedValue();\n    animateValue();\n  };\n  var sortedStrokeColors = useMemo(function () {\n    if (!strokeColorConfig) {\n      return null;\n    }\n    return strokeColorConfig.sort(function (a, b) {\n      return a.value - b.value;\n    });\n  }, [strokeColorConfig]);\n  var colors = useMemo(function () {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(function (item) {\n      return item.color;\n    });\n  }, [sortedStrokeColors]);\n  var values = useMemo(function () {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(function (item) {\n      return item.value;\n    });\n  }, [sortedStrokeColors]);\n  var animatedCircleProps = useAnimatedProps(function () {\n    var _e = [new global.Error(), -9, -27];\n    var _f = function _f() {\n      var biggestValue = Math.max(initialValue, maxValue);\n      biggestValue = biggestValue <= 0 ? 1 : biggestValue;\n      var maxPercentage = clockwise ? 100 * animatedValue.value / biggestValue : 100 * -animatedValue.value / biggestValue;\n      var config = {\n        strokeDashoffset: circleCircumference - circleCircumference * maxPercentage / 100\n      };\n      var strokeColor = colors && values ? interpolateColor(animatedValue.value, values, colors) : undefined;\n      if (strokeColor) {\n        config.stroke = strokeColor;\n      }\n      return config;\n    };\n    _f._closure = {\n      initialValue: initialValue,\n      maxValue: maxValue,\n      clockwise: clockwise,\n      animatedValue: animatedValue,\n      circleCircumference: circleCircumference,\n      colors: colors,\n      values: values,\n      interpolateColor: interpolateColor\n    };\n    _f.__initData = _worklet_3404431613582_init_data;\n    _f.__workletHash = 3404431613582;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), [], createAnimatedPropAdapter(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f(props) {\n      if (Object.keys(props).includes('stroke')) {\n        props.stroke = {\n          type: 0,\n          payload: processColor(props.stroke)\n        };\n      }\n    };\n    _f._closure = {\n      processColor: processColor\n    };\n    _f.__initData = _worklet_4966335212859_init_data;\n    _f.__workletHash = 4966335212859;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), ['stroke']));\n  useEffect(function () {\n    animateValue();\n  }, [animateValue]);\n  var progressValue = useDerivedValue(function () {\n    var _e = [new global.Error(), -3, -27];\n    var _f = function _f() {\n      return `${progressFormatter(animatedValue.value)}`;\n    };\n    _f._closure = {\n      progressFormatter: progressFormatter,\n      animatedValue: animatedValue\n    };\n    _f.__initData = _worklet_17555868675264_init_data;\n    _f.__workletHash = 17555868675264;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }());\n  var animatedTextProps = useAnimatedProps(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      return {\n        text: progressValue.value\n      };\n    };\n    _f._closure = {\n      progressValue: progressValue\n    };\n    _f.__initData = _worklet_4978851882157_init_data;\n    _f.__workletHash = 4978851882157;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }());\n  return {\n    animatedCircleProps: animatedCircleProps,\n    animatedTextProps: animatedTextProps,\n    progressValue: progressValue,\n    pause: pause,\n    play: play,\n    reAnimate: reAnimate\n  };\n}","map":{"version":3,"names":["useCallback","useEffect","useMemo","createAnimatedPropAdapter","Easing","interpolateColor","processColor","runOnJS","useAnimatedProps","useDerivedValue","useSharedValue","withDelay","withTiming","withPause","useCircleValues","_worklet_3386002850621_init_data","code","location","sourceMap","_worklet_9662471165211_init_data","_worklet_3404431613582_init_data","_worklet_4966335212859_init_data","_worklet_17555868675264_init_data","_worklet_4978851882157_init_data","useAnimatedValue","_ref","_ref$initialValue","initialValue","_ref$radius","radius","_ref$maxValue","maxValue","clockwise","startInPausedState","_ref$delay","delay","value","duration","_ref$onAnimationCompl","onAnimationComplete","_ref$activeStrokeWidt","activeStrokeWidth","_ref$inActiveStrokeWi","inActiveStrokeWidth","_ref$progressFormatte","progressFormatter","_e","global","Error","_f","v","Math","round","_closure","__initData","__workletHash","__stackDetails","__version","_ref$strokeColorConfi","strokeColorConfig","undefined","paused","animatedValue","_useCircleValues","circleCircumference","pause","play","resetAnimatedValue","animateValue","easing","linear","isFinished","_runOnJS","reAnimate","sortedStrokeColors","sort","a","b","colors","map","item","color","values","animatedCircleProps","biggestValue","max","maxPercentage","config","strokeDashoffset","strokeColor","stroke","props","Object","keys","includes","type","payload","progressValue","animatedTextProps","text"],"sources":["C:\\Users\\adamh\\OneDrive - University of Central Missouri\\Desktop\\TFC\\TFC-Training_Frequency_Calculator-\\node_modules\\react-native-circular-progress-indicator\\lib\\module\\hooks\\useAnimatedValue.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport {\n  createAnimatedPropAdapter,\n  Easing,\n  interpolateColor,\n  processColor,\n  runOnJS,\n  useAnimatedProps,\n  useDerivedValue,\n  useSharedValue,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport { withPause } from 'react-native-redash';\n\nimport type { StrokeColorConfigType } from '../types';\n\nimport useCircleValues from './useCircleValues';\n\nexport interface UseAnimatedValueProps {\n  value: number;\n  initialValue?: number;\n  radius?: number;\n  duration?: number;\n  delay?: number;\n  maxValue?: number;\n  onAnimationComplete?: () => void;\n  activeStrokeWidth?: number;\n  inActiveStrokeWidth?: number;\n  clockwise?: boolean;\n  startInPausedState?: boolean;\n  valueSuffix?: string;\n  valuePrefix?: string;\n  // eslint-disable-next-line no-unused-vars\n  progressFormatter?: (v: number) => number | string;\n  strokeColorConfig?: StrokeColorConfigType[];\n}\n\ntype Config = {\n  strokeDashoffset: number;\n  stroke?: string | number;\n};\n\nexport default function useAnimatedValue({\n  initialValue = 0,\n  radius = 60,\n  maxValue = 100,\n  clockwise,\n  startInPausedState,\n  delay = 0,\n  value,\n  duration,\n  onAnimationComplete = () => null,\n  activeStrokeWidth = 10,\n  inActiveStrokeWidth = 10,\n  progressFormatter = (v: number) => {\n    'worklet';\n\n    return Math.round(v);\n  },\n  strokeColorConfig = undefined,\n}: UseAnimatedValueProps) {\n  const paused = useSharedValue(<boolean>startInPausedState);\n  const animatedValue = useSharedValue(initialValue);\n  const { circleCircumference } = useCircleValues({\n    radius,\n    activeStrokeWidth,\n    inActiveStrokeWidth,\n  });\n\n  const pause = useCallback(() => {\n    paused.value = true;\n  }, [paused]);\n\n  const play = useCallback(() => {\n    paused.value = false;\n  }, [paused]);\n\n  const resetAnimatedValue = useCallback(() => {\n    // reset the paused state to false regardless of the value of\n    // startInPausedState, as calling reAnimate is expected to restart\n    // the animation.\n    paused.value = false;\n    animatedValue.value = initialValue;\n  }, [animatedValue, initialValue, paused]);\n\n  const animateValue = useCallback(() => {\n    animatedValue.value = withPause(\n      withDelay(\n        delay,\n        withTiming(value, { duration, easing: Easing.linear }, isFinished => {\n          if (isFinished) {\n            runOnJS(onAnimationComplete)?.();\n          }\n        })\n      ),\n      paused\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedValue, delay, duration, paused, value]);\n\n  const reAnimate = () => {\n    resetAnimatedValue();\n    animateValue();\n  };\n\n  const sortedStrokeColors = useMemo(() => {\n    if (!strokeColorConfig) {\n      return null;\n    }\n    return strokeColorConfig.sort((a, b) => a.value - b.value);\n  }, [strokeColorConfig]);\n\n  const colors = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(item => item.color);\n  }, [sortedStrokeColors]);\n\n  const values = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(item => item.value);\n  }, [sortedStrokeColors]);\n\n  const animatedCircleProps = useAnimatedProps(\n    () => {\n      let biggestValue: number = Math.max(initialValue, maxValue);\n      biggestValue = biggestValue <= 0 ? 1 : biggestValue;\n      const maxPercentage: number = clockwise\n        ? (100 * animatedValue.value) / biggestValue\n        : (100 * -animatedValue.value) / biggestValue;\n      const config: Config = {\n        strokeDashoffset:\n          circleCircumference - (circleCircumference * maxPercentage) / 100,\n      };\n      const strokeColor =\n        colors && values\n          ? interpolateColor(animatedValue.value, values, colors)\n          : undefined;\n      if (strokeColor) {\n        config.stroke = strokeColor;\n      }\n      return config;\n    },\n    [],\n    createAnimatedPropAdapter(\n      props => {\n        if (Object.keys(props).includes('stroke')) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          props.stroke = { type: 0, payload: processColor(props.stroke) };\n        }\n      },\n      ['stroke']\n    )\n  );\n\n  useEffect(() => {\n    animateValue();\n  }, [animateValue]);\n\n  const progressValue = useDerivedValue(() => {\n    return `${progressFormatter(animatedValue.value)}`;\n  });\n\n  const animatedTextProps = useAnimatedProps(() => {\n    return {\n      text: progressValue.value,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  });\n\n  return {\n    animatedCircleProps,\n    animatedTextProps,\n    progressValue,\n    pause,\n    play,\n    reAnimate,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}