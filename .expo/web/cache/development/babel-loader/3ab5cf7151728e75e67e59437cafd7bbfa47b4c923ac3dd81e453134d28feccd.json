{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { API_URL } from \"../config\";\nexport var forgotPassword = function () {\n  var _ref = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Failed to send reset email');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      throw error;\n    }\n  });\n  return function forgotPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var resetPassword = function () {\n  var _ref2 = _asyncToGenerator(function* (token, newPassword) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token,\n          newPassword: newPassword\n        })\n      });\n      if (!response.ok) {\n        var error = yield response.json();\n        throw new Error(error.error || 'Failed to reset password');\n      }\n      return yield response.json();\n    } catch (error) {\n      console.error('Reset password error:', error);\n      throw error;\n    }\n  });\n  return function resetPassword(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var recoverUsername = function () {\n  var _ref3 = _asyncToGenerator(function* (email) {\n    try {\n      var response = yield fetch(`${API_URL}/api/auth/recover-username`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      });\n      var data = yield response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to recover username');\n      }\n      return data;\n    } catch (error) {\n      throw error.message || error;\n    }\n  });\n  return function recoverUsername(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["API_URL","forgotPassword","_ref","_asyncToGenerator","email","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","console","_x","apply","arguments","resetPassword","_ref2","token","newPassword","_x2","_x3","recoverUsername","_ref3","data","message","_x4"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/services/authService.js"],"sourcesContent":["import { API_URL } from '../config';\n\n// Use different URLs based on platform\n// const API_URL = Platform.select({\n//   ios: \"http://localhost:5001\", // iOS simulator\n//   android: \"http://10.0.2.2:5001\", // Android emulator\n//   default: \"http://localhost:5001\", // Web\n// });\n\nexport const forgotPassword = async (email) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/forgot-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to send reset email');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Forgot password error:', error);\n    throw error;\n  }\n};\n\nexport const resetPassword = async (token, newPassword) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/reset-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ token, newPassword }),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Failed to reset password');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Reset password error:', error);\n    throw error;\n  }\n};\n\nexport const recoverUsername = async (email) => {\n  try {\n    const response = await fetch(`${API_URL}/api/auth/recover-username`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to recover username');\n    }\n    return data;\n  } catch (error) {\n    throw error.message || error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}