{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\nimport { useWorkoutContext } from \"../context/WorkoutContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params || {},\n    username = _ref2.username;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMuscles = _useState4[0],\n    setSelectedMuscles = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isWorkoutModalVisible = _useState6[0],\n    setIsWorkoutModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    workoutTimer = _useState8[0],\n    setWorkoutTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTimerRunning = _useState10[0],\n    setIsTimerRunning = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showWorkoutBanner = _useState12[0],\n    setShowWorkoutBanner = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    workoutHistory = _useState14[0],\n    setWorkoutHistory = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isRefreshing = _useState16[0],\n    setIsRefreshing = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    editMode = _useState18[0],\n    setEditMode = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedMuscle = _useState20[0],\n    setSelectedMuscle = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    editDays = _useState22[0],\n    setEditDays = _useState22[1];\n  var _useState23 = useState(0),\n    _useState24 = _slicedToArray(_useState23, 2),\n    streak = _useState24[0],\n    setStreak = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    achievements = _useState26[0],\n    setAchievements = _useState26[1];\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedGroup = _useState28[0],\n    setSelectedGroup = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    trainedMuscles = _useState30[0],\n    setTrainedMuscles = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    workoutInProgress = _useState32[0],\n    setWorkoutInProgress = _useState32[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var _useWorkoutContext = useWorkoutContext(),\n    workouts = _useWorkoutContext.workouts;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n  var MUSCLE_GROUPS = [].concat(UPPER_BODY, LOWER_BODY);\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref4 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: isAuthenticated ? _jsxDEV(_Fragment, {\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                marginRight: 8\n              }],\n              onPress: function onPress() {\n                return navigation.navigate(\"Calculator\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Calculator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                backgroundColor: \"#553c9a\"\n              }],\n              onPress: handleLogout,\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true) : _jsxDEV(TouchableOpacity, {\n            style: ButtonStyles.headerButton,\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsxDEV(Text, {\n              style: ButtonStyles.headerButtonText,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, _this);\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  var loadMuscleData = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      if (prev.includes(muscle)) {\n        return prev.filter(function (m) {\n          return m !== muscle;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [muscle]);\n    });\n  };\n  var clearMuscle = function clearMuscle(muscle) {\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var clearAllMuscles = function clearAllMuscles() {\n    setSelectedMuscles([]);\n  };\n  var startWorkout = function startWorkout() {\n    console.log(\"Start Workout button pressed\");\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n    var workoutData = {\n      muscles: selectedMuscles,\n      startTime: new Date().toISOString(),\n      duration: 0,\n      userId: user == null ? void 0 : user.id\n    };\n    setWorkoutHistory([].concat(_toConsumableArray(workoutHistory), [workoutData]));\n  };\n  var endWorkout = function endWorkout() {\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    var currentTime = new Date().getTime();\n    var updatedMuscleData = _objectSpread({}, muscleData);\n    selectedMuscles.forEach(function (muscle) {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n    var lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout.duration = workoutTimer;\n      setWorkoutHistory([].concat(_toConsumableArray(workoutHistory.slice(0, -1)), [lastWorkout]));\n    }\n  };\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n  var renderMuscleItem = function renderMuscleItem(_ref10) {\n    var muscle = _ref10.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, _this);\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxDEV(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsxDEV(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return clearMuscle(muscle);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.chipText,\n              children: muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.clearAllButton,\n        onPress: clearAllMuscles,\n        children: _jsxDEV(Text, {\n          style: styles.clearAllText,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, _this);\n  };\n  var handleLogout = function () {\n    var _ref11 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        dispatch(logout());\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var handleStartWorkout = function handleStartWorkout() {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n  var handleCloseModal = function handleCloseModal() {\n    setIsWorkoutModalVisible(false);\n  };\n  var handleMuscleSelectModal = function handleMuscleSelectModal(muscles) {\n    setSelectedMuscles(muscles);\n  };\n  var handleMuscleRemove = function handleMuscleRemove(muscle) {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var renderWorkoutList = function renderWorkoutList() {\n    if (workouts.length === 0) {\n      return _jsxDEV(Text, {\n        style: styles.noWorkouts,\n        children: \"No workouts saved yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, _this);\n    }\n    return _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.workoutList,\n      children: workouts.map(function (workout, idx) {\n        return _jsxDEV(TouchableOpacity, {\n          style: styles.workoutCard,\n          onPress: function onPress() {\n            return navigation.navigate('ConfigureWorkout', {\n              edit: true,\n              workout: workout,\n              workoutIndex: idx\n            });\n          },\n          children: [_jsxDEV(Text, {\n            style: styles.workoutName,\n            children: workout.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.workoutDate,\n            children: new Date(workout.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.workoutExerciseCount,\n            children: [workout.exercises.length, \" exercise\", workout.exercises.length !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.editText,\n            children: \"Tap to view/edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, _this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, _this),\n    children: [showWorkoutBanner && _jsxDEV(WorkoutBanner, {\n      selectedMuscles: selectedMuscles,\n      onMuscleRemove: handleMuscleRemove,\n      onEndWorkout: handleEndWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, _this), renderMuscleSelectionBanner(), _jsxDEV(WorkoutSelectionModal, {\n      visible: isWorkoutModalVisible,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, _this), isAuthenticated && _jsxDEV(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsxDEV(Text, {\n          style: styles.logoutText,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.streakContainer,\n      children: [_jsxDEV(Ionicons, {\n        name: \"trophy\",\n        size: 24,\n        color: \"#FFD700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.streakText,\n        children: [streak, \" day streak!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.statsContainer,\n      children: [_jsxDEV(View, {\n        style: styles.statItem,\n        children: [_jsxDEV(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days >= 48;\n          }).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.statLabel,\n          children: \"Ready Muscles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.statItem,\n        children: [_jsxDEV(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days < 48;\n          }).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.statLabel,\n          children: \"Resting Muscles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.quickActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.startWorkoutButton,\n        onPress: handleStartWorkout,\n        children: [_jsxDEV(Ionicons, {\n          name: \"barbell-outline\",\n          size: 24,\n          color: \"#ffffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.endWorkoutButton],\n        onPress: function onPress() {\n          console.log(\"Button pressed\");\n          endWorkout();\n        },\n        disabled: !workoutInProgress || selectedMuscles.length === 0,\n        children: [_jsxDEV(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }, _this), workoutInProgress && _jsxDEV(View, {\n      style: styles.workoutInProgressContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.workoutInProgressText,\n        children: \"Workout in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.endWorkoutButton,\n        onPress: function onPress() {\n          console.log(\"Button pressed\");\n          endWorkout();\n        },\n        children: _jsxDEV(Text, {\n          style: styles.endWorkoutButtonText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }, _this), _jsxDEV(View, {\n      style: styles.workoutListContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Your Workouts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, _this), renderWorkoutList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, _this);\n};\nvar workoutListStyles = StyleSheet.create({\n  workoutListContainer: {\n    flex: 1,\n    backgroundColor: '#1a1a2e',\n    padding: 16\n  },\n  title: {\n    color: '#fff',\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 18,\n    marginTop: 8,\n    textAlign: 'center'\n  },\n  noWorkouts: {\n    color: '#a0aec0',\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 40\n  },\n  workoutList: {\n    paddingBottom: 24\n  },\n  workoutCard: {\n    backgroundColor: '#23263a',\n    borderRadius: 12,\n    padding: 18,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    }\n  },\n  workoutName: {\n    color: '#fff',\n    fontSize: 19,\n    fontWeight: 'bold',\n    marginBottom: 2\n  },\n  workoutDate: {\n    color: '#a0aec0',\n    fontSize: 13,\n    marginBottom: 2\n  },\n  workoutExerciseCount: {\n    color: '#b794f4',\n    fontSize: 14,\n    marginBottom: 6\n  },\n  editText: {\n    color: '#6b46c1',\n    fontSize: 13,\n    fontWeight: 'bold',\n    marginTop: 3\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","ButtonStyles","useWorkoutContext","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_ref","route","navigation","_ref2","params","username","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","selectedMuscles","setSelectedMuscles","_useState5","_useState6","isWorkoutModalVisible","setIsWorkoutModalVisible","_useState7","_useState8","workoutTimer","setWorkoutTimer","_useState9","_useState10","isTimerRunning","setIsTimerRunning","_useState11","_useState12","showWorkoutBanner","setShowWorkoutBanner","_useState13","_useState14","workoutHistory","setWorkoutHistory","_useState15","_useState16","isRefreshing","setIsRefreshing","_useState17","_useState18","editMode","setEditMode","_useState19","_useState20","selectedMuscle","setSelectedMuscle","_useState21","_useState22","editDays","setEditDays","_useState23","_useState24","streak","setStreak","_useState25","_useState26","achievements","setAchievements","_useState27","_useState28","selectedGroup","setSelectedGroup","_useState29","_useState30","trainedMuscles","setTrainedMuscles","_useState31","_useState32","workoutInProgress","setWorkoutInProgress","_useSelector","state","auth","isAuthenticated","user","dispatch","workoutTimerRef","scaleAnim","Value","current","_useWorkoutContext","workouts","UPPER_BODY","LOWER_BODY","concat","getStatus","days","loadStreak","_ref3","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref4","value","setItem","toString","_x","updateStreak","_ref5","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref6","savedAchievements","JSON","parse","_ref7","currentStreak","prevAchievements","newAchievements","includes","push","length","_toConsumableArray","stringify","loadMuscleData","setOptions","headerRight","style","flexDirection","children","headerButton","marginRight","onPress","navigate","headerButtonText","fileName","_jsxFileName","lineNumber","columnNumber","_this","backgroundColor","handleLogout","_ref8","savedData","initialData","reduce","acc","muscle","alert","handleMuscleSelect","prev","filter","m","clearMuscle","clearAllMuscles","startWorkout","log","workoutData","muscles","startTime","duration","userId","id","endWorkout","currentTime","getTime","updatedMuscleData","_objectSpread","forEach","slice","handleEdit","saveEdit","_ref9","isNaN","newData","_defineProperty","cancelEdit","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","setInterval","clearInterval","renderMuscleItem","_ref10","item","status","muscleButton","onLongPress","transform","scale","muscleStatus","muscleName","daysContainer","daysText","editButton","name","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","chipText","clearAllButton","clearAllText","_ref11","clear","reset","routes","handleStartWorkout","handleCloseModal","handleMuscleSelectModal","handleMuscleRemove","renderWorkoutList","noWorkouts","contentContainerStyle","workoutList","workout","idx","workoutCard","edit","workoutIndex","workoutName","workoutDate","createdAt","toLocaleString","workoutExerciseCount","exercises","editText","container","refreshControl","refreshing","onRefresh","onMuscleRemove","onEndWorkout","handleEndWorkout","visible","onClose","header","title","welcomeUser","logoutButton","logoutText","streakContainer","streakText","statsContainer","statItem","statNumber","Object","values","statLabel","subtitle","data","renderItem","keyExtractor","list","listContainer","quickActions","startWorkoutButton","buttonText","quickActionItem","endWorkoutButton","disabled","quickActionText","button","secondaryButton","position","bottom","left","right","workoutInProgressContainer","workoutInProgressText","endWorkoutButtonText","workoutListContainer","transparent","animationType","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton","workoutListStyles","StyleSheet","create","flex","padding","fontSize","fontWeight","marginBottom","marginTop","textAlign","paddingBottom","borderRadius","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\nimport { useWorkoutContext } from '../context/WorkoutContext';\n\nconst HomeScreen = ({ route, navigation }) => {\n  const { username } = route.params || {};\n  const [muscleData, setMuscleData] = useState({});\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\n  const [workoutTimer, setWorkoutTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showWorkoutBanner, setShowWorkoutBanner] = useState(false);\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const workoutTimerRef = useRef(null);\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n  const { workouts } = useWorkoutContext();\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n\n  const MUSCLE_GROUPS = [...UPPER_BODY, ...LOWER_BODY];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: \"row\" }}>\n          {isAuthenticated ? (\n            <>\n              <TouchableOpacity\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\n                onPress={() => navigation.navigate(\"Calculator\")}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  ButtonStyles.headerButton,\n                  { backgroundColor: \"#553c9a\" },\n                ]}\n                onPress={handleLogout}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <TouchableOpacity\n              style={ButtonStyles.headerButton}\n              onPress={() => navigation.navigate(\"Login\")}\n            >\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ),\n    });\n  }, [navigation, isAuthenticated]);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscles((prev) => {\n      // If the muscle is already selected, remove it\n      if (prev.includes(muscle)) {\n        return prev.filter((m) => m !== muscle);\n      }\n      // Otherwise, add it to the selection\n      return [...prev, muscle];\n    });\n  };\n\n  const clearMuscle = (muscle) => {\n    setSelectedMuscles((prev) => prev.filter((m) => m !== muscle));\n  };\n\n  const clearAllMuscles = () => {\n    setSelectedMuscles([]);\n  };\n\n  const startWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n\n    // Store the workout in history\n    const workoutData = {\n      muscles: selectedMuscles,\n      startTime: new Date().toISOString(),\n      duration: 0,\n      userId: user?.id,\n    };\n    setWorkoutHistory([...workoutHistory, workoutData]);\n  };\n\n  const endWorkout = () => {\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n\n    // Update the last workout time for selected muscles\n    const currentTime = new Date().getTime();\n    const updatedMuscleData = { ...muscleData };\n    selectedMuscles.forEach((muscle) => {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n\n    // Update the workout history with duration\n    const lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout.duration = workoutTimer;\n      setWorkoutHistory([...workoutHistory.slice(0, -1), lastWorkout]);\n    }\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n\n  useEffect(() => {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(() => {\n        setWorkoutTimer((prev) => prev + 1);\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n\n    return () => {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMuscleSelect(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => clearMuscle(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <TouchableOpacity\n          style={styles.clearAllButton}\n          onPress={clearAllMuscles}\n        >\n          <Text style={styles.clearAllText}>Clear All</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const handleLogout = async () => {\n    try {\n      await AsyncStorage.clear();\n      dispatch(logout());\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Login' }],\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const handleStartWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsWorkoutModalVisible(false);\n  };\n\n  const handleMuscleSelectModal = (muscles) => {\n    setSelectedMuscles(muscles);\n  };\n\n  const handleMuscleRemove = (muscle) => {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(prev => prev.filter(m => m !== muscle));\n  };\n\n  const renderWorkoutList = () => {\n    if (workouts.length === 0) {\n      return (\n        <Text style={styles.noWorkouts}>No workouts saved yet.</Text>\n      );\n    }\n\n    return (\n      <ScrollView contentContainerStyle={styles.workoutList}>\n        {workouts.map((workout, idx) => (\n          <TouchableOpacity\n            key={idx}\n            style={styles.workoutCard}\n            onPress={() => navigation.navigate('ConfigureWorkout', { edit: true, workout, workoutIndex: idx })}\n          >\n            <Text style={styles.workoutName}>{workout.name}</Text>\n            <Text style={styles.workoutDate}>{new Date(workout.createdAt).toLocaleString()}</Text>\n            <Text style={styles.workoutExerciseCount}>{workout.exercises.length} exercise{workout.exercises.length !== 1 ? 's' : ''}</Text>\n            <Text style={styles.editText}>Tap to view/edit</Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {showWorkoutBanner && (\n        <WorkoutBanner\n          selectedMuscles={selectedMuscles}\n          onMuscleRemove={handleMuscleRemove}\n          onEndWorkout={handleEndWorkout}\n        />\n      )}\n      {renderMuscleSelectionBanner()}\n      <WorkoutSelectionModal\n        visible={isWorkoutModalVisible}\n        onClose={handleCloseModal}\n      />\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n        {isAuthenticated && (\n          <TouchableOpacity\n            style={styles.logoutButton}\n            onPress={handleLogout}\n          >\n            <Text style={styles.logoutText}>Logout</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {/* Streak Counter */}\n      <View style={styles.streakContainer}>\n        <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n        <Text style={styles.streakText}>{streak} day streak!</Text>\n      </View>\n\n      {/* Quick Stats */}\n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days >= 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Ready Muscles</Text>\n        </View>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days < 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Resting Muscles</Text>\n        </View>\n      </View>\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\n\n      <FlatList\n        data={\n          selectedGroup === null\n            ? MUSCLE_GROUPS\n            : selectedGroup === \"upper\"\n            ? UPPER_BODY\n            : LOWER_BODY\n        }\n        renderItem={renderMuscleItem}\n        keyExtractor={(item) => item}\n        style={styles.list}\n        contentContainerStyle={styles.listContainer}\n      />\n\n      {/* Quick Actions */}\n      <View style={styles.quickActions}>\n        <TouchableOpacity\n          style={styles.startWorkoutButton}\n          onPress={handleStartWorkout}\n        >\n          <Ionicons name=\"barbell-outline\" size={24} color=\"#ffffff\" />\n          <Text style={styles.buttonText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.endWorkoutButton]}\n          onPress={() => {\n            console.log(\"Button pressed\");\n            endWorkout();\n          }}\n          disabled={!workoutInProgress || selectedMuscles.length === 0}\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>End Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"upper\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"upper\");\n            UPPER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>Upper Body</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"lower\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"lower\");\n            LOWER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Lower Body</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      {workoutInProgress && (\n        <View style={styles.workoutInProgressContainer}>\n          <Text style={styles.workoutInProgressText}>Workout in Progress</Text>\n          <TouchableOpacity\n            style={styles.endWorkoutButton}\n            onPress={() => {\n              console.log(\"Button pressed\");\n              endWorkout();\n            }}\n          >\n            <Text style={styles.endWorkoutButtonText}>End Workout</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <View style={styles.workoutListContainer}>\n        <Text style={styles.title}>Your Workouts</Text>\n        {renderWorkoutList()}\n      </View>\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nconst workoutListStyles = StyleSheet.create({\n  workoutListContainer: {\n    flex: 1,\n    backgroundColor: '#1a1a2e',\n    padding: 16,\n  },\n  title: {\n    color: '#fff',\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 18,\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  noWorkouts: {\n    color: '#a0aec0',\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 40,\n  },\n  workoutList: {\n    paddingBottom: 24,\n  },\n  workoutCard: {\n    backgroundColor: '#23263a',\n    borderRadius: 12,\n    padding: 18,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOpacity: 0.1,\n    shadowRadius: 5,\n    shadowOffset: { width: 0, height: 2 },\n  },\n  workoutName: {\n    color: '#fff',\n    fontSize: 19,\n    fontWeight: 'bold',\n    marginBottom: 2,\n  },\n  workoutDate: {\n    color: '#a0aec0',\n    fontSize: 13,\n    marginBottom: 2,\n  },\n  workoutExerciseCount: {\n    color: '#b794f4',\n    fontSize: 14,\n    marginBottom: 6,\n  },\n  editText: {\n    color: '#6b46c1',\n    fontSize: 13,\n    fontWeight: 'bold',\n    marginTop: 3,\n  },\n});\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}