{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _ref2 = route.params || {},\n    username = _ref2.username;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMuscles = _useState4[0],\n    setSelectedMuscles = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isWorkoutModalVisible = _useState6[0],\n    setIsWorkoutModalVisible = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    workoutTimer = _useState8[0],\n    setWorkoutTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTimerRunning = _useState10[0],\n    setIsTimerRunning = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showWorkoutBanner = _useState12[0],\n    setShowWorkoutBanner = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    workoutHistory = _useState14[0],\n    setWorkoutHistory = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isRefreshing = _useState16[0],\n    setIsRefreshing = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    editMode = _useState18[0],\n    setEditMode = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedMuscle = _useState20[0],\n    setSelectedMuscle = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    editDays = _useState22[0],\n    setEditDays = _useState22[1];\n  var _useState23 = useState(0),\n    _useState24 = _slicedToArray(_useState23, 2),\n    streak = _useState24[0],\n    setStreak = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    achievements = _useState26[0],\n    setAchievements = _useState26[1];\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedGroup = _useState28[0],\n    setSelectedGroup = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    trainedMuscles = _useState30[0],\n    setTrainedMuscles = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    workoutInProgress = _useState32[0],\n    setWorkoutInProgress = _useState32[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n  var MUSCLE_GROUPS = [].concat(UPPER_BODY, LOWER_BODY);\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref4 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: isAuthenticated ? _jsxs(_Fragment, {\n            children: [_jsx(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                marginRight: 8\n              }],\n              onPress: function onPress() {\n                return navigation.navigate(\"Calculator\");\n              },\n              children: _jsx(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Calculator\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                backgroundColor: \"#553c9a\"\n              }],\n              onPress: handleLogout,\n              children: _jsx(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Logout\"\n              })\n            })]\n          }) : _jsx(TouchableOpacity, {\n            style: ButtonStyles.headerButton,\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsx(Text, {\n              style: ButtonStyles.headerButtonText,\n              children: \"Login\"\n            })\n          })\n        });\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  var loadMuscleData = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      if (prev.includes(muscle)) {\n        return prev.filter(function (m) {\n          return m !== muscle;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [muscle]);\n    });\n  };\n  var clearMuscle = function clearMuscle(muscle) {\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  var clearAllMuscles = function clearAllMuscles() {\n    setSelectedMuscles([]);\n  };\n  var startWorkout = function startWorkout() {\n    console.log(\"Start Workout button pressed\");\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n    var workoutData = {\n      muscles: selectedMuscles,\n      startTime: new Date().toISOString(),\n      duration: 0,\n      userId: user == null ? void 0 : user.id\n    };\n    setWorkoutHistory([].concat(_toConsumableArray(workoutHistory), [workoutData]));\n  };\n  var endWorkout = function endWorkout() {\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n    var currentTime = new Date().getTime();\n    var updatedMuscleData = _objectSpread({}, muscleData);\n    selectedMuscles.forEach(function (muscle) {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n    var lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout.duration = workoutTimer;\n      setWorkoutHistory([].concat(_toConsumableArray(workoutHistory.slice(0, -1)), [lastWorkout]));\n    }\n  };\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return minutes + \":\" + remainingSeconds.toString().padStart(2, \"0\");\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n  var renderMuscleItem = function renderMuscleItem(_ref10) {\n    var muscle = _ref10.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsx(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsx(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxs(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsx(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }), _jsxs(View, {\n            style: styles.daysContainer,\n            children: [_jsxs(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }), _jsx(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsx(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              })\n            })]\n          })]\n        })\n      })\n    });\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxs(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsx(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }), _jsx(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsx(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return clearMuscle(muscle);\n            },\n            children: _jsx(Text, {\n              style: styles.chipText,\n              children: muscle\n            })\n          }, index);\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.clearAllButton,\n        onPress: clearAllMuscles,\n        children: _jsx(Text, {\n          style: styles.clearAllText,\n          children: \"Clear All\"\n        })\n      })]\n    });\n  };\n  var handleLogout = function () {\n    var _ref11 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        dispatch(logout());\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Login'\n          }]\n        });\n      } catch (error) {\n        console.error('Logout error:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n  var handleStartWorkout = function handleStartWorkout() {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n  var handleCloseModal = function handleCloseModal() {\n    setIsWorkoutModalVisible(false);\n  };\n  var handleMuscleSelectModal = function handleMuscleSelectModal(muscles) {\n    setSelectedMuscles(muscles);\n  };\n  var handleMuscleRemove = function handleMuscleRemove(muscle) {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(function (prev) {\n      return prev.filter(function (m) {\n        return m !== muscle;\n      });\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }),\n    children: [showWorkoutBanner && _jsx(WorkoutBanner, {\n      selectedMuscles: selectedMuscles,\n      onMuscleRemove: handleMuscleRemove,\n      onEndWorkout: handleEndWorkout\n    }), renderMuscleSelectionBanner(), _jsx(WorkoutSelectionModal, {\n      visible: isWorkoutModalVisible,\n      onClose: handleCloseModal\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }), isAuthenticated && user && _jsxs(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }), isAuthenticated && _jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: handleLogout,\n        children: _jsx(Text, {\n          style: styles.logoutText,\n          children: \"Logout\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.streakContainer,\n      children: [_jsx(Ionicons, {\n        name: \"trophy\",\n        size: 24,\n        color: \"#FFD700\"\n      }), _jsxs(Text, {\n        style: styles.streakText,\n        children: [streak, \" day streak!\"]\n      })]\n    }), _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(View, {\n        style: styles.statItem,\n        children: [_jsx(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days >= 48;\n          }).length\n        }), _jsx(Text, {\n          style: styles.statLabel,\n          children: \"Ready Muscles\"\n        })]\n      }), _jsxs(View, {\n        style: styles.statItem,\n        children: [_jsx(Text, {\n          style: styles.statNumber,\n          children: Object.values(muscleData).filter(function (days) {\n            return days < 48;\n          }).length\n        }), _jsx(Text, {\n          style: styles.statLabel,\n          children: \"Resting Muscles\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }), _jsx(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }), _jsxs(View, {\n      style: styles.quickActions,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.startWorkoutButton,\n        onPress: handleStartWorkout,\n        children: [_jsx(Ionicons, {\n          name: \"barbell-outline\",\n          size: 24,\n          color: \"#ffffff\"\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Start Workout\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.endWorkoutButton],\n        onPress: function onPress() {\n          console.log(\"Button pressed\");\n          endWorkout();\n        },\n        disabled: !workoutInProgress || selectedMuscles.length === 0,\n        children: [_jsx(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\"\n        }), _jsx(Text, {\n          style: styles.quickActionText,\n          children: \"End Workout\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsx(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }), _jsx(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsx(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }), _jsx(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        })]\n      })]\n    }), selectedGroup !== null && _jsx(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      })\n    }), workoutInProgress && _jsxs(View, {\n      style: styles.workoutInProgressContainer,\n      children: [_jsx(Text, {\n        style: styles.workoutInProgressText,\n        children: \"Workout in Progress\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.endWorkoutButton,\n        onPress: function onPress() {\n          console.log(\"Button pressed\");\n          endWorkout();\n        },\n        children: _jsx(Text, {\n          style: styles.endWorkoutButtonText,\n          children: \"End Workout\"\n        })\n      })]\n    }), _jsx(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsxs(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }), _jsxs(View, {\n            style: styles.modalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","ButtonStyles","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","HomeScreen","_ref","route","navigation","_ref2","params","username","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","selectedMuscles","setSelectedMuscles","_useState5","_useState6","isWorkoutModalVisible","setIsWorkoutModalVisible","_useState7","_useState8","workoutTimer","setWorkoutTimer","_useState9","_useState10","isTimerRunning","setIsTimerRunning","_useState11","_useState12","showWorkoutBanner","setShowWorkoutBanner","_useState13","_useState14","workoutHistory","setWorkoutHistory","_useState15","_useState16","isRefreshing","setIsRefreshing","_useState17","_useState18","editMode","setEditMode","_useState19","_useState20","selectedMuscle","setSelectedMuscle","_useState21","_useState22","editDays","setEditDays","_useState23","_useState24","streak","setStreak","_useState25","_useState26","achievements","setAchievements","_useState27","_useState28","selectedGroup","setSelectedGroup","_useState29","_useState30","trainedMuscles","setTrainedMuscles","_useState31","_useState32","workoutInProgress","setWorkoutInProgress","_useSelector","state","auth","isAuthenticated","user","dispatch","workoutTimerRef","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","concat","getStatus","days","loadStreak","_ref3","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref4","value","setItem","toString","_x","updateStreak","_ref5","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref6","savedAchievements","JSON","parse","_ref7","currentStreak","prevAchievements","newAchievements","includes","push","length","_toConsumableArray","stringify","loadMuscleData","setOptions","headerRight","style","flexDirection","children","headerButton","marginRight","onPress","navigate","headerButtonText","backgroundColor","handleLogout","_ref8","savedData","initialData","reduce","acc","muscle","alert","handleMuscleSelect","prev","filter","m","clearMuscle","clearAllMuscles","startWorkout","log","workoutData","muscles","startTime","duration","userId","id","endWorkout","currentTime","getTime","updatedMuscleData","_objectSpread","forEach","slice","handleEdit","saveEdit","_ref9","isNaN","newData","_defineProperty","cancelEdit","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","setInterval","clearInterval","renderMuscleItem","_ref10","item","status","muscleButton","onLongPress","transform","scale","muscleStatus","muscleName","daysContainer","daysText","editButton","name","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","chipText","clearAllButton","clearAllText","_ref11","clear","reset","routes","handleStartWorkout","handleCloseModal","handleMuscleSelectModal","handleMuscleRemove","container","refreshControl","refreshing","onRefresh","onMuscleRemove","onEndWorkout","handleEndWorkout","visible","onClose","header","title","welcomeUser","logoutButton","logoutText","streakContainer","streakText","statsContainer","statItem","statNumber","Object","values","statLabel","subtitle","data","renderItem","keyExtractor","list","contentContainerStyle","listContainer","quickActions","startWorkoutButton","buttonText","quickActionItem","endWorkoutButton","disabled","quickActionText","button","secondaryButton","position","bottom","left","right","workoutInProgressContainer","workoutInProgressText","endWorkoutButtonText","transparent","animationType","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\n\nconst HomeScreen = ({ route, navigation }) => {\n  const { username } = route.params || {};\n  const [muscleData, setMuscleData] = useState({});\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\n  const [workoutTimer, setWorkoutTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [showWorkoutBanner, setShowWorkoutBanner] = useState(false);\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const workoutTimerRef = useRef(null);\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Calves\", \"Glutes\"];\n\n  const MUSCLE_GROUPS = [...UPPER_BODY, ...LOWER_BODY];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: \"row\" }}>\n          {isAuthenticated ? (\n            <>\n              <TouchableOpacity\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\n                onPress={() => navigation.navigate(\"Calculator\")}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  ButtonStyles.headerButton,\n                  { backgroundColor: \"#553c9a\" },\n                ]}\n                onPress={handleLogout}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <TouchableOpacity\n              style={ButtonStyles.headerButton}\n              onPress={() => navigation.navigate(\"Login\")}\n            >\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ),\n    });\n  }, [navigation, isAuthenticated]);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscles((prev) => {\n      // If the muscle is already selected, remove it\n      if (prev.includes(muscle)) {\n        return prev.filter((m) => m !== muscle);\n      }\n      // Otherwise, add it to the selection\n      return [...prev, muscle];\n    });\n  };\n\n  const clearMuscle = (muscle) => {\n    setSelectedMuscles((prev) => prev.filter((m) => m !== muscle));\n  };\n\n  const clearAllMuscles = () => {\n    setSelectedMuscles([]);\n  };\n\n  const startWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n    setWorkoutTimer(0);\n\n    // Store the workout in history\n    const workoutData = {\n      muscles: selectedMuscles,\n      startTime: new Date().toISOString(),\n      duration: 0,\n      userId: user?.id,\n    };\n    setWorkoutHistory([...workoutHistory, workoutData]);\n  };\n\n  const endWorkout = () => {\n    console.log(\"End Workout button pressed\");\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n\n    // Update the last workout time for selected muscles\n    const currentTime = new Date().getTime();\n    const updatedMuscleData = { ...muscleData };\n    selectedMuscles.forEach((muscle) => {\n      updatedMuscleData[muscle] = currentTime;\n    });\n    setMuscleData(updatedMuscleData);\n\n    // Update the workout history with duration\n    const lastWorkout = workoutHistory[workoutHistory.length - 1];\n    if (lastWorkout) {\n      lastWorkout.duration = workoutTimer;\n      setWorkoutHistory([...workoutHistory.slice(0, -1), lastWorkout]);\n    }\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n\n  useEffect(() => {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(() => {\n        setWorkoutTimer((prev) => prev + 1);\n      }, 1000);\n    } else if (workoutTimerRef.current) {\n      clearInterval(workoutTimerRef.current);\n    }\n\n    return () => {\n      if (workoutTimerRef.current) {\n        clearInterval(workoutTimerRef.current);\n      }\n    };\n  }, [isTimerRunning]);\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMuscleSelect(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => clearMuscle(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        <TouchableOpacity\n          style={styles.clearAllButton}\n          onPress={clearAllMuscles}\n        >\n          <Text style={styles.clearAllText}>Clear All</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const handleLogout = async () => {\n    try {\n      await AsyncStorage.clear();\n      dispatch(logout());\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'Login' }],\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const handleStartWorkout = () => {\n    console.log(\"Start Workout button pressed\");\n    setIsWorkoutModalVisible(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsWorkoutModalVisible(false);\n  };\n\n  const handleMuscleSelectModal = (muscles) => {\n    setSelectedMuscles(muscles);\n  };\n\n  const handleMuscleRemove = (muscle) => {\n    console.log(\"Removing muscle:\", muscle);\n    setSelectedMuscles(prev => prev.filter(m => m !== muscle));\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {showWorkoutBanner && (\n        <WorkoutBanner\n          selectedMuscles={selectedMuscles}\n          onMuscleRemove={handleMuscleRemove}\n          onEndWorkout={handleEndWorkout}\n        />\n      )}\n      {renderMuscleSelectionBanner()}\n      <WorkoutSelectionModal\n        visible={isWorkoutModalVisible}\n        onClose={handleCloseModal}\n      />\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n        {isAuthenticated && (\n          <TouchableOpacity\n            style={styles.logoutButton}\n            onPress={handleLogout}\n          >\n            <Text style={styles.logoutText}>Logout</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {/* Streak Counter */}\n      <View style={styles.streakContainer}>\n        <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n        <Text style={styles.streakText}>{streak} day streak!</Text>\n      </View>\n\n      {/* Quick Stats */}\n      <View style={styles.statsContainer}>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days >= 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Ready Muscles</Text>\n        </View>\n        <View style={styles.statItem}>\n          <Text style={styles.statNumber}>\n            {Object.values(muscleData).filter((days) => days < 48).length}\n          </Text>\n          <Text style={styles.statLabel}>Resting Muscles</Text>\n        </View>\n      </View>\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\n\n      <FlatList\n        data={\n          selectedGroup === null\n            ? MUSCLE_GROUPS\n            : selectedGroup === \"upper\"\n            ? UPPER_BODY\n            : LOWER_BODY\n        }\n        renderItem={renderMuscleItem}\n        keyExtractor={(item) => item}\n        style={styles.list}\n        contentContainerStyle={styles.listContainer}\n      />\n\n      {/* Quick Actions */}\n      <View style={styles.quickActions}>\n        <TouchableOpacity\n          style={styles.startWorkoutButton}\n          onPress={handleStartWorkout}\n        >\n          <Ionicons name=\"barbell-outline\" size={24} color=\"#ffffff\" />\n          <Text style={styles.buttonText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.endWorkoutButton]}\n          onPress={() => {\n            console.log(\"Button pressed\");\n            endWorkout();\n          }}\n          disabled={!workoutInProgress || selectedMuscles.length === 0}\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>End Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"upper\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"upper\");\n            UPPER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>Upper Body</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"lower\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"lower\");\n            LOWER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Lower Body</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      {workoutInProgress && (\n        <View style={styles.workoutInProgressContainer}>\n          <Text style={styles.workoutInProgressText}>Workout in Progress</Text>\n          <TouchableOpacity\n            style={styles.endWorkoutButton}\n            onPress={() => {\n              console.log(\"Button pressed\");\n              endWorkout();\n            }}\n          >\n            <Text style={styles.endWorkoutButtonText}>End Workout</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}