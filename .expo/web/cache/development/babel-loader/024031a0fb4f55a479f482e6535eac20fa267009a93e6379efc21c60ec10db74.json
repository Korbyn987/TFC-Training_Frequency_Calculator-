{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\screens\\\\ResetPasswordScreen.js\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { authService } from \"../services/authService\";\nimport ButtonStyles from \"../styles/Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    success = _useState8[0],\n    setSuccess = _useState8[1];\n  var navigation = useNavigation();\n  var route = useRoute();\n  useEffect(function () {\n    var params = new URLSearchParams(window.location.search);\n    var token = params.get('token');\n    if (!token) {\n      setError('Invalid reset link. Please request a new password reset.');\n    }\n  }, []);\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setError('');\n        var params = new URLSearchParams(window.location.search);\n        var token = params.get('token');\n        if (!newPassword || !confirmPassword) {\n          setError('Please fill in all fields');\n          return;\n        }\n        if (newPassword.length < 8) {\n          setError('Password must be at least 8 characters long');\n          return;\n        }\n        if (newPassword !== confirmPassword) {\n          setError('Passwords do not match');\n          return;\n        }\n        if (!token) {\n          setError('Invalid reset link. Please request a new password reset.');\n          return;\n        }\n        yield authService.resetPassword(token, newPassword);\n        setSuccess(true);\n        setNewPassword('');\n        setConfirmPassword('');\n        setTimeout(function () {\n          navigation.navigate('Login');\n        }, 2000);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Reset password error:', error);\n        setError(((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.error) || 'Failed to reset password. Please try again.');\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), !success ? _jsxDEV(_Fragment, {\n      children: [_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChangeText: setNewPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        secureTextEntry: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, _this), error ? _jsxDEV(Text, {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, _this) : null, _jsxDEV(TouchableOpacity, {\n        style: ButtonStyles.primaryButton,\n        onPress: handleSubmit,\n        children: _jsxDEV(Text, {\n          style: ButtonStyles.buttonText,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true) : _jsxDEV(View, {\n      style: styles.successContainer,\n      children: _jsxDEV(Text, {\n        style: styles.success,\n        children: \"Password reset successful! Redirecting to login...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#6b46c1'\n  },\n  input: {\n    width: '100%',\n    maxWidth: 400,\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16\n  },\n  error: {\n    color: '#e53e3e',\n    marginBottom: 15,\n    textAlign: 'center',\n    maxWidth: 400\n  },\n  successContainer: {\n    alignItems: 'center',\n    maxWidth: 400\n  },\n  success: {\n    color: '#38a169',\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});\nexport default ResetPasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","useNavigation","useRoute","authService","ButtonStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordScreen","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","error","setError","_useState7","_useState8","success","setSuccess","navigation","route","params","URLSearchParams","window","location","search","token","get","handleSubmit","_ref","_asyncToGenerator","length","resetPassword","setTimeout","navigate","_error$response","_error$response$data","console","response","data","apply","arguments","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","input","placeholder","value","onChangeText","secureTextEntry","primaryButton","onPress","buttonText","successContainer","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","width","maxWidth","height","borderWidth","borderColor","borderRadius","paddingHorizontal","textAlign"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { authService } from '../services/authService';\nimport ButtonStyles from '../styles/Button';\n\nconst ResetPasswordScreen = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  // Get token from URL query parameters\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const token = params.get('token');\n    if (!token) {\n      setError('Invalid reset link. Please request a new password reset.');\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      setError('');\n\n      // Get token from URL\n      const params = new URLSearchParams(window.location.search);\n      const token = params.get('token');\n\n      // Validate inputs\n      if (!newPassword || !confirmPassword) {\n        setError('Please fill in all fields');\n        return;\n      }\n\n      if (newPassword.length < 8) {\n        setError('Password must be at least 8 characters long');\n        return;\n      }\n\n      if (newPassword !== confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n\n      if (!token) {\n        setError('Invalid reset link. Please request a new password reset.');\n        return;\n      }\n\n      // Call API to reset password\n      await authService.resetPassword(token, newPassword);\n\n      // Show success message and clear form\n      setSuccess(true);\n      setNewPassword('');\n      setConfirmPassword('');\n\n      // Navigate to login after 2 seconds\n      setTimeout(() => {\n        navigation.navigate('Login');\n      }, 2000);\n\n    } catch (error) {\n      console.error('Reset password error:', error);\n      setError(error.response?.data?.error || 'Failed to reset password. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reset Your Password</Text>\n      \n      {!success ? (\n        <>\n          <TextInput\n            style={styles.input}\n            placeholder=\"New Password\"\n            value={newPassword}\n            onChangeText={setNewPassword}\n            secureTextEntry\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChangeText={setConfirmPassword}\n            secureTextEntry\n          />\n\n          {error ? <Text style={styles.error}>{error}</Text> : null}\n\n          <TouchableOpacity\n            style={ButtonStyles.primaryButton}\n            onPress={handleSubmit}\n          >\n            <Text style={ButtonStyles.buttonText}>Reset Password</Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <View style={styles.successContainer}>\n          <Text style={styles.success}>\n            Password reset successful! Redirecting to login...\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#6b46c1',\n  },\n  input: {\n    width: '100%',\n    maxWidth: 400,\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16,\n  },\n  error: {\n    color: '#e53e3e',\n    marginBottom: 15,\n    textAlign: 'center',\n    maxWidth: 400,\n  },\n  successContainer: {\n    alignItems: 'center',\n    maxWidth: 400,\n  },\n  success: {\n    color: '#38a169',\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n\nexport default ResetPasswordScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}