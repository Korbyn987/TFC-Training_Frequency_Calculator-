{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\src\\\\App.web.js\",\n  _this = this;\nimport React from \"react\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AboutScreen from \"./screens/AboutScreen\";\nimport RecoveryGuideScreen from \"./screens/RecoveryGuideScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LoginScreen from \"./login/login\";\nimport CreateAccount from \"./login/createAccount\";\nimport RecoveryScreen from \"./screens/RecoveryScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ButtonStyles from \"./styles/Button\";\nimport { linking } from \"./navigation/linking\";\nimport LogoutButton from \"./components/LogoutButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerRight: function headerRight() {\n          return _jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 28\n          }, _this);\n        },\n        headerStyle: {\n          backgroundColor: '#6b46c1'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Recovery Guide\") {\n            iconName = focused ? \"fitness\" : \"fitness-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"person\" : \"person-outline\";\n          } else if (route.name === \"About\") {\n            iconName = focused ? \"information-circle\" : \"information-circle-outline\";\n          }\n          return _jsxDEV(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 18\n          }, _this);\n        },\n        tabBarActiveTintColor: \"#6b46c1\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: \"TFC Home\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Recovery Guide\",\n      component: RecoveryGuideScreen,\n      options: {\n        title: \"Recovery Guide\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: \"My Profile\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), _jsxDEV(Tab.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        title: \"About TFC\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\nvar App = function App() {\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(NavigationContainer, {\n      linking: linking,\n      theme: DefaultTheme,\n      children: _jsxDEV(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: \"#6b46c1\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          }\n        },\n        children: [_jsxDEV(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            title: \"Login\",\n            headerShown: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"CreateAccount\",\n          component: CreateAccount,\n          options: {\n            title: \"Create Account\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Recovery\",\n          component: RecoveryScreen,\n          options: {\n            title: \"Account Recovery\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"ResetPassword\",\n          component: ResetPasswordScreen,\n          options: {\n            title: \"Reset Password\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this), _jsxDEV(Stack.Screen, {\n          name: \"Tabs\",\n          component: TabNavigator,\n          options: {\n            headerShown: false,\n            gestureEnabled: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, _this);\n};\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","DefaultTheme","createStackNavigator","createBottomTabNavigator","Provider","store","HomeScreen","AboutScreen","RecoveryGuideScreen","ProfileScreen","LoginScreen","CreateAccount","RecoveryScreen","ResetPasswordScreen","Ionicons","ButtonStyles","linking","LogoutButton","jsxDEV","_jsxDEV","Stack","Tab","TabNavigator","Navigator","screenOptions","_ref","route","headerRight","fileName","_jsxFileName","lineNumber","columnNumber","_this","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","title","App","theme","initialRouteName","headerShown","gestureEnabled"],"sources":["C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/src/App.web.js"],"sourcesContent":["import React from \"react\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AboutScreen from \"./screens/AboutScreen\";\nimport RecoveryGuideScreen from \"./screens/RecoveryGuideScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport LoginScreen from \"./login/login\";\nimport CreateAccount from \"./login/createAccount\";\nimport RecoveryScreen from \"./screens/RecoveryScreen\";\nimport ResetPasswordScreen from \"./screens/ResetPasswordScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport ButtonStyles from \"./styles/Button\";\nimport { linking } from \"./navigation/linking\";\nimport LogoutButton from './components/LogoutButton';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerRight: () => <LogoutButton />,\n        headerStyle: {\n          backgroundColor: '#6b46c1',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Recovery Guide\") {\n            iconName = focused ? \"fitness\" : \"fitness-outline\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"person\" : \"person-outline\";\n          } else if (route.name === \"About\") {\n            iconName = focused ? \"information-circle\" : \"information-circle-outline\";\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: \"#6b46c1\",\n        tabBarInactiveTintColor: \"gray\",\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          title: \"TFC Home\"\n        }}\n      />\n      <Tab.Screen \n        name=\"Recovery Guide\" \n        component={RecoveryGuideScreen}\n        options={{\n          title: \"Recovery Guide\"\n        }}\n      />\n      <Tab.Screen \n        name=\"Profile\" \n        component={ProfileScreen}\n        options={{\n          title: \"My Profile\"\n        }}\n      />\n      <Tab.Screen \n        name=\"About\" \n        component={AboutScreen}\n        options={{\n          title: \"About TFC\"\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <NavigationContainer linking={linking} theme={DefaultTheme}>\n        <Stack.Navigator\n          initialRouteName=\"Login\"\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: \"#6b46c1\",\n            },\n            headerTintColor: \"#fff\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n          }}\n        >\n          <Stack.Screen\n            name=\"Login\"\n            component={LoginScreen}\n            options={{\n              title: \"Login\",\n              headerShown: false\n            }}\n          />\n          <Stack.Screen\n            name=\"CreateAccount\"\n            component={CreateAccount}\n            options={{\n              title: \"Create Account\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Recovery\"\n            component={RecoveryScreen}\n            options={{\n              title: \"Account Recovery\",\n            }}\n          />\n          <Stack.Screen\n            name=\"ResetPassword\"\n            component={ResetPasswordScreen}\n            options={{\n              title: \"Reset Password\",\n            }}\n          />\n          <Stack.Screen\n            name=\"Tabs\"\n            component={TabNavigator}\n            options={{\n              headerShown: false,\n              gestureEnabled: false\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}