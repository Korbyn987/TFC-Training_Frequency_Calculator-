{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    muscleData = _useState2[0],\n    setMuscleData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editMode = _useState4[0],\n    setEditMode = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMuscle = _useState6[0],\n    setSelectedMuscle = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    editDays = _useState8[0],\n    setEditDays = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRefreshing = _useState10[0],\n    setIsRefreshing = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    streak = _useState12[0],\n    setStreak = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    achievements = _useState14[0],\n    setAchievements = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedGroup = _useState16[0],\n    setSelectedGroup = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    workoutInProgress = _useState18[0],\n    setWorkoutInProgress = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    trainedMuscles = _useState20[0],\n    setTrainedMuscles = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedMuscles = _useState22[0],\n    setSelectedMuscles = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isWorkoutModalVisible = _useState24[0],\n    setIsWorkoutModalVisible = _useState24[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    user = _useSelector.user;\n  var dispatch = useDispatch();\n  var _useState25 = useState(0),\n    _useState26 = _slicedToArray(_useState25, 2),\n    workoutTimer = _useState26[0],\n    setWorkoutTimer = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isTimerRunning = _useState28[0],\n    setIsTimerRunning = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    workoutHistory = _useState30[0],\n    setWorkoutHistory = _useState30[1];\n  var workoutTimerRef = useRef(null);\n  var scaleAnim = useRef(new Animated.Value(1)).current;\n  var UPPER_BODY = [\"Biceps\", \"Triceps\", \"Chest\", \"Shoulders\", \"Traps\", \"Back\"];\n  var LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\n  var getStatus = function getStatus(days) {\n    if (days <= 1) {\n      return \"red\";\n    } else if (days <= 3) {\n      return \"yellow\";\n    } else {\n      return \"green\";\n    }\n  };\n  var loadStreak = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedStreak = yield AsyncStorage.getItem(\"streak\");\n        if (savedStreak !== null) {\n          setStreak(parseInt(savedStreak));\n        } else {\n          setStreak(0);\n        }\n      } catch (error) {\n        console.error(\"Error loading streak:\", error);\n        setStreak(0);\n      }\n    });\n    return function loadStreak() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var saveStreak = function () {\n    var _ref3 = _asyncToGenerator(function* (value) {\n      try {\n        yield AsyncStorage.setItem(\"streak\", value.toString());\n      } catch (error) {\n        console.error(\"Error saving streak:\", error);\n      }\n    });\n    return function saveStreak(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var updateStreak = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var today = new Date().toISOString().split(\"T\")[0];\n      var lastWorkout = yield AsyncStorage.getItem(\"lastWorkout\");\n      if (lastWorkout === today) {\n        return;\n      }\n      setStreak(function (prevStreak) {\n        var newStreak = prevStreak + 1;\n        saveStreak(newStreak);\n        AsyncStorage.setItem(\"lastWorkout\", today);\n        return newStreak;\n      });\n      checkAchievements();\n    });\n    return function updateStreak() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var loadAchievements = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n        if (savedAchievements !== null) {\n          setAchievements(JSON.parse(savedAchievements));\n        }\n      } catch (error) {\n        console.error(\"Error loading achievements:\", error);\n        setAchievements([]);\n      }\n    });\n    return function loadAchievements() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var checkAchievements = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var currentStreak = yield AsyncStorage.getItem(\"streak\");\n      var savedAchievements = yield AsyncStorage.getItem(\"achievements\");\n      var prevAchievements = savedAchievements ? JSON.parse(savedAchievements) : [];\n      var newAchievements = [];\n      if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n        newAchievements.push(\"week\");\n      }\n      if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n        newAchievements.push(\"month\");\n      }\n      if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n        newAchievements.push(\"quarter\");\n      }\n      if (newAchievements.length > 0) {\n        setAchievements([].concat(_toConsumableArray(prevAchievements), newAchievements));\n        yield AsyncStorage.setItem(\"achievements\", JSON.stringify([].concat(_toConsumableArray(prevAchievements), newAchievements)));\n      }\n    });\n    return function checkAchievements() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: isAuthenticated ? _jsxDEV(_Fragment, {\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                marginRight: 8\n              }],\n              onPress: function onPress() {\n                return navigation.navigate(\"Calculator\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Calculator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [ButtonStyles.headerButton, {\n                backgroundColor: \"#553c9a\"\n              }],\n              onPress: function onPress() {\n                dispatch(logout());\n                navigation.replace(\"Login\");\n              },\n              children: _jsxDEV(Text, {\n                style: ButtonStyles.headerButtonText,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true) : _jsxDEV(TouchableOpacity, {\n            style: ButtonStyles.headerButton,\n            onPress: function onPress() {\n              return navigation.navigate(\"Login\");\n            },\n            children: _jsxDEV(Text, {\n              style: ButtonStyles.headerButtonText,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, _this);\n      }\n    });\n  }, [navigation, isAuthenticated]);\n  var loadMuscleData = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var savedData = yield AsyncStorage.getItem(\"muscleData\");\n        if (savedData !== null) {\n          setMuscleData(JSON.parse(savedData));\n        } else {\n          var initialData = MUSCLE_GROUPS.reduce(function (acc, muscle) {\n            acc[muscle] = 0;\n            return acc;\n          }, {});\n          setMuscleData(initialData);\n          yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n        }\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to load muscle data\");\n      }\n    });\n    return function loadMuscleData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var startWorkout = function startWorkout() {\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n  };\n  var endWorkout = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      setIsTimerRunning(false);\n      setWorkoutInProgress(false);\n      var workoutData = {\n        muscles: selectedMuscles,\n        duration: workoutTimer,\n        date: new Date().toISOString(),\n        userId: user == null ? void 0 : user.id\n      };\n      setWorkoutHistory(function (prev) {\n        return [workoutData].concat(_toConsumableArray(prev));\n      });\n      try {\n        var savedHistory = yield AsyncStorage.getItem(\"workoutHistory\");\n        var currentHistory = savedHistory ? JSON.parse(savedHistory) : [];\n        yield AsyncStorage.setItem(\"workoutHistory\", JSON.stringify([workoutData].concat(_toConsumableArray(currentHistory))));\n      } catch (error) {\n        console.error(\"Error saving workout history:\", error);\n      }\n      yield updateStreak();\n      setWorkoutTimer(0);\n      setSelectedMuscles([]);\n    });\n    return function endWorkout() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit(muscle) {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n  var saveEdit = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (isNaN(editDays) || editDays === \"\") {\n        Alert.alert(\"Error\", \"Please enter a valid number\");\n        return;\n      }\n      try {\n        var newData = _objectSpread(_objectSpread({}, muscleData), {}, _defineProperty({}, selectedMuscle, parseInt(editDays)));\n        setMuscleData(newData);\n        yield AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n        setEditMode(false);\n        setSelectedMuscle(null);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to save changes\");\n      }\n    });\n    return function saveEdit() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var cancelEdit = function cancelEdit() {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(function () {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(function () {\n        setWorkoutTimer(function (prev) {\n          return prev + 1;\n        });\n      }, 1000);\n    } else {\n      clearInterval(workoutTimerRef.current);\n    }\n    return function () {\n      return clearInterval(workoutTimerRef.current);\n    };\n  }, [isTimerRunning]);\n  var handleMuscleSelect = function handleMuscleSelect(muscle) {\n    setSelectedMuscles(function (prev) {\n      var newSelection = prev.includes(muscle) ? prev.filter(function (m) {\n        return m !== muscle;\n      }) : [].concat(_toConsumableArray(prev), [muscle]);\n      return newSelection;\n    });\n  };\n  var renderMuscleItem = function renderMuscleItem(_ref10) {\n    var muscle = _ref10.item;\n    var days = muscleData[muscle] || 0;\n    var status = getStatus(days);\n    return _jsxDEV(TouchableOpacity, {\n      style: styles.muscleButton,\n      onPress: function onPress() {\n        if (editMode) {\n          setEditMode(false);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        } else {\n          handleMuscleSelect(muscle);\n        }\n      },\n      onLongPress: function onLongPress() {\n        setEditMode(true);\n        setSelectedMuscle(muscle);\n        setEditDays(days.toString());\n      },\n      children: _jsxDEV(Animated.View, {\n        style: {\n          transform: [{\n            scale: scaleAnim\n          }]\n        },\n        children: _jsxDEV(View, {\n          style: styles.muscleStatus(status),\n          children: [_jsxDEV(Text, {\n            style: styles.muscleName,\n            children: muscle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.daysContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.daysText,\n              children: [days, \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: styles.editButton,\n              onPress: function onPress() {\n                return handleEdit(muscle);\n              },\n              children: _jsxDEV(Ionicons, {\n                name: \"pencil\",\n                size: 20,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, _this);\n  };\n  var renderMuscleSelectionBanner = function renderMuscleSelectionBanner() {\n    if (!workoutInProgress) return null;\n    return _jsxDEV(View, {\n      style: styles.muscleSelectionBanner,\n      children: [_jsxDEV(Text, {\n        style: styles.bannerTitle,\n        children: \"Selected Muscles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.selectedMusclesContainer,\n        children: selectedMuscles.map(function (muscle, index) {\n          return _jsxDEV(TouchableOpacity, {\n            style: styles.selectedMuscleChip,\n            onPress: function onPress() {\n              return handleMuscleSelect(muscle);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.chipText,\n              children: muscle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsxDEV(RefreshControl, {\n      refreshing: isRefreshing,\n      onRefresh: _asyncToGenerator(function* () {\n        setIsRefreshing(true);\n        yield loadMuscleData();\n        yield loadStreak();\n        yield loadAchievements();\n        setIsRefreshing(false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, _this),\n    children: [renderMuscleSelectionBanner(), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Welcome to TFC your Training Frequency Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, _this), isAuthenticated && user && _jsxDEV(Text, {\n        style: styles.welcomeUser,\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: styles.streakContainer,\n        children: [_jsxDEV(Ionicons, {\n          name: \"trophy\",\n          size: 24,\n          color: \"#FFD700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.streakText,\n          children: [streak, \" day streak!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.statsContainer,\n        children: [_jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days >= 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Ready Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.statItem,\n          children: [_jsxDEV(Text, {\n            style: styles.statNumber,\n            children: Object.values(muscleData).filter(function (days) {\n              return days < 48;\n            }).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, _this), _jsxDEV(Text, {\n            style: styles.statLabel,\n            children: \"Resting Muscles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Tap a muscle to reset its counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      data: selectedGroup === null ? MUSCLE_GROUPS : selectedGroup === \"upper\" ? UPPER_BODY : LOWER_BODY,\n      renderItem: renderMuscleItem,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      style: styles.list,\n      contentContainerStyle: styles.listContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.quickActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.startWorkoutButton],\n        onPress: function onPress() {\n          return setIsWorkoutModalVisible(true);\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"play-circle\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Start Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, styles.endWorkoutButton],\n        onPress: endWorkout,\n        disabled: !workoutInProgress || selectedMuscles.length === 0,\n        children: [_jsxDEV(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"upper\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"upper\");\n          UPPER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Upper Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.quickActionItem, selectedGroup === \"lower\" && styles.selectedGroup],\n        onPress: function onPress() {\n          setSelectedGroup(\"lower\");\n          LOWER_BODY.forEach(function (muscle) {\n            return handleMuscleSelect(muscle);\n          });\n        },\n        children: [_jsxDEV(Ionicons, {\n          name: \"body\",\n          size: 24,\n          color: \"#2196F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.quickActionText,\n          children: \"Lower Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, _this), selectedGroup !== null && _jsxDEV(TouchableOpacity, {\n      style: [styles.button, styles.secondaryButton, {\n        position: \"absolute\",\n        bottom: 12,\n        left: 16,\n        right: 16\n      }],\n      onPress: function onPress() {\n        return setSelectedGroup(null);\n      },\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"Show All Muscles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }, _this), _jsxDEV(WorkoutSelectionModal, {\n      visible: isWorkoutModalVisible,\n      onClose: function onClose() {\n        return setIsWorkoutModalVisible(false);\n      },\n      onMuscleSelect: handleMuscleSelect,\n      selectedMuscles: selectedMuscles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, _this), workoutInProgress && _jsxDEV(View, {\n      style: styles.workoutInProgressContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.workoutInProgressText,\n        children: \"Workout in Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.endWorkoutButton,\n        onPress: endWorkout,\n        children: _jsxDEV(Text, {\n          style: styles.endWorkoutButtonText,\n          children: \"End Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, _this), _jsxDEV(Modal, {\n      visible: editMode,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: [\"Edit Days for \", selectedMuscle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, _this), _jsxDEV(TextInput, {\n            style: styles.input,\n            value: editDays,\n            onChangeText: setEditDays,\n            keyboardType: \"numeric\",\n            placeholder: \"Enter number of days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, _this), _jsxDEV(View, {\n            style: styles.modalButtons,\n            children: [_jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.cancelButton],\n              onPress: function onPress() {\n                return setEditMode(false);\n              },\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              style: [styles.modalButton, styles.saveButton],\n              onPress: saveEdit,\n              children: _jsxDEV(Text, {\n                style: styles.buttonText,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, _this);\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableOpacity","FlatList","Modal","TextInput","Alert","Animated","Easing","RefreshControl","ScrollView","Ionicons","AsyncStorage","useSelector","useDispatch","logout","styles","MUSCLE_GROUPS","WorkoutBanner","WorkoutSelectionModal","useNavigation","ButtonStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","muscleData","setMuscleData","_useState3","_useState4","editMode","setEditMode","_useState5","_useState6","selectedMuscle","setSelectedMuscle","_useState7","_useState8","editDays","setEditDays","_useState9","_useState10","isRefreshing","setIsRefreshing","_useState11","_useState12","streak","setStreak","_useState13","_useState14","achievements","setAchievements","_useState15","_useState16","selectedGroup","setSelectedGroup","_useState17","_useState18","workoutInProgress","setWorkoutInProgress","_useState19","_useState20","trainedMuscles","setTrainedMuscles","_useState21","_useState22","selectedMuscles","setSelectedMuscles","_useState23","_useState24","isWorkoutModalVisible","setIsWorkoutModalVisible","_useSelector","state","auth","isAuthenticated","user","dispatch","_useState25","_useState26","workoutTimer","setWorkoutTimer","_useState27","_useState28","isTimerRunning","setIsTimerRunning","_useState29","_useState30","workoutHistory","setWorkoutHistory","workoutTimerRef","scaleAnim","Value","current","UPPER_BODY","LOWER_BODY","getStatus","days","loadStreak","_ref2","_asyncToGenerator","savedStreak","getItem","parseInt","error","console","apply","arguments","saveStreak","_ref3","value","setItem","toString","_x","updateStreak","_ref4","today","Date","toISOString","split","lastWorkout","prevStreak","newStreak","checkAchievements","loadAchievements","_ref5","savedAchievements","JSON","parse","_ref6","currentStreak","prevAchievements","newAchievements","includes","push","length","concat","_toConsumableArray","stringify","loadMuscleData","setOptions","headerRight","style","flexDirection","children","headerButton","marginRight","onPress","navigate","headerButtonText","fileName","_jsxFileName","lineNumber","columnNumber","_this","backgroundColor","replace","_ref7","savedData","initialData","reduce","acc","muscle","alert","startWorkout","endWorkout","_ref8","workoutData","muscles","duration","date","userId","id","prev","savedHistory","currentHistory","handleEdit","saveEdit","_ref9","isNaN","newData","_objectSpread","_defineProperty","cancelEdit","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","setInterval","clearInterval","handleMuscleSelect","newSelection","filter","m","renderMuscleItem","_ref10","item","status","muscleButton","onLongPress","transform","scale","muscleStatus","muscleName","daysContainer","daysText","editButton","name","size","color","renderMuscleSelectionBanner","muscleSelectionBanner","bannerTitle","selectedMusclesContainer","map","index","selectedMuscleChip","chipText","container","refreshControl","refreshing","onRefresh","header","title","welcomeUser","username","streakContainer","streakText","statsContainer","statItem","statNumber","Object","values","statLabel","subtitle","data","renderItem","keyExtractor","list","contentContainerStyle","listContainer","quickActions","quickActionItem","startWorkoutButton","quickActionText","endWorkoutButton","disabled","forEach","button","secondaryButton","position","bottom","left","right","buttonText","visible","onClose","onMuscleSelect","workoutInProgressContainer","workoutInProgressText","endWorkoutButtonText","transparent","animationType","modalContainer","modalContent","modalTitle","input","onChangeText","keyboardType","placeholder","modalButtons","modalButton","cancelButton","saveButton"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n  TextInput,\n  Alert,\n  Animated,\n  Easing,\n  RefreshControl,\n  ScrollView,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../redux/authSlice\";\nimport { styles } from \"../styles/HomeStyles\";\nimport { MUSCLE_GROUPS } from \"../constants/muscleGroups\";\nimport WorkoutBanner from \"../components/workoutBanner\";\nimport WorkoutSelectionModal from \"../components/workoutSelectionModal\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ButtonStyles from \"../styles/Button\";\n\nconst HomeScreen = ({ navigation }) => {\n  const [muscleData, setMuscleData] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [selectedMuscle, setSelectedMuscle] = useState(null);\n  const [editDays, setEditDays] = useState(\"\");\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [streak, setStreak] = useState(0);\n  const [achievements, setAchievements] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [workoutInProgress, setWorkoutInProgress] = useState(false);\n  const [trainedMuscles, setTrainedMuscles] = useState([]);\n  const [selectedMuscles, setSelectedMuscles] = useState([]);\n  const [isWorkoutModalVisible, setIsWorkoutModalVisible] = useState(false);\n  const { isAuthenticated, user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const [workoutTimer, setWorkoutTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const workoutTimerRef = useRef(null);\n\n  // Animation for muscle buttons\n  const scaleAnim = useRef(new Animated.Value(1)).current;\n\n  // Define muscle groups\n  const UPPER_BODY = [\n    \"Biceps\",\n    \"Triceps\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Traps\",\n    \"Back\",\n  ];\n  const LOWER_BODY = [\"Quads\", \"Hamstrings\", \"Glutes\", \"Calves\"];\n\n  // Function to determine muscle status based on days\n  const getStatus = (days) => {\n    if (days <= 1) {\n      return \"red\"; // Do not train\n    } else if (days <= 3) {\n      return \"yellow\"; // Caution\n    } else {\n      return \"green\"; // Safe to train\n    }\n  };\n\n  // Function to load streak from AsyncStorage\n  const loadStreak = async () => {\n    try {\n      const savedStreak = await AsyncStorage.getItem(\"streak\");\n      if (savedStreak !== null) {\n        setStreak(parseInt(savedStreak));\n      } else {\n        setStreak(0);\n      }\n    } catch (error) {\n      console.error(\"Error loading streak:\", error);\n      setStreak(0);\n    }\n  };\n\n  // Function to save streak to AsyncStorage\n  const saveStreak = async (value) => {\n    try {\n      await AsyncStorage.setItem(\"streak\", value.toString());\n    } catch (error) {\n      console.error(\"Error saving streak:\", error);\n    }\n  };\n\n  // Function to update streak when a workout is completed\n  const updateStreak = async () => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const lastWorkout = await AsyncStorage.getItem(\"lastWorkout\");\n\n    if (lastWorkout === today) {\n      // Workout already completed today\n      return;\n    }\n\n    setStreak((prevStreak) => {\n      const newStreak = prevStreak + 1;\n      saveStreak(newStreak);\n      AsyncStorage.setItem(\"lastWorkout\", today);\n      return newStreak;\n    });\n\n    // Check for achievements\n    checkAchievements();\n  };\n\n  // Function to load achievements\n  const loadAchievements = async () => {\n    try {\n      const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n      if (savedAchievements !== null) {\n        setAchievements(JSON.parse(savedAchievements));\n      }\n    } catch (error) {\n      console.error(\"Error loading achievements:\", error);\n      setAchievements([]);\n    }\n  };\n\n  // Function to check for new achievements\n  const checkAchievements = async () => {\n    const currentStreak = await AsyncStorage.getItem(\"streak\");\n    const savedAchievements = await AsyncStorage.getItem(\"achievements\");\n    const prevAchievements = savedAchievements\n      ? JSON.parse(savedAchievements)\n      : [];\n\n    const newAchievements = [];\n\n    // Check for streak achievements\n    if (currentStreak >= 7 && !prevAchievements.includes(\"week\")) {\n      newAchievements.push(\"week\");\n    }\n    if (currentStreak >= 30 && !prevAchievements.includes(\"month\")) {\n      newAchievements.push(\"month\");\n    }\n    if (currentStreak >= 90 && !prevAchievements.includes(\"quarter\")) {\n      newAchievements.push(\"quarter\");\n    }\n\n    if (newAchievements.length > 0) {\n      setAchievements([...prevAchievements, ...newAchievements]);\n      await AsyncStorage.setItem(\n        \"achievements\",\n        JSON.stringify([...prevAchievements, ...newAchievements])\n      );\n    }\n  };\n\n  useEffect(() => {\n    loadMuscleData();\n    loadStreak();\n    loadAchievements();\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <View style={{ flexDirection: \"row\" }}>\n          {isAuthenticated ? (\n            <>\n              <TouchableOpacity\n                style={[ButtonStyles.headerButton, { marginRight: 8 }]}\n                onPress={() => navigation.navigate(\"Calculator\")}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Calculator</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  ButtonStyles.headerButton,\n                  { backgroundColor: \"#553c9a\" },\n                ]}\n                onPress={() => {\n                  dispatch(logout());\n                  navigation.replace(\"Login\");\n                }}\n              >\n                <Text style={ButtonStyles.headerButtonText}>Logout</Text>\n              </TouchableOpacity>\n            </>\n          ) : (\n            <TouchableOpacity\n              style={ButtonStyles.headerButton}\n              onPress={() => navigation.navigate(\"Login\")}\n            >\n              <Text style={ButtonStyles.headerButtonText}>Login</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ),\n    });\n  }, [navigation, isAuthenticated]);\n\n  const loadMuscleData = async () => {\n    try {\n      const savedData = await AsyncStorage.getItem(\"muscleData\");\n      if (savedData !== null) {\n        setMuscleData(JSON.parse(savedData));\n      } else {\n        const initialData = MUSCLE_GROUPS.reduce((acc, muscle) => {\n          acc[muscle] = 0;\n          return acc;\n        }, {});\n        setMuscleData(initialData);\n        await AsyncStorage.setItem(\"muscleData\", JSON.stringify(initialData));\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to load muscle data\");\n    }\n  };\n\n  const startWorkout = () => {\n    if (selectedMuscles.length === 0) {\n      Alert.alert(\"Error\", \"Please select at least one muscle group to train\");\n      return;\n    }\n    setIsWorkoutModalVisible(false);\n    setWorkoutInProgress(true);\n    setIsTimerRunning(true);\n  };\n\n  const endWorkout = async () => {\n    setIsTimerRunning(false);\n    setWorkoutInProgress(false);\n\n    // Save workout data\n    const workoutData = {\n      muscles: selectedMuscles,\n      duration: workoutTimer,\n      date: new Date().toISOString(),\n      userId: user?.id,\n    };\n\n    // Update workout history\n    setWorkoutHistory((prev) => [workoutData, ...prev]);\n\n    try {\n      const savedHistory = await AsyncStorage.getItem(\"workoutHistory\");\n      const currentHistory = savedHistory ? JSON.parse(savedHistory) : [];\n      await AsyncStorage.setItem(\n        \"workoutHistory\",\n        JSON.stringify([workoutData, ...currentHistory])\n      );\n    } catch (error) {\n      console.error(\"Error saving workout history:\", error);\n    }\n\n    // Update streak\n    await updateStreak();\n\n    // Reset timer\n    setWorkoutTimer(0);\n    setSelectedMuscles([]);\n  };\n\n  const handleEdit = (muscle) => {\n    setEditMode(true);\n    setEditDays(muscleData[muscle].toString());\n    setSelectedMuscle(muscle);\n  };\n\n  const saveEdit = async () => {\n    if (isNaN(editDays) || editDays === \"\") {\n      Alert.alert(\"Error\", \"Please enter a valid number\");\n      return;\n    }\n\n    try {\n      const newData = { ...muscleData, [selectedMuscle]: parseInt(editDays) };\n      setMuscleData(newData);\n      await AsyncStorage.setItem(\"muscleData\", JSON.stringify(newData));\n      setEditMode(false);\n      setSelectedMuscle(null);\n    } catch (error) {\n      Alert.alert(\"Error\", \"Failed to save changes\");\n    }\n  };\n\n  const cancelEdit = () => {\n    setEditMode(false);\n    setSelectedMuscle(null);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n\n  useEffect(() => {\n    if (isTimerRunning) {\n      workoutTimerRef.current = setInterval(() => {\n        setWorkoutTimer((prev) => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(workoutTimerRef.current);\n    }\n    return () => clearInterval(workoutTimerRef.current);\n  }, [isTimerRunning]);\n\n  // Muscle selection and workout functions\n  const handleMuscleSelect = (muscle) => {\n    setSelectedMuscles((prev) => {\n      const newSelection = prev.includes(muscle)\n        ? prev.filter((m) => m !== muscle)\n        : [...prev, muscle];\n      return newSelection;\n    });\n  };\n\n  const renderMuscleItem = ({ item: muscle }) => {\n    const days = muscleData[muscle] || 0;\n    const status = getStatus(days);\n    return (\n      <TouchableOpacity\n        style={styles.muscleButton}\n        onPress={() => {\n          if (editMode) {\n            setEditMode(false);\n            setSelectedMuscle(muscle);\n            setEditDays(days.toString());\n          } else {\n            handleMuscleSelect(muscle);\n          }\n        }}\n        onLongPress={() => {\n          setEditMode(true);\n          setSelectedMuscle(muscle);\n          setEditDays(days.toString());\n        }}\n      >\n        <Animated.View\n          style={{\n            transform: [{ scale: scaleAnim }],\n          }}\n        >\n          <View style={styles.muscleStatus(status)}>\n            <Text style={styles.muscleName}>{muscle}</Text>\n            <View style={styles.daysContainer}>\n              <Text style={styles.daysText}>{days} days</Text>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEdit(muscle)}\n              >\n                <Ionicons name=\"pencil\" size={20} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderMuscleSelectionBanner = () => {\n    if (!workoutInProgress) return null;\n\n    return (\n      <View style={styles.muscleSelectionBanner}>\n        <Text style={styles.bannerTitle}>Selected Muscles:</Text>\n        <View style={styles.selectedMusclesContainer}>\n          {selectedMuscles.map((muscle, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.selectedMuscleChip}\n              onPress={() => handleMuscleSelect(muscle)}\n            >\n              <Text style={styles.chipText}>{muscle}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={\n        <RefreshControl\n          refreshing={isRefreshing}\n          onRefresh={async () => {\n            setIsRefreshing(true);\n            await loadMuscleData();\n            await loadStreak();\n            await loadAchievements();\n            setIsRefreshing(false);\n          }}\n        />\n      }\n    >\n      {renderMuscleSelectionBanner()}\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Welcome to TFC your Training Frequency Calculator\n        </Text>\n        {isAuthenticated && user && (\n          <Text style={styles.welcomeUser}>Welcome, {user.username}!</Text>\n        )}\n\n        {/* Streak Counter */}\n        <View style={styles.streakContainer}>\n          <Ionicons name=\"trophy\" size={24} color=\"#FFD700\" />\n          <Text style={styles.streakText}>{streak} day streak!</Text>\n        </View>\n\n        {/* Quick Stats */}\n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text style={styles.statNumber}>\n              {Object.values(muscleData).filter((days) => days >= 48).length}\n            </Text>\n            <Text style={styles.statLabel}>Ready Muscles</Text>\n          </View>\n          <View style={styles.statItem}>\n            <Text style={styles.statNumber}>\n              {Object.values(muscleData).filter((days) => days < 48).length}\n            </Text>\n            <Text style={styles.statLabel}>Resting Muscles</Text>\n          </View>\n        </View>\n      </View>\n\n      <Text style={styles.subtitle}>Tap a muscle to reset its counter</Text>\n\n      <FlatList\n        data={\n          selectedGroup === null\n            ? MUSCLE_GROUPS\n            : selectedGroup === \"upper\"\n            ? UPPER_BODY\n            : LOWER_BODY\n        }\n        renderItem={renderMuscleItem}\n        keyExtractor={(item) => item}\n        style={styles.list}\n        contentContainerStyle={styles.listContainer}\n      />\n\n      {/* Quick Actions */}\n      <View style={styles.quickActions}>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.startWorkoutButton]}\n          onPress={() => setIsWorkoutModalVisible(true)}\n        >\n          <Ionicons name=\"play-circle\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Start Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.quickActionItem, styles.endWorkoutButton]}\n          onPress={endWorkout}\n          disabled={!workoutInProgress || selectedMuscles.length === 0}\n        >\n          <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>End Workout</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"upper\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"upper\");\n            UPPER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#4CAF50\" />\n          <Text style={styles.quickActionText}>Upper Body</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[\n            styles.quickActionItem,\n            selectedGroup === \"lower\" && styles.selectedGroup,\n          ]}\n          onPress={() => {\n            setSelectedGroup(\"lower\");\n            LOWER_BODY.forEach((muscle) => handleMuscleSelect(muscle));\n          }}\n        >\n          <Ionicons name=\"body\" size={24} color=\"#2196F3\" />\n          <Text style={styles.quickActionText}>Lower Body</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Reset button to show all muscles */}\n      {selectedGroup !== null && (\n        <TouchableOpacity\n          style={[\n            styles.button,\n            styles.secondaryButton,\n            {\n              position: \"absolute\",\n              bottom: 12,\n              left: 16,\n              right: 16,\n            },\n          ]}\n          onPress={() => setSelectedGroup(null)}\n        >\n          <Text style={styles.buttonText}>Show All Muscles</Text>\n        </TouchableOpacity>\n      )}\n\n      <WorkoutSelectionModal\n        visible={isWorkoutModalVisible}\n        onClose={() => setIsWorkoutModalVisible(false)}\n        onMuscleSelect={handleMuscleSelect}\n        selectedMuscles={selectedMuscles}\n      />\n\n      {workoutInProgress && (\n        <View style={styles.workoutInProgressContainer}>\n          <Text style={styles.workoutInProgressText}>Workout in Progress</Text>\n          <TouchableOpacity\n            style={styles.endWorkoutButton}\n            onPress={endWorkout}\n          >\n            <Text style={styles.endWorkoutButtonText}>End Workout</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n\n      <Modal visible={editMode} transparent={true} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>\n              Edit Days for {selectedMuscle}\n            </Text>\n            <TextInput\n              style={styles.input}\n              value={editDays}\n              onChangeText={setEditDays}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter number of days\"\n            />\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setEditMode(false)}\n              >\n                <Text style={styles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.saveButton]}\n                onPress={saveEdit}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </ScrollView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}