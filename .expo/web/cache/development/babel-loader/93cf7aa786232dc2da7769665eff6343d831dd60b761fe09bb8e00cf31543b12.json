{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/AddExerciseScreen.js\",\n  _this = this;\nconsole.log(\"AddExerciseScreen.js loaded (start)\");\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getExercises, getMuscleGroups, initDatabase } from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useState, useEffect, useCallback } from \"react\";\nvar AddExerciseScreen = function AddExerciseScreen(_ref) {\n  var _route$params2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  console.log(\"AddExerciseScreen: component render start\");\n  var _ref2 = (route == null ? void 0 : route.params) || {},\n    muscleGroup = _ref2.muscleGroup,\n    muscleGroupId = _ref2.muscleGroupId,\n    previousExercises = _ref2.previousExercises,\n    returnToPreset = _ref2.returnToPreset,\n    onReturnToPreset = _ref2.onReturnToPreset;\n  var safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  var _useState = useState(safePreviousExercises),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedExercises = _useState2[0],\n    setSelectedExercises = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(\"All\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeGroup = _useState6[0],\n    setActiveGroup = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    muscleGroups = _useState8[0],\n    setMuscleGroups = _useState8[1];\n  var _useState9 = useState([]),\n    _useState0 = _slicedToArray(_useState9, 2),\n    exercises = _useState0[0],\n    setExercises = _useState0[1];\n  var _useState1 = useState(true),\n    _useState10 = _slicedToArray(_useState1, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  useFocusEffect(useCallback(function () {\n    var _route$params;\n    if ((_route$params = route.params) != null && _route$params.newExerciseToAdd) {\n      console.log(\"AddExerciseScreen: Detected newExerciseToAdd param\");\n      var exerciseToAdd = route.params.newExerciseToAdd;\n      navigation.setParams({\n        newExerciseToAdd: undefined\n      });\n      navigation.navigate(\"ConfigureWorkout\", {\n        addExercise: exerciseToAdd\n      });\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.newExerciseToAdd]));\n  useEffect(function () {\n    console.log(\"AddExerciseScreen: useEffect (mount)\");\n    var _ref3 = route.params || {},\n      muscleGroup = _ref3.muscleGroup,\n      muscleGroupId = _ref3.muscleGroupId;\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route]);\n  useEffect(function () {\n    console.log(\"AddExerciseScreen: useEffect (muscleGroup)\");\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n  var loadData = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var _route$params3;\n        console.log(\"AddExerciseScreen: loadData start\");\n        setLoading(true);\n        setError(null);\n        var dbInitialized = yield initDatabase();\n        console.log(\"AddExerciseScreen: initDatabase result\", dbInitialized);\n        if (!dbInitialized) {\n          throw new Error(\"Failed to initialize database\");\n        }\n        var groups;\n        if (Platform.OS === \"web\") {\n          var _require = require(\"../database/database\"),\n            STATIC_MUSCLE_GROUPS = _require.STATIC_MUSCLE_GROUPS;\n          groups = STATIC_MUSCLE_GROUPS;\n        } else {\n          groups = yield getMuscleGroups();\n        }\n        console.log(\"AddExerciseScreen: muscleGroups\", groups);\n        setMuscleGroups(groups);\n        var exercisesData;\n        if (Platform.OS === \"web\") {\n          var _require2 = require(\"../database/database\"),\n            STATIC_EXERCISES = _require2.STATIC_EXERCISES;\n          exercisesData = STATIC_EXERCISES;\n        } else {\n          exercisesData = yield getExercises();\n        }\n        console.log(\"AddExerciseScreen: exercisesData\", exercisesData);\n        if ((_route$params3 = route.params) != null && _route$params3.muscleGroupId) {\n          var _filteredExercises = exercisesData.filter(function (exercise) {\n            return exercise.muscle_group_id === route.params.muscleGroupId;\n          });\n          setExercises(_filteredExercises);\n          console.log(\"AddExerciseScreen: filteredExercises\", _filteredExercises);\n        } else {\n          setExercises(exercisesData);\n        }\n        setLoading(false);\n        console.log(\"AddExerciseScreen: loadData complete\");\n      } catch (err) {\n        setError(\"Error loading data: \" + err);\n        setLoading(false);\n        console.error(\"AddExerciseScreen: loadData error\", err);\n      }\n    });\n    return function loadData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (error) {\n    console.log(\"AddExerciseScreen: rendering error UI\", error);\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#171923'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#fc8181',\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Error: \", error));\n  }\n  if (loading) {\n    console.log(\"AddExerciseScreen: rendering loading UI\");\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#171923'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#fff',\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n  console.log(\"AddExerciseScreen: rendering main UI\");\n  var handleSelectExercise = function handleSelectExercise(exercise) {\n    setSelectedExercises(function (prev) {\n      if (prev.find(function (e) {\n        return e.id === exercise.id;\n      })) {\n        return prev.filter(function (e) {\n          return e.id !== exercise.id;\n        });\n      }\n      return [].concat(_toConsumableArray(prev), [exercise]);\n    });\n  };\n  var handleSaveExercises = function handleSaveExercises() {\n    console.log(\"[AddExerciseScreen] handleSaveExercises called\");\n    console.log(\"[AddExerciseScreen] selectedExercises:\", selectedExercises);\n    if (route.params && route.params.returnToPreset && route.params.onReturnToPreset) {\n      route.params.onReturnToPreset(_toConsumableArray(selectedExercises));\n      navigation.goBack();\n    } else {\n      console.log(\"[AddExerciseScreen] Navigating to ConfigureWorkout with selectedExercises:\", selectedExercises);\n      navigation.navigate({\n        name: \"ConfigureWorkout\",\n        params: {\n          selectedExercises: _toConsumableArray(selectedExercises)\n        },\n        merge: true\n      });\n    }\n  };\n  var safeExercises = Array.isArray(exercises) ? exercises : [];\n  var filteredExercises = function filteredExercises() {\n    var query = searchQuery.toLowerCase();\n    return safeExercises.filter(function (exercise) {\n      var matchesQuery = exercise.name.toLowerCase().includes(query);\n      var matchesGroup = activeGroup === \"All\" || exercise.muscle_group_id === activeGroup || exercise.muscleGroupId === activeGroup;\n      return matchesQuery && matchesGroup;\n    });\n  };\n  var renderMuscleGroupButton = function renderMuscleGroupButton(group) {\n    return React.createElement(TouchableOpacity, {\n      key: group ? group.id : \"all\",\n      style: [styles.groupButton, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButton],\n      onPress: function onPress() {\n        console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n        setActiveGroup(group ? group.id : \"All\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: [styles.groupButtonText, activeGroup === (group ? group.id : \"All\") && styles.activeGroupButtonText],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }\n    }, group ? group.name : \"All\"));\n  };\n  var renderExerciseItem = function renderExerciseItem(_ref5) {\n    var item = _ref5.item;\n    return React.createElement(TouchableOpacity, {\n      style: [styles.exerciseItem, selectedExercises.find(function (e) {\n        return e.id === item.id;\n      }) && styles.selectedExerciseItem],\n      onPress: function onPress() {\n        return handleSelectExercise(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.exerciseContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: [styles.exerciseText, selectedExercises.find(function (e) {\n        return e.id === item.id;\n      }) && styles.selectedExerciseText],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, item.name), item.description && React.createElement(Text, {\n      style: styles.exerciseDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, item.description)), selectedExercises.find(function (e) {\n      return e.id === item.id;\n    }) && React.createElement(Ionicons, {\n      name: \"checkmark-circle\",\n      size: 24,\n      color: \"#6b46c1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }));\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.container, {\n      paddingBottom: 80\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.searchContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"search\",\n    size: 20,\n    color: \"#666\",\n    style: styles.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.searchInput,\n    placeholder: \"Search exercises...\",\n    placeholderTextColor: \"#666\",\n    value: searchQuery,\n    onChangeText: setSearchQuery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.groupButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, renderMuscleGroupButton(null), muscleGroups.map(function (group) {\n    return renderMuscleGroupButton(group);\n  })), React.createElement(FlatList, {\n    data: filteredExercises(),\n    renderItem: renderExerciseItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    style: styles.list,\n    contentContainerStyle: styles.listContent,\n    keyboardShouldPersistTaps: \"handled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  })), selectedExercises.length > 0 && React.createElement(View, {\n    style: styles.fixedButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.saveButton, selectedExercises.length === 0 && styles.disabledButton],\n    onPress: handleSaveExercises,\n    disabled: selectedExercises.length === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.saveButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"Add \", selectedExercises.length, \" Exercise\", selectedExercises.length !== 1 ? \"s\" : \"\"))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#171923\"\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  errorText: {\n    color: \"#fc8181\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 16\n  },\n  retryButton: {\n    backgroundColor: \"#6b46c1\",\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    margin: 16,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  searchIcon: {\n    marginRight: 8\n  },\n  searchInput: {\n    flex: 1,\n    height: 48,\n    color: \"#fff\",\n    fontSize: 16\n  },\n  groupButtonContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    marginVertical: 8,\n    gap: 6\n  },\n  groupButton: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 16,\n    backgroundColor: \"#272b3a\",\n    margin: 4,\n    minWidth: 70,\n    alignItems: \"center\",\n    minHeight: 32,\n    elevation: 1,\n    borderWidth: 1,\n    borderColor: \"#4a5568\"\n  },\n  activeGroupButton: {\n    backgroundColor: \"#6b46c1\",\n    borderColor: \"#a78bfa\"\n  },\n  groupButtonText: {\n    color: \"#e2e8f0\",\n    fontSize: 13,\n    fontWeight: \"500\",\n    letterSpacing: 0.2\n  },\n  activeGroupButtonText: {\n    color: \"#fff\",\n    fontWeight: \"700\"\n  },\n  list: {\n    flex: 1\n  },\n  listContent: {\n    padding: 16\n  },\n  exerciseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  exerciseContent: {\n    flex: 1,\n    marginRight: 16\n  },\n  selectedExerciseItem: {\n    backgroundColor: \"#2D3748\",\n    borderColor: \"#6b46c1\",\n    borderWidth: 2\n  },\n  exerciseText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  exerciseDescription: {\n    color: \"#A0AEC0\",\n    fontSize: 14,\n    marginTop: 4\n  },\n  selectedExerciseText: {\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#6b46c1\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: \"center\"\n  },\n  disabledButton: {\n    backgroundColor: \"#4A5568\"\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  fixedButtonContainer: {\n    position: Platform.OS === \"web\" ? \"fixed\" : \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(23,25,35,0.96)\",\n    paddingHorizontal: 16,\n    paddingBottom: Platform.OS === \"ios\" ? 32 : 16,\n    paddingTop: 8,\n    zIndex: 100,\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});\nexport default AddExerciseScreen;","map":{"version":3,"names":["console","log","React","View","Text","TouchableOpacity","FlatList","TextInput","StyleSheet","ScrollView","ActivityIndicator","Alert","Platform","Ionicons","getExercises","getMuscleGroups","initDatabase","useFocusEffect","useState","useEffect","useCallback","AddExerciseScreen","_ref","_route$params2","navigation","route","_ref2","params","muscleGroup","muscleGroupId","previousExercises","returnToPreset","onReturnToPreset","safePreviousExercises","Array","isArray","_useState","_useState2","_slicedToArray","selectedExercises","setSelectedExercises","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","activeGroup","setActiveGroup","_useState7","_useState8","muscleGroups","setMuscleGroups","_useState9","_useState0","exercises","setExercises","_useState1","_useState10","loading","setLoading","_useState11","_useState12","error","setError","_route$params","newExerciseToAdd","exerciseToAdd","setParams","undefined","navigate","addExercise","_ref3","loadData","_ref4","_asyncToGenerator","_route$params3","dbInitialized","Error","groups","OS","_require","require","STATIC_MUSCLE_GROUPS","exercisesData","_require2","STATIC_EXERCISES","_filteredExercises","filter","exercise","muscle_group_id","err","apply","arguments","createElement","style","flex","justifyContent","alignItems","backgroundColor","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","handleSelectExercise","prev","find","e","id","concat","_toConsumableArray","handleSaveExercises","goBack","name","merge","safeExercises","filteredExercises","query","toLowerCase","matchesQuery","includes","matchesGroup","renderMuscleGroupButton","group","key","styles","groupButton","activeGroupButton","onPress","groupButtonText","activeGroupButtonText","renderExerciseItem","_ref5","item","exerciseItem","selectedExerciseItem","exerciseContent","exerciseText","selectedExerciseText","description","exerciseDescription","size","container","paddingBottom","searchContainer","searchIcon","searchInput","placeholder","placeholderTextColor","value","onChangeText","groupButtonContainer","map","data","renderItem","keyExtractor","toString","list","contentContainerStyle","listContent","keyboardShouldPersistTaps","length","fixedButtonContainer","saveButton","disabledButton","disabled","saveButtonText","create","loadingContainer","errorContainer","padding","errorText","textAlign","marginBottom","retryButton","paddingHorizontal","paddingVertical","borderRadius","retryButtonText","fontWeight","flexDirection","margin","marginRight","height","flexWrap","marginVertical","gap","minWidth","minHeight","elevation","borderWidth","borderColor","letterSpacing","marginTop","position","left","right","bottom","paddingTop","zIndex","width"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/screens/AddExerciseScreen.js"],"sourcesContent":["console.log(\"AddExerciseScreen.js loaded (start)\");\n\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  TextInput,\n  StyleSheet,\n  ScrollView,\n  ActivityIndicator,\n  Alert,\n  Platform\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  getExercises,\n  getMuscleGroups,\n  initDatabase\n} from \"../database/database\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { useState, useEffect, useCallback } from \"react\";\n\nconst AddExerciseScreen = ({ navigation, route }) => {\n  console.log(\"AddExerciseScreen: component render start\");\n  const { muscleGroup, muscleGroupId, previousExercises, returnToPreset, onReturnToPreset } = route?.params || {};\n  const safePreviousExercises = Array.isArray(previousExercises) ? previousExercises : [];\n  const [selectedExercises, setSelectedExercises] = useState(safePreviousExercises);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeGroup, setActiveGroup] = useState(\"All\");\n  const [muscleGroups, setMuscleGroups] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useFocusEffect(\n    useCallback(() => {\n      if (route.params?.newExerciseToAdd) {\n        console.log(\"AddExerciseScreen: Detected newExerciseToAdd param\");\n        const exerciseToAdd = route.params.newExerciseToAdd;\n        navigation.setParams({ newExerciseToAdd: undefined });\n        navigation.navigate(\"ConfigureWorkout\", { addExercise: exerciseToAdd });\n      }\n    }, [route.params?.newExerciseToAdd])\n  );\n\n  useEffect(() => {\n    console.log(\"AddExerciseScreen: useEffect (mount)\");\n    const { muscleGroup, muscleGroupId } = route.params || {};\n    if (muscleGroup && muscleGroupId) {\n      setActiveGroup(muscleGroup);\n    }\n    loadData();\n  }, [route]);\n\n  useEffect(() => {\n    console.log(\"AddExerciseScreen: useEffect (muscleGroup)\");\n    if (muscleGroup) {\n      setActiveGroup(muscleGroup);\n    }\n  }, [muscleGroup]);\n\n  const loadData = async () => {\n    try {\n      console.log(\"AddExerciseScreen: loadData start\");\n      setLoading(true);\n      setError(null);\n      // Initialize database\n      const dbInitialized = await initDatabase();\n      console.log(\"AddExerciseScreen: initDatabase result\", dbInitialized);\n      if (!dbInitialized) {\n        throw new Error(\"Failed to initialize database\");\n      }\n      // Load muscle groups\n      let groups;\n      if (Platform.OS === \"web\") {\n        const { STATIC_MUSCLE_GROUPS } = require(\"../database/database\");\n        groups = STATIC_MUSCLE_GROUPS;\n      } else {\n        groups = await getMuscleGroups();\n      }\n      console.log(\"AddExerciseScreen: muscleGroups\", groups);\n      setMuscleGroups(groups);\n      // Load exercises\n      let exercisesData;\n      if (Platform.OS === \"web\") {\n        const { STATIC_EXERCISES } = require(\"../database/database\");\n        exercisesData = STATIC_EXERCISES;\n      } else {\n        exercisesData = await getExercises();\n      }\n      console.log(\"AddExerciseScreen: exercisesData\", exercisesData);\n      if (route.params?.muscleGroupId) {\n        const filteredExercises = exercisesData.filter(\n          (exercise) => exercise.muscle_group_id === route.params.muscleGroupId\n        );\n        setExercises(filteredExercises);\n        console.log(\"AddExerciseScreen: filteredExercises\", filteredExercises);\n      } else {\n        setExercises(exercisesData);\n      }\n      setLoading(false);\n      console.log(\"AddExerciseScreen: loadData complete\");\n    } catch (err) {\n      setError(\"Error loading data: \" + err);\n      setLoading(false);\n      console.error(\"AddExerciseScreen: loadData error\", err);\n    }\n  };\n\n  // Fallback UI for debugging\n  if (error) {\n    console.log(\"AddExerciseScreen: rendering error UI\", error);\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#171923' }}>\n        <Text style={{ color: '#fc8181', fontSize: 18 }}>Error: {error}</Text>\n      </View>\n    );\n  }\n  if (loading) {\n    console.log(\"AddExerciseScreen: rendering loading UI\");\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#171923' }}>\n        <Text style={{ color: '#fff', fontSize: 18 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  console.log(\"AddExerciseScreen: rendering main UI\");\n\n  const handleSelectExercise = (exercise) => {\n    setSelectedExercises((prev) => {\n      if (prev.find((e) => e.id === exercise.id)) {\n        return prev.filter((e) => e.id !== exercise.id);\n      }\n      return [...prev, exercise];\n    });\n  };\n\n  const handleSaveExercises = () => {\n    console.log(\"[AddExerciseScreen] handleSaveExercises called\");\n    console.log(\"[AddExerciseScreen] selectedExercises:\", selectedExercises);\n    if (route.params && route.params.returnToPreset && route.params.onReturnToPreset) {\n      route.params.onReturnToPreset([...selectedExercises]);\n      navigation.goBack();\n    } else {\n      console.log(\"[AddExerciseScreen] Navigating to ConfigureWorkout with selectedExercises:\", selectedExercises);\n      navigation.navigate({\n        name: \"ConfigureWorkout\",\n        params: { selectedExercises: [...selectedExercises] },\n        merge: true\n      });\n    }\n  };\n\n  // Defensive: exercises fallback\n  const safeExercises = Array.isArray(exercises) ? exercises : [];\n\n  const filteredExercises = () => {\n    const query = searchQuery.toLowerCase();\n    return safeExercises.filter((exercise) => {\n      const matchesQuery = exercise.name.toLowerCase().includes(query);\n      const matchesGroup =\n        activeGroup === \"All\" ||\n        exercise.muscle_group_id === activeGroup ||\n        exercise.muscleGroupId === activeGroup; // fallback for different naming\n      return matchesQuery && matchesGroup;\n    });\n  };\n\n  const renderMuscleGroupButton = (group) => (\n    <TouchableOpacity\n      key={group ? group.id : \"all\"}\n      style={[\n        styles.groupButton,\n        activeGroup === (group ? group.id : \"All\") && styles.activeGroupButton\n      ]}\n      onPress={() => {\n        console.log(\"Selected muscle group:\", group ? group.name : \"All\");\n        setActiveGroup(group ? group.id : \"All\");\n      }}\n    >\n      <Text\n        style={[\n          styles.groupButtonText,\n          activeGroup === (group ? group.id : \"All\") &&\n            styles.activeGroupButtonText\n        ]}\n      >\n        {group ? group.name : \"All\"}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const renderExerciseItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.exerciseItem,\n        selectedExercises.find((e) => e.id === item.id) &&\n          styles.selectedExerciseItem\n      ]}\n      onPress={() => handleSelectExercise(item)}\n    >\n      <View style={styles.exerciseContent}>\n        <Text\n          style={[\n            styles.exerciseText,\n            selectedExercises.find((e) => e.id === item.id) &&\n              styles.selectedExerciseText\n          ]}\n        >\n          {item.name}\n        </Text>\n        {item.description && (\n          <Text style={styles.exerciseDescription}>{item.description}</Text>\n        )}\n      </View>\n      {selectedExercises.find((e) => e.id === item.id) && (\n        <Ionicons name=\"checkmark-circle\" size={24} color=\"#6b46c1\" />\n      )}\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={[styles.container, { paddingBottom: 80 }]}>\n        <View style={styles.searchContainer}>\n          <Ionicons\n            name=\"search\"\n            size={20}\n            color=\"#666\"\n            style={styles.searchIcon}\n          />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search exercises...\"\n            placeholderTextColor=\"#666\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n        </View>\n\n        <View style={styles.groupButtonContainer}>\n          {renderMuscleGroupButton(null)}\n          {muscleGroups.map((group) => renderMuscleGroupButton(group))}\n        </View>\n\n        <FlatList\n          data={filteredExercises()}\n          renderItem={renderExerciseItem}\n          keyExtractor={(item) => item.id.toString()}\n          style={styles.list}\n          contentContainerStyle={styles.listContent}\n          keyboardShouldPersistTaps=\"handled\"\n        />\n      </View>\n      {selectedExercises.length > 0 && (\n        <View style={styles.fixedButtonContainer}>\n          <TouchableOpacity\n            style={[\n              styles.saveButton,\n              selectedExercises.length === 0 && styles.disabledButton\n            ]}\n            onPress={handleSaveExercises}\n            disabled={selectedExercises.length === 0}\n          >\n            <Text style={styles.saveButtonText}>\n              Add {selectedExercises.length} Exercise\n              {selectedExercises.length !== 1 ? \"s\" : \"\"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#171923\"\n  },\n  loadingContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorContainer: {\n    flex: 1,\n    backgroundColor: \"#171923\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  errorText: {\n    color: \"#fc8181\",\n    fontSize: 16,\n    textAlign: \"center\",\n    marginBottom: 16\n  },\n  retryButton: {\n    backgroundColor: \"#6b46c1\",\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    margin: 16,\n    paddingHorizontal: 16,\n    borderRadius: 8\n  },\n  searchIcon: {\n    marginRight: 8\n  },\n  searchInput: {\n    flex: 1,\n    height: 48,\n    color: \"#fff\",\n    fontSize: 16\n  },\n  groupButtonContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    marginVertical: 8,\n    gap: 6 // for React Native Web, otherwise use margin\n  },\n  groupButton: {\n    paddingVertical: 4,\n    paddingHorizontal: 10,\n    borderRadius: 16,\n    backgroundColor: \"#272b3a\",\n    margin: 4,\n    minWidth: 70,\n    alignItems: \"center\",\n    minHeight: 32,\n    elevation: 1,\n    borderWidth: 1,\n    borderColor: \"#4a5568\"\n  },\n  activeGroupButton: {\n    backgroundColor: \"#6b46c1\",\n    borderColor: \"#a78bfa\"\n  },\n  groupButtonText: {\n    color: \"#e2e8f0\",\n    fontSize: 13,\n    fontWeight: \"500\",\n    letterSpacing: 0.2\n  },\n  activeGroupButtonText: {\n    color: \"#fff\",\n    fontWeight: \"700\"\n  },\n  list: {\n    flex: 1\n  },\n  listContent: {\n    padding: 16\n  },\n  exerciseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#2D3748\",\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  exerciseContent: {\n    flex: 1,\n    marginRight: 16\n  },\n  selectedExerciseItem: {\n    backgroundColor: \"#2D3748\",\n    borderColor: \"#6b46c1\",\n    borderWidth: 2\n  },\n  exerciseText: {\n    color: \"#fff\",\n    fontSize: 16\n  },\n  exerciseDescription: {\n    color: \"#A0AEC0\",\n    fontSize: 14,\n    marginTop: 4\n  },\n  selectedExerciseText: {\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#6b46c1\",\n    margin: 16,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: \"center\"\n  },\n  disabledButton: {\n    backgroundColor: \"#4A5568\"\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  fixedButtonContainer: {\n    position: Platform.OS === \"web\" ? \"fixed\" : \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(23,25,35,0.96)\",\n    paddingHorizontal: 16,\n    paddingBottom: Platform.OS === \"ios\" ? 32 : 16,\n    paddingTop: 8,\n    zIndex: 100,\n    width: \"100%\",\n    alignItems: \"center\"\n  }\n});\nexport default AddExerciseScreen;\n"],"mappings":";;;;;AAAAA,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;AAElD,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAa1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SACEC,YAAY,EACZC,eAAe,EACfC,YAAY;AAEd,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAExD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAA8B;EAAA,IAAAC,cAAA;EAAA,IAAxBC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAC5CzB,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EACxD,IAAAyB,KAAA,GAA4F,CAAAD,KAAK,oBAALA,KAAK,CAAEE,MAAM,KAAI,CAAC,CAAC;IAAvGC,WAAW,GAAAF,KAAA,CAAXE,WAAW;IAAEC,aAAa,GAAAH,KAAA,CAAbG,aAAa;IAAEC,iBAAiB,GAAAJ,KAAA,CAAjBI,iBAAiB;IAAEC,cAAc,GAAAL,KAAA,CAAdK,cAAc;IAAEC,gBAAgB,GAAAN,KAAA,CAAhBM,gBAAgB;EACvF,IAAMC,qBAAqB,GAAGC,KAAK,CAACC,OAAO,CAACL,iBAAiB,CAAC,GAAGA,iBAAiB,GAAG,EAAE;EACvF,IAAAM,SAAA,GAAkDlB,QAAQ,CAACe,qBAAqB,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1EG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAC9C,IAAAI,UAAA,GAAsCvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAsC3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAwC/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAkCnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA8BvC,QAAQ,CAAC,IAAI,CAAC;IAAAwC,WAAA,GAAApB,cAAA,CAAAmB,UAAA;IAArCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAAG,WAAA,GAA0B3C,QAAQ,CAAC,IAAI,CAAC;IAAA4C,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAjCE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EAEtB7C,cAAc,CACZG,WAAW,CAAC,YAAM;IAAA,IAAA6C,aAAA;IAChB,KAAAA,aAAA,GAAIxC,KAAK,CAACE,MAAM,aAAZsC,aAAA,CAAcC,gBAAgB,EAAE;MAClClE,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjE,IAAMkE,aAAa,GAAG1C,KAAK,CAACE,MAAM,CAACuC,gBAAgB;MACnD1C,UAAU,CAAC4C,SAAS,CAAC;QAAEF,gBAAgB,EAAEG;MAAU,CAAC,CAAC;MACrD7C,UAAU,CAAC8C,QAAQ,CAAC,kBAAkB,EAAE;QAAEC,WAAW,EAAEJ;MAAc,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,EAAA5C,cAAA,GAACE,KAAK,CAACE,MAAM,qBAAZJ,cAAA,CAAc2C,gBAAgB,CAAC,CACrC,CAAC;EAED/C,SAAS,CAAC,YAAM;IACdnB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnD,IAAAuE,KAAA,GAAuC/C,KAAK,CAACE,MAAM,IAAI,CAAC,CAAC;MAAjDC,WAAW,GAAA4C,KAAA,CAAX5C,WAAW;MAAEC,aAAa,GAAA2C,KAAA,CAAb3C,aAAa;IAClC,IAAID,WAAW,IAAIC,aAAa,EAAE;MAChCmB,cAAc,CAACpB,WAAW,CAAC;IAC7B;IACA6C,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAAChD,KAAK,CAAC,CAAC;EAEXN,SAAS,CAAC,YAAM;IACdnB,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,IAAI2B,WAAW,EAAE;MACfoB,cAAc,CAACpB,WAAW,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAM6C,QAAQ;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC3B,IAAI;QAAA,IAAAC,cAAA;QACF5E,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD2D,UAAU,CAAC,IAAI,CAAC;QAChBI,QAAQ,CAAC,IAAI,CAAC;QAEd,IAAMa,aAAa,SAAS7D,YAAY,CAAC,CAAC;QAC1ChB,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE4E,aAAa,CAAC;QACpE,IAAI,CAACA,aAAa,EAAE;UAClB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QAEA,IAAIC,MAAM;QACV,IAAInE,QAAQ,CAACoE,EAAE,KAAK,KAAK,EAAE;UACzB,IAAAC,QAAA,GAAiCC,OAAO,uBAAuB,CAAC;YAAxDC,oBAAoB,GAAAF,QAAA,CAApBE,oBAAoB;UAC5BJ,MAAM,GAAGI,oBAAoB;QAC/B,CAAC,MAAM;UACLJ,MAAM,SAAShE,eAAe,CAAC,CAAC;QAClC;QACAf,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE8E,MAAM,CAAC;QACtD3B,eAAe,CAAC2B,MAAM,CAAC;QAEvB,IAAIK,aAAa;QACjB,IAAIxE,QAAQ,CAACoE,EAAE,KAAK,KAAK,EAAE;UACzB,IAAAK,SAAA,GAA6BH,OAAO,uBAAuB,CAAC;YAApDI,gBAAgB,GAAAD,SAAA,CAAhBC,gBAAgB;UACxBF,aAAa,GAAGE,gBAAgB;QAClC,CAAC,MAAM;UACLF,aAAa,SAAStE,YAAY,CAAC,CAAC;QACtC;QACAd,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEmF,aAAa,CAAC;QAC9D,KAAAR,cAAA,GAAInD,KAAK,CAACE,MAAM,aAAZiD,cAAA,CAAc/C,aAAa,EAAE;UAC/B,IAAM0D,kBAAiB,GAAGH,aAAa,CAACI,MAAM,CAC5C,UAACC,QAAQ;YAAA,OAAKA,QAAQ,CAACC,eAAe,KAAKjE,KAAK,CAACE,MAAM,CAACE,aAAa;UAAA,CACvE,CAAC;UACD2B,YAAY,CAAC+B,kBAAiB,CAAC;UAC/BvF,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEsF,kBAAiB,CAAC;QACxE,CAAC,MAAM;UACL/B,YAAY,CAAC4B,aAAa,CAAC;QAC7B;QACAxB,UAAU,CAAC,KAAK,CAAC;QACjB5D,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACrD,CAAE,QAAO0F,GAAG,EAAE;QACZ3B,QAAQ,CAAC,sBAAsB,GAAG2B,GAAG,CAAC;QACtC/B,UAAU,CAAC,KAAK,CAAC;QACjB5D,OAAO,CAAC+D,KAAK,CAAC,mCAAmC,EAAE4B,GAAG,CAAC;MACzD;IACF,CAAC;IAAA,gBA9CKlB,QAAQA,CAAA;MAAA,OAAAC,KAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;EAAA,GA8Cb;EAGD,IAAI9B,KAAK,EAAE;IACT/D,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE8D,KAAK,CAAC;IAC3D,OACE7D,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;MAAC4F,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnGxG,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;MAAC2F,KAAK,EAAE;QAAEY,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAR,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,SAAO,EAAC3C,KAAY,CACjE,CAAC;EAEX;EACA,IAAIJ,OAAO,EAAE;IACX3D,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACtD,OACEC,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;MAAC4F,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnGxG,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;MAAC2F,KAAK,EAAE;QAAEY,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAAR,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,YAAgB,CAC1D,CAAC;EAEX;EAEA1G,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EAEnD,IAAM4G,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIpB,QAAQ,EAAK;IACzCjD,oBAAoB,CAAC,UAACsE,IAAI,EAAK;MAC7B,IAAIA,IAAI,CAACC,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,EAAE,KAAKxB,QAAQ,CAACwB,EAAE;MAAA,EAAC,EAAE;QAC1C,OAAOH,IAAI,CAACtB,MAAM,CAAC,UAACwB,CAAC;UAAA,OAAKA,CAAC,CAACC,EAAE,KAAKxB,QAAQ,CAACwB,EAAE;QAAA,EAAC;MACjD;MACA,UAAAC,MAAA,CAAAC,kBAAA,CAAWL,IAAI,IAAErB,QAAQ;IAC3B,CAAC,CAAC;EACJ,CAAC;EAED,IAAM2B,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCpH,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7DD,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEsC,iBAAiB,CAAC;IACxE,IAAId,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAACI,cAAc,IAAIN,KAAK,CAACE,MAAM,CAACK,gBAAgB,EAAE;MAChFP,KAAK,CAACE,MAAM,CAACK,gBAAgB,CAAAmF,kBAAA,CAAK5E,iBAAiB,CAAC,CAAC;MACrDf,UAAU,CAAC6F,MAAM,CAAC,CAAC;IACrB,CAAC,MAAM;MACLrH,OAAO,CAACC,GAAG,CAAC,4EAA4E,EAAEsC,iBAAiB,CAAC;MAC5Gf,UAAU,CAAC8C,QAAQ,CAAC;QAClBgD,IAAI,EAAE,kBAAkB;QACxB3F,MAAM,EAAE;UAAEY,iBAAiB,EAAA4E,kBAAA,CAAM5E,iBAAiB;QAAE,CAAC;QACrDgF,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC;EAGD,IAAMC,aAAa,GAAGtF,KAAK,CAACC,OAAO,CAACoB,SAAS,CAAC,GAAGA,SAAS,GAAG,EAAE;EAE/D,IAAMkE,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAMC,KAAK,GAAG/E,WAAW,CAACgF,WAAW,CAAC,CAAC;IACvC,OAAOH,aAAa,CAAChC,MAAM,CAAC,UAACC,QAAQ,EAAK;MACxC,IAAMmC,YAAY,GAAGnC,QAAQ,CAAC6B,IAAI,CAACK,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC;MAChE,IAAMI,YAAY,GAChB/E,WAAW,KAAK,KAAK,IACrB0C,QAAQ,CAACC,eAAe,KAAK3C,WAAW,IACxC0C,QAAQ,CAAC5D,aAAa,KAAKkB,WAAW;MACxC,OAAO6E,YAAY,IAAIE,YAAY;IACrC,CAAC,CAAC;EACJ,CAAC;EAED,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,KAAK;IAAA,OACpC9H,KAAA,CAAA4F,aAAA,CAACzF,gBAAgB;MACf4H,GAAG,EAAED,KAAK,GAAGA,KAAK,CAACf,EAAE,GAAG,KAAM;MAC9BlB,KAAK,EAAE,CACLmC,MAAM,CAACC,WAAW,EAClBpF,WAAW,MAAMiF,KAAK,GAAGA,KAAK,CAACf,EAAE,GAAG,KAAK,CAAC,IAAIiB,MAAM,CAACE,iBAAiB,CACtE;MACFC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbrI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE+H,KAAK,GAAGA,KAAK,CAACV,IAAI,GAAG,KAAK,CAAC;QACjEtE,cAAc,CAACgF,KAAK,GAAGA,KAAK,CAACf,EAAE,GAAG,KAAK,CAAC;MAC1C,CAAE;MAAAb,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEFxG,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;MACH2F,KAAK,EAAE,CACLmC,MAAM,CAACI,eAAe,EACtBvF,WAAW,MAAMiF,KAAK,GAAGA,KAAK,CAACf,EAAE,GAAG,KAAK,CAAC,IACxCiB,MAAM,CAACK,qBAAqB,CAC9B;MAAAnC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDsB,KAAK,GAAGA,KAAK,CAACV,IAAI,GAAG,KAClB,CACU,CAAC;EAAA,CACpB;EAED,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAChCxI,KAAA,CAAA4F,aAAA,CAACzF,gBAAgB;MACf0F,KAAK,EAAE,CACLmC,MAAM,CAACS,YAAY,EACnBpG,iBAAiB,CAACwE,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,EAAE,KAAKyB,IAAI,CAACzB,EAAE;MAAA,EAAC,IAC7CiB,MAAM,CAACU,oBAAoB,CAC7B;MACFP,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQxB,oBAAoB,CAAC6B,IAAI,CAAC;MAAA,CAAC;MAAAtC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE1CxG,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;MAAC4F,KAAK,EAAEmC,MAAM,CAACW,eAAgB;MAAAzC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClCxG,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;MACH2F,KAAK,EAAE,CACLmC,MAAM,CAACY,YAAY,EACnBvG,iBAAiB,CAACwE,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,EAAE,KAAKyB,IAAI,CAACzB,EAAE;MAAA,EAAC,IAC7CiB,MAAM,CAACa,oBAAoB,CAC7B;MAAA3C,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEDgC,IAAI,CAACpB,IACF,CAAC,EACNoB,IAAI,CAACM,WAAW,IACf9I,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;MAAC2F,KAAK,EAAEmC,MAAM,CAACe,mBAAoB;MAAA7C,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEgC,IAAI,CAACM,WAAkB,CAE/D,CAAC,EACNzG,iBAAiB,CAACwE,IAAI,CAAC,UAACC,CAAC;MAAA,OAAKA,CAAC,CAACC,EAAE,KAAKyB,IAAI,CAACzB,EAAE;IAAA,EAAC,IAC9C/G,KAAA,CAAA4F,aAAA,CAACjF,QAAQ;MAACyG,IAAI,EAAC,kBAAkB;MAAC4B,IAAI,EAAE,EAAG;MAACvC,KAAK,EAAC,SAAS;MAAAP,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAE/C,CAAC;EAAA,CACpB;EAED,OACExG,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;IAAC4F,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvBxG,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;IAAC4F,KAAK,EAAE,CAACmC,MAAM,CAACiB,SAAS,EAAE;MAAEC,aAAa,EAAE;IAAG,CAAC,CAAE;IAAAhD,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrDxG,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;IAAC4F,KAAK,EAAEmC,MAAM,CAACmB,eAAgB;IAAAjD,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClCxG,KAAA,CAAA4F,aAAA,CAACjF,QAAQ;IACPyG,IAAI,EAAC,QAAQ;IACb4B,IAAI,EAAE,EAAG;IACTvC,KAAK,EAAC,MAAM;IACZZ,KAAK,EAAEmC,MAAM,CAACoB,UAAW;IAAAlD,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1B,CAAC,EACFxG,KAAA,CAAA4F,aAAA,CAACvF,SAAS;IACRwF,KAAK,EAAEmC,MAAM,CAACqB,WAAY;IAC1BC,WAAW,EAAC,qBAAqB;IACjCC,oBAAoB,EAAC,MAAM;IAC3BC,KAAK,EAAE/G,WAAY;IACnBgH,YAAY,EAAE/G,cAAe;IAAAwD,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACG,CAAC,EAEPxG,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;IAAC4F,KAAK,EAAEmC,MAAM,CAAC0B,oBAAqB;IAAAxD,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtCqB,uBAAuB,CAAC,IAAI,CAAC,EAC7B5E,YAAY,CAAC0G,GAAG,CAAC,UAAC7B,KAAK;IAAA,OAAKD,uBAAuB,CAACC,KAAK,CAAC;EAAA,EACvD,CAAC,EAEP9H,KAAA,CAAA4F,aAAA,CAACxF,QAAQ;IACPwJ,IAAI,EAAErC,iBAAiB,CAAC,CAAE;IAC1BsC,UAAU,EAAEvB,kBAAmB;IAC/BwB,YAAY,EAAE,SAAdA,YAAYA,CAAGtB,IAAI;MAAA,OAAKA,IAAI,CAACzB,EAAE,CAACgD,QAAQ,CAAC,CAAC;IAAA,CAAC;IAC3ClE,KAAK,EAAEmC,MAAM,CAACgC,IAAK;IACnBC,qBAAqB,EAAEjC,MAAM,CAACkC,WAAY;IAC1CC,yBAAyB,EAAC,SAAS;IAAAjE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpC,CACG,CAAC,EACNnE,iBAAiB,CAAC+H,MAAM,GAAG,CAAC,IAC3BpK,KAAA,CAAA4F,aAAA,CAAC3F,IAAI;IAAC4F,KAAK,EAAEmC,MAAM,CAACqC,oBAAqB;IAAAnE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvCxG,KAAA,CAAA4F,aAAA,CAACzF,gBAAgB;IACf0F,KAAK,EAAE,CACLmC,MAAM,CAACsC,UAAU,EACjBjI,iBAAiB,CAAC+H,MAAM,KAAK,CAAC,IAAIpC,MAAM,CAACuC,cAAc,CACvD;IACFpC,OAAO,EAAEjB,mBAAoB;IAC7BsD,QAAQ,EAAEnI,iBAAiB,CAAC+H,MAAM,KAAK,CAAE;IAAAlE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEzCxG,KAAA,CAAA4F,aAAA,CAAC1F,IAAI;IAAC2F,KAAK,EAAEmC,MAAM,CAACyC,cAAe;IAAAvE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAC9B,EAACnE,iBAAiB,CAAC+H,MAAM,EAAC,WAC9B,EAAC/H,iBAAiB,CAAC+H,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EACpC,CACU,CACd,CAEJ,CAAC;AAEX,CAAC;AAED,IAAMpC,MAAM,GAAG1H,UAAU,CAACoK,MAAM,CAAC;EAC/BzB,SAAS,EAAE;IACTnD,IAAI,EAAE,CAAC;IACPG,eAAe,EAAE;EACnB,CAAC;EACD0E,gBAAgB,EAAE;IAChB7E,IAAI,EAAE,CAAC;IACPG,eAAe,EAAE,SAAS;IAC1BF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACD4E,cAAc,EAAE;IACd9E,IAAI,EAAE,CAAC;IACPG,eAAe,EAAE,SAAS;IAC1BF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpB6E,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTrE,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZqE,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDC,WAAW,EAAE;IACXhF,eAAe,EAAE,SAAS;IAC1BiF,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDC,eAAe,EAAE;IACf5E,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZ4E,UAAU,EAAE;EACd,CAAC;EACDnC,eAAe,EAAE;IACfoC,aAAa,EAAE,KAAK;IACpBvF,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BuF,MAAM,EAAE,EAAE;IACVN,iBAAiB,EAAE,EAAE;IACrBE,YAAY,EAAE;EAChB,CAAC;EACDhC,UAAU,EAAE;IACVqC,WAAW,EAAE;EACf,CAAC;EACDpC,WAAW,EAAE;IACXvD,IAAI,EAAE,CAAC;IACP4F,MAAM,EAAE,EAAE;IACVjF,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDgD,oBAAoB,EAAE;IACpB6B,aAAa,EAAE,KAAK;IACpBI,QAAQ,EAAE,MAAM;IAChB5F,cAAc,EAAE,QAAQ;IACxB6F,cAAc,EAAE,CAAC;IACjBC,GAAG,EAAE;EACP,CAAC;EACD5D,WAAW,EAAE;IACXkD,eAAe,EAAE,CAAC;IAClBD,iBAAiB,EAAE,EAAE;IACrBE,YAAY,EAAE,EAAE;IAChBnF,eAAe,EAAE,SAAS;IAC1BuF,MAAM,EAAE,CAAC;IACTM,QAAQ,EAAE,EAAE;IACZ9F,UAAU,EAAE,QAAQ;IACpB+F,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDhE,iBAAiB,EAAE;IACjBjC,eAAe,EAAE,SAAS;IAC1BiG,WAAW,EAAE;EACf,CAAC;EACD9D,eAAe,EAAE;IACf3B,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZ4E,UAAU,EAAE,KAAK;IACjBa,aAAa,EAAE;EACjB,CAAC;EACD9D,qBAAqB,EAAE;IACrB5B,KAAK,EAAE,MAAM;IACb6E,UAAU,EAAE;EACd,CAAC;EACDtB,IAAI,EAAE;IACJlE,IAAI,EAAE;EACR,CAAC;EACDoE,WAAW,EAAE;IACXW,OAAO,EAAE;EACX,CAAC;EACDpC,YAAY,EAAE;IACZ8C,aAAa,EAAE,KAAK;IACpBxF,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1B4E,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE,CAAC;IACfJ,YAAY,EAAE;EAChB,CAAC;EACDrC,eAAe,EAAE;IACf7C,IAAI,EAAE,CAAC;IACP2F,WAAW,EAAE;EACf,CAAC;EACD/C,oBAAoB,EAAE;IACpBzC,eAAe,EAAE,SAAS;IAC1BiG,WAAW,EAAE,SAAS;IACtBD,WAAW,EAAE;EACf,CAAC;EACDrD,YAAY,EAAE;IACZnC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE;EACZ,CAAC;EACDqC,mBAAmB,EAAE;IACnBtC,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZ0F,SAAS,EAAE;EACb,CAAC;EACDvD,oBAAoB,EAAE;IACpByC,UAAU,EAAE;EACd,CAAC;EACDhB,UAAU,EAAE;IACVrE,eAAe,EAAE,SAAS;IAC1BuF,MAAM,EAAE,EAAE;IACVX,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE,CAAC;IACfpF,UAAU,EAAE;EACd,CAAC;EACDuE,cAAc,EAAE;IACdtE,eAAe,EAAE;EACnB,CAAC;EACDwE,cAAc,EAAE;IACdhE,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZ4E,UAAU,EAAE;EACd,CAAC;EACDjB,oBAAoB,EAAE;IACpBgC,QAAQ,EAAE3L,QAAQ,CAACoE,EAAE,KAAK,KAAK,GAAG,OAAO,GAAG,UAAU;IACtDwH,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTvG,eAAe,EAAE,qBAAqB;IACtCiF,iBAAiB,EAAE,EAAE;IACrBhC,aAAa,EAAExI,QAAQ,CAACoE,EAAE,KAAK,KAAK,GAAG,EAAE,GAAG,EAAE;IAC9C2H,UAAU,EAAE,CAAC;IACbC,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,MAAM;IACb3G,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACF,eAAe7E,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}