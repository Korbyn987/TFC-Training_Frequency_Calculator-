{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from 'redux';\nimport authReducer from \"./authSlice\";\nimport workoutReducer from \"./workoutSlice\";\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  whitelist: ['workout', 'auth']\n};\nvar rootReducer = combineReducers({\n  workout: workoutReducer,\n  auth: authReducer\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n      }\n    });\n  }\n});\nvar persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["configureStore","persistStore","persistReducer","AsyncStorage","combineReducers","authReducer","workoutReducer","persistConfig","key","storage","whitelist","rootReducer","workout","auth","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/korbynirvin/Desktop/TFC(Training_Frequency_Calculator)/TFC/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from 'redux';\nimport authReducer from \"./authSlice\";\nimport workoutReducer from \"./workoutSlice\";\n\n// Configuration for persisting the Redux store\nconst persistConfig = {\n  key: 'root',\n  storage: AsyncStorage,\n  // Only persist these reducers\n  whitelist: ['workout', 'auth']\n};\n\n// Combine reducers\nconst rootReducer = combineReducers({\n  workout: workoutReducer,\n  auth: authReducer\n});\n\n// Create a persisted reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Configure the store with the persisted reducer\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }),\n});\n\n// Create a persistor object for the store\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAGrB,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEN,YAAY;EAErBO,SAAS,EAAE,CAAC,SAAS,EAAE,MAAM;AAC/B,CAAC;AAGD,IAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,OAAO,EAAEN,cAAc;EACvBO,IAAI,EAAER;AACR,CAAC,CAAC;AAGF,IAAMS,gBAAgB,GAAGZ,cAAc,CAACK,aAAa,EAAEI,WAAW,CAAC;AAGnE,IAAMI,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAE,SAAZA,UAAUA,CAAGC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QAEjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;MACzD;IACF,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAGF,IAAMC,SAAS,GAAGpB,YAAY,CAACc,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}