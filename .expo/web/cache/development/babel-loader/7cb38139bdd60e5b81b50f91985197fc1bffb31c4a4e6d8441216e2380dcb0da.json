{"ast":null,"code":"import { CALLBACK_TYPE } from \"../gesture\";\nimport { Reanimated } from \"../reanimatedWrapper\";\nimport { GestureStateManager } from \"../gestureStateManager\";\nimport { State } from \"../../../State\";\nimport { TouchEventType } from \"../../../TouchEventType\";\nimport { tagMessage } from \"../../../utils\";\nvar _worklet_6740083841975_init_data = {\n  code: \"function getHandler(type, gesture) {\\n  const {\\n    CALLBACK_TYPE\\n  } = this._closure;\\n  switch (type) {\\n    case CALLBACK_TYPE.BEGAN:\\n      return gesture.onBegin;\\n    case CALLBACK_TYPE.START:\\n      return gesture.onStart;\\n    case CALLBACK_TYPE.UPDATE:\\n      return gesture.onUpdate;\\n    case CALLBACK_TYPE.CHANGE:\\n      return gesture.onChange;\\n    case CALLBACK_TYPE.END:\\n      return gesture.onEnd;\\n    case CALLBACK_TYPE.FINALIZE:\\n      return gesture.onFinalize;\\n    case CALLBACK_TYPE.TOUCHES_DOWN:\\n      return gesture.onTouchesDown;\\n    case CALLBACK_TYPE.TOUCHES_MOVE:\\n      return gesture.onTouchesMove;\\n    case CALLBACK_TYPE.TOUCHES_UP:\\n      return gesture.onTouchesUp;\\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\\n      return gesture.onTouchesCancelled;\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getHandler\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"_closure\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AAOA,SAAAA,UAASA,CAAWC,IAAA,EAAIC,OAAE,EAAO;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG/B,QAAQH,IAAI;IACV,KAAKE,aAAa,CAACE,KAAK;MACtB,OAAOH,OAAO,CAACI,OAAO;IAExB,KAAKH,aAAa,CAACI,KAAK;MACtB,OAAOL,OAAO,CAACM,OAAO;IAExB,KAAKL,aAAa,CAACM,MAAM;MACvB,OAAOP,OAAO,CAACQ,QAAQ;IAEzB,KAAKP,aAAa,CAACQ,MAAM;MACvB,OAAOT,OAAO,CAACU,QAAQ;IAEzB,KAAKT,aAAa,CAACU,GAAG;MACpB,OAAOX,OAAO,CAACY,KAAK;IAEtB,KAAKX,aAAa,CAACY,QAAQ;MACzB,OAAOb,OAAO,CAACc,UAAU;IAE3B,KAAKb,aAAa,CAACc,YAAY;MAC7B,OAAOf,OAAO,CAACgB,aAAa;IAE9B,KAAKf,aAAa,CAACgB,YAAY;MAC7B,OAAOjB,OAAO,CAACkB,aAAa;IAE9B,KAAKjB,aAAa,CAACkB,UAAU;MAC3B,OAAOnB,OAAO,CAACoB,WAAW;IAE5B,KAAKnB,aAAa,CAACoB,iBAAiB;MAClC,OAAOrB,OAAO,CAACsB,kBAAkB;EACrC;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar getHandler = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _f = function _f(type, gesture) {\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  };\n  _f._closure = {\n    CALLBACK_TYPE: CALLBACK_TYPE\n  };\n  _f.__initData = _worklet_6740083841975_init_data;\n  _f.__workletHash = 6740083841975;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_14936855169047_init_data = {\n  code: \"function touchEventTypeToCallbackType(eventType) {\\n  const {\\n    TouchEventType,\\n    CALLBACK_TYPE\\n  } = this._closure;\\n  switch (eventType) {\\n    case TouchEventType.TOUCHES_DOWN:\\n      return CALLBACK_TYPE.TOUCHES_DOWN;\\n    case TouchEventType.TOUCHES_MOVE:\\n      return CALLBACK_TYPE.TOUCHES_MOVE;\\n    case TouchEventType.TOUCHES_UP:\\n      return CALLBACK_TYPE.TOUCHES_UP;\\n    case TouchEventType.TOUCHES_CANCELLED:\\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\\n  }\\n  return CALLBACK_TYPE.UNDEFINED;\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"touchEventTypeToCallbackType\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"CALLBACK_TYPE\\\",\\\"_closure\\\",\\\"TOUCHES_DOWN\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA2CA,SAAAA,4BAASA,CAA6BC,SAAA,EAAS;EAAA;IAAAC,cAAA;IAAAC;EAAA,SAAAC,QAAA;EAG7C,QAAQH,SAAS;IACf,KAAKC,cAAc,CAACG,YAAY;MAC9B,OAAOF,aAAa,CAACE,YAAY;IAEnC,KAAKH,cAAc,CAACI,YAAY;MAC9B,OAAOH,aAAa,CAACG,YAAY;IAEnC,KAAKJ,cAAc,CAACK,UAAU;MAC5B,OAAOJ,aAAa,CAACI,UAAU;IAEjC,KAAKL,cAAc,CAACM,iBAAiB;MACnC,OAAOL,aAAa,CAACK,iBAAiB;EAC1C;EAEA,OAAOL,aAAa,CAACM,SAAS;AAChC\\\",\\\"ignoreList\\\":[]}\"\n};\nvar touchEventTypeToCallbackType = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f(eventType) {\n    switch (eventType) {\n      case TouchEventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case TouchEventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case TouchEventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case TouchEventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  };\n  _f._closure = {\n    TouchEventType: TouchEventType,\n    CALLBACK_TYPE: CALLBACK_TYPE\n  };\n  _f.__initData = _worklet_14936855169047_init_data;\n  _f.__workletHash = 14936855169047;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13267337103250_init_data = {\n  code: \"function runWorklet(type, gesture, event, ...args) {\\n  const {\\n    getHandler,\\n    tagMessage\\n  } = this._closure;\\n  const handler = getHandler(type, gesture);\\n  if (gesture.isWorklet[type]) {\\n    handler === null || handler === void 0 ? void 0 : handler(event, ...args);\\n  } else if (handler) {\\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runWorklet\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"args\\\",\\\"getHandler\\\",\\\"tagMessage\\\",\\\"_closure\\\",\\\"handler\\\",\\\"isWorklet\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA+DA,SAAAA,UAASA,CAAWC,IAAA,EAAIC,OAAE,EAAOC,KAAE,EAAK,GAAEC,IAAG,EAAI;EAAA;IAAAC,UAAA;IAAAC;EAAA,SAAAC,QAAA;EAG/C,MAAMC,OAAO,GAAGH,UAAU,CAACJ,IAAI,EAAEC,OAAO,CAAC;EAEzC,IAAIA,OAAO,CAACO,SAAS,CAACR,IAAI,CAAC,EAAE;IAG3BO,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACL,KAAK,EAAE,GAAGC,IAAI,CAAC;EAC3E,CAAC,MAAM,IAAII,OAAO,EAAE;IAClBE,OAAO,CAACC,IAAI,CAACL,UAAU,CAAC,6CAA6C,CAAC,CAAC;EACzE;AACF\\\",\\\"ignoreList\\\":[]}\"\n};\nvar runWorklet = function () {\n  var _e = [new global.Error(), -3, -27];\n  var _f = function _f(type, gesture, event) {\n    var handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        args[_key - 3] = arguments[_key];\n      }\n      handler === null || handler === void 0 ? void 0 : handler.apply(void 0, [event].concat(args));\n    } else if (handler) {\n      console.warn(tagMessage('Animated gesture callback must be a worklet'));\n    }\n  };\n  _f._closure = {\n    getHandler: getHandler,\n    tagMessage: tagMessage\n  };\n  _f.__initData = _worklet_13267337103250_init_data;\n  _f.__workletHash = 13267337103250;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_6011490867213_init_data = {\n  code: \"function isStateChangeEvent(event) {\\n  return event.oldState != null;\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isStateChangeEvent\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AA6EA,SAAAA,kBAASA,CAAmBC,KAAA,EAAK;EAG/B,OAAOA,KAAK,CAACC,QAAQ,IAAI,IAAI;AAC/B\\\",\\\"ignoreList\\\":[]}\"\n};\nvar isStateChangeEvent = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(event) {\n    return event.oldState != null;\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_6011490867213_init_data;\n  _f.__workletHash = 6011490867213;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_10181097307677_init_data = {\n  code: \"function isTouchEvent(event) {\\n  return event.eventType != null;\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isTouchEvent\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"AAmFA,SAAAA,YAASA,CAAaC,KAAA,EAAK;EAGzB,OAAOA,KAAK,CAACC,SAAS,IAAI,IAAI;AAChC\\\",\\\"ignoreList\\\":[]}\"\n};\nvar isTouchEvent = function () {\n  var _e = [new global.Error(), 1, -27];\n  var _f = function _f(event) {\n    return event.eventType != null;\n  };\n  _f._closure = {};\n  _f.__initData = _worklet_10181097307677_init_data;\n  _f.__workletHash = 10181097307677;\n  _f.__stackDetails = _e;\n  _f.__version = \"3.3.0\";\n  return _f;\n}();\nvar _worklet_13008155115072_init_data = {\n  code: \"function anonymous(event) {\\n  const {\\n    sharedHandlersCallbacks,\\n    isStateChangeEvent,\\n    State,\\n    runWorklet,\\n    CALLBACK_TYPE,\\n    lastUpdateEvent,\\n    isTouchEvent,\\n    stateControllers,\\n    GestureStateManager,\\n    TouchEventType,\\n    touchEventTypeToCallbackType\\n  } = this._closure;\\n  const currentCallback = sharedHandlersCallbacks.value;\\n  if (!currentCallback) {\\n    return;\\n  }\\n  for (let i = 0; i < currentCallback.length; i++) {\\n    const gesture = currentCallback[i];\\n    if (event.handlerTag !== gesture.handlerTag) {\\n      continue;\\n    }\\n    if (isStateChangeEvent(event)) {\\n      if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\\n        runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\\n      } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\\n        runWorklet(CALLBACK_TYPE.START, gesture, event);\\n        lastUpdateEvent.value[gesture.handlerTag] = undefined;\\n      } else if (event.oldState !== event.state && event.state === State.END) {\\n        if (event.oldState === State.ACTIVE) {\\n          runWorklet(CALLBACK_TYPE.END, gesture, event, true);\\n        }\\n        runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\\n      } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\\n        if (event.oldState === State.ACTIVE) {\\n          runWorklet(CALLBACK_TYPE.END, gesture, event, false);\\n        }\\n        runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\\n      }\\n    } else if (isTouchEvent(event)) {\\n      if (!stateControllers[i]) {\\n        stateControllers[i] = GestureStateManager.create(event.handlerTag);\\n      }\\n      if (event.eventType !== TouchEventType.UNDETERMINED) {\\n        runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\\n      }\\n    } else {\\n      runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\\n      if (gesture.onChange && gesture.changeEventCalculator) {\\n        var _gesture$changeEventC;\\n        runWorklet(CALLBACK_TYPE.CHANGE, gesture, (_gesture$changeEventC = gesture.changeEventCalculator) === null || _gesture$changeEventC === void 0 ? void 0 : _gesture$changeEventC.call(gesture, event, lastUpdateEvent.value[gesture.handlerTag]));\\n        lastUpdateEvent.value[gesture.handlerTag] = event;\\n      }\\n    }\\n  }\\n}\",\n  location: \"C:\\\\Users\\\\adamh\\\\OneDrive - University of Central Missouri\\\\Desktop\\\\TFC\\\\TFC-Training_Frequency_Calculator-\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\GestureDetector\\\\useAnimatedGesture.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"event\\\",\\\"sharedHandlersCallbacks\\\",\\\"isStateChangeEvent\\\",\\\"State\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"lastUpdateEvent\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"_closure\\\",\\\"currentCallback\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"oldState\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"create\\\",\\\"eventType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"_gesture$changeEventC\\\",\\\"CHANGE\\\",\\\"call\\\"],\\\"sources\\\":[\\\"C:/Users/adamh/OneDrive - University of Central Missouri/Desktop/TFC/TFC-Training_Frequency_Calculator-/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function useAnimatedGesture(preparedGesture, needsRebuild) {\n  if (!Reanimated) {\n    return;\n  }\n  var sharedHandlersCallbacks = Reanimated.useSharedValue(null);\n  var lastUpdateEvent = Reanimated.useSharedValue([]);\n  var stateControllers = [];\n  var callback = function () {\n    var _e = [new global.Error(), -12, -27];\n    var _f = function _f(event) {\n      var currentCallback = sharedHandlersCallbacks.value;\n      if (!currentCallback) {\n        return;\n      }\n      for (var i = 0; i < currentCallback.length; i++) {\n        var gesture = currentCallback[i];\n        if (event.handlerTag !== gesture.handlerTag) {\n          continue;\n        }\n        if (isStateChangeEvent(event)) {\n          if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (event.oldState !== event.state && event.state === State.END) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n          if (event.eventType !== TouchEventType.UNDETERMINED) {\n            runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            var _gesture$changeEventC;\n            runWorklet(CALLBACK_TYPE.CHANGE, gesture, (_gesture$changeEventC = gesture.changeEventCalculator) === null || _gesture$changeEventC === void 0 ? void 0 : _gesture$changeEventC.call(gesture, event, lastUpdateEvent.value[gesture.handlerTag]));\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    };\n    _f._closure = {\n      sharedHandlersCallbacks: sharedHandlersCallbacks,\n      isStateChangeEvent: isStateChangeEvent,\n      State: State,\n      runWorklet: runWorklet,\n      CALLBACK_TYPE: CALLBACK_TYPE,\n      lastUpdateEvent: lastUpdateEvent,\n      isTouchEvent: isTouchEvent,\n      stateControllers: stateControllers,\n      GestureStateManager: GestureStateManager,\n      TouchEventType: TouchEventType,\n      touchEventTypeToCallbackType: touchEventTypeToCallbackType\n    };\n    _f.__initData = _worklet_13008155115072_init_data;\n    _f.__workletHash = 13008155115072;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }();\n  var event = Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}","map":{"version":3,"names":["CALLBACK_TYPE","Reanimated","GestureStateManager","State","TouchEventType","tagMessage","_worklet_6740083841975_init_data","code","location","sourceMap","getHandler","_e","global","Error","_f","type","gesture","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","_closure","__initData","__workletHash","__stackDetails","__version","_worklet_14936855169047_init_data","touchEventTypeToCallbackType","eventType","UNDEFINED","_worklet_13267337103250_init_data","runWorklet","event","handler","isWorklet","_len","arguments","length","args","Array","_key","apply","concat","console","warn","_worklet_6011490867213_init_data","isStateChangeEvent","oldState","_worklet_10181097307677_init_data","isTouchEvent","_worklet_13008155115072_init_data","useAnimatedGesture","preparedGesture","needsRebuild","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","currentCallback","value","i","handlerTag","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","call","useEvent","animatedEventHandler","animatedHandlers"],"sources":["C:\\Users\\adamh\\OneDrive - University of Central Missouri\\Desktop\\TFC\\TFC-Training_Frequency_Calculator-\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\GestureDetector\\useAnimatedGesture.ts"],"sourcesContent":["import { HandlerCallbacks, CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nimport { AttachedGestureState } from './types';\n\nfunction getHandler(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>\n) {\n  'worklet';\n  switch (type) {\n    case CALLBACK_TYPE.BEGAN:\n      return gesture.onBegin;\n    case CALLBACK_TYPE.START:\n      return gesture.onStart;\n    case CALLBACK_TYPE.UPDATE:\n      return gesture.onUpdate;\n    case CALLBACK_TYPE.CHANGE:\n      return gesture.onChange;\n    case CALLBACK_TYPE.END:\n      return gesture.onEnd;\n    case CALLBACK_TYPE.FINALIZE:\n      return gesture.onFinalize;\n    case CALLBACK_TYPE.TOUCHES_DOWN:\n      return gesture.onTouchesDown;\n    case CALLBACK_TYPE.TOUCHES_MOVE:\n      return gesture.onTouchesMove;\n    case CALLBACK_TYPE.TOUCHES_UP:\n      return gesture.onTouchesUp;\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\n      return gesture.onTouchesCancelled;\n  }\n}\n\nfunction touchEventTypeToCallbackType(\n  eventType: TouchEventType\n): CALLBACK_TYPE {\n  'worklet';\n  switch (eventType) {\n    case TouchEventType.TOUCHES_DOWN:\n      return CALLBACK_TYPE.TOUCHES_DOWN;\n    case TouchEventType.TOUCHES_MOVE:\n      return CALLBACK_TYPE.TOUCHES_MOVE;\n    case TouchEventType.TOUCHES_UP:\n      return CALLBACK_TYPE.TOUCHES_UP;\n    case TouchEventType.TOUCHES_CANCELLED:\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\n  }\n  return CALLBACK_TYPE.UNDEFINED;\n}\n\nfunction runWorklet(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>,\n  event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n  ...args: unknown[]\n) {\n  'worklet';\n  const handler = getHandler(type, gesture);\n  if (gesture.isWorklet[type]) {\n    // @ts-ignore Logic below makes sure the correct event is send to the\n    // correct handler.\n    handler?.(event, ...args);\n  } else if (handler) {\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\n  }\n}\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  'worklet';\n  // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  'worklet';\n  return event.eventType != null;\n}\n\nexport function useAnimatedGesture(\n  preparedGesture: AttachedGestureState,\n  needsRebuild: boolean\n) {\n  if (!Reanimated) {\n    return;\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag !== gesture.handlerTag) {\n        continue;\n      }\n\n      if (isStateChangeEvent(event)) {\n        if (\n          event.oldState === State.UNDETERMINED &&\n          event.state === State.BEGAN\n        ) {\n          runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n        } else if (\n          (event.oldState === State.BEGAN ||\n            event.oldState === State.UNDETERMINED) &&\n          event.state === State.ACTIVE\n        ) {\n          runWorklet(CALLBACK_TYPE.START, gesture, event);\n          lastUpdateEvent.value[gesture.handlerTag] = undefined;\n        } else if (\n          event.oldState !== event.state &&\n          event.state === State.END\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n        } else if (\n          (event.state === State.FAILED || event.state === State.CANCELLED) &&\n          event.state !== event.oldState\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n        }\n      } else if (isTouchEvent(event)) {\n        if (!stateControllers[i]) {\n          stateControllers[i] = GestureStateManager.create(event.handlerTag);\n        }\n\n        if (event.eventType !== TouchEventType.UNDETERMINED) {\n          runWorklet(\n            touchEventTypeToCallbackType(event.eventType),\n            gesture,\n            event,\n            stateControllers[i]\n          );\n        }\n      } else {\n        runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n        if (gesture.onChange && gesture.changeEventCalculator) {\n          runWorklet(\n            CALLBACK_TYPE.CHANGE,\n            gesture,\n            gesture.changeEventCalculator?.(\n              event,\n              lastUpdateEvent.value[gesture.handlerTag]\n            )\n          );\n\n          lastUpdateEvent.value[gesture.handlerTag] = event;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    needsRebuild\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}